{"$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0.json","version": "2.1.0","runs": [{"tool": {"driver": {"name": "dependency-check","version": "6.1.5","informationUri": "https://jeremylong.github.io/DependencyCheck/"},"properties": {"disclaimer": "Dependency-Check is an open source tool performing a best effort analysis of 3rd party dependencies; false positives and false negatives may exist in the analysis performed by the tool. Use of the tool and the reporting provided constitutes acceptance for use in an AS IS condition, and there are NO warranties, implied or otherwise, with regard to the analysis or its use. Any use of the tool and the reporting provided is at the userâ€™s risk. In no event shall the copyright holder or OWASP be held liable for any damages whatsoever arising out of or in connection with the use of this tool, the analysis performed, or the resulting report.","nvd": "This report contains data retrieved from the National Vulnerability Database: http://nvd.nist.gov","npm": "This report may contain data retrieved from the NPM Public Advisories: https://www.npmjs.com/advisories","retirejs": "This report may contain data retrieved from the RetireJS community: https://retirejs.github.io/retire.js/","ossindex": "This report may contain data retrieved from the Sonatype OSS Index: https://ossindex.sonatype.org","NVD CVE Checked": "2021-07-08T22:36:00","NVD CVE Modified": "2021-07-08T22:00:03","VersionCheckOn": "2021-07-08T22:36:00"}},"artifacts": [{"description": {"text": "Ultimate JDBC Connection Pool"},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/zaxxer\/HikariCP\/2.5.1\/HikariCP-2.5.1.jar"},"hashes": {"md5": "4fd401dee8e525cbb8403476381e34cd","sha1": "b896b711e2d98fedf403de590559a123b5fbf1a6","sha256": "3cf7bc5258414b77613e8d8ef0ce63b3ae1c53a441fd95b9ea335ec051c652b2"},"properties": {"license": "The Apache Software License, Version 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/com.zaxxer\/HikariCP@2.5.1"}},{"description": {"text": "Library of one-dimensional arrays that can store up to 2^63 elements."},"location": {"uri": "file:///\/root\/.m2\/repository\/pl\/edu\/icm\/JLargeArrays\/1.5\/JLargeArrays-1.5.jar"},"hashes": {"md5": "9e9af6183a8ad44b01b4b76a34a56821","sha1": "0fe1350c7b5537c144fb0af39206e212ad1bbbe2","sha256": "6dca5ab23e1fdb9190a257c04687a9ea19111c36b6ec9478bce6b2a128ca1aeb"},"properties": {"license": "BSD 2-Clause: http:\/\/opensource.org\/licenses\/BSD-2-Clause","id1": "pkg:maven\/pl.edu.icm\/JLargeArrays@1.5"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/com\/github\/wendykierp\/JTransforms\/3.1\/JTransforms-3.1.jar"},"hashes": {"md5": "2d8ae6ebfdefa987a7edfa718e8f7815","sha1": "f1f6d3c9c9bc04f848e38bdb77dea01e8764a01f","sha256": "d9dffa3e27793040dccb97b054d95267df46e669c396bf1ca4f3b085069bc2d5"},"properties": {"license": "BSD 2-Clause: http:\/\/opensource.org\/licenses\/BSD-2-Clause","id1": "pkg:maven\/com.github.wendykierp\/JTransforms@3.1"}},{"description": {"text": "Roaring bitmaps are compressed bitmaps (also called bitsets) which tend to outperform conventional compressed bitmaps such as WAH or Concise."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/roaringbitmap\/RoaringBitmap\/0.9.0\/RoaringBitmap-0.9.0.jar"},"hashes": {"md5": "3a2f793dea78050c9f4c119c0608c6de","sha1": "4cfebd5d429c2c7067b3e1f58ac99b5578244c7b","sha256": "136654f903175a612e30c67f36fa975552ed47556c61b309916bd2bbc77dea94"},"properties": {"license": "Apache 2: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.roaringbitmap\/RoaringBitmap@0.9.0"}},{"description": {"text": "StringTemplate is a java template engine for generating source code,\nweb pages, emails, or any other formatted text output.\n\nStringTemplate is particularly good at multi-targeted code generators,\nmultiple site skins, and internationalization\/localization. \n\nIt evolved over years of effort developing jGuru.com. \n\nStringTemplate also generates the stringtemplate website: http:\/\/www.stringtemplate.org\nand powers the ANTLR v3 code generator. Its distinguishing characteristic \nis that unlike other engines, it strictly enforces model-view separation.\n\nStrict separation makes websites and code generators more flexible\nand maintainable; it also provides an excellent defense against malicious\ntemplate authors.\n\nThere are currently about 600 StringTemplate source downloads a month.\n    "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/antlr\/ST4\/4.0.4\/ST4-4.0.4.jar"},"hashes": {"md5": "06856c607f242639cd52ef2b4c63ebc9","sha1": "467a2aa12be6d0f0f68c70eecf6714ab733027ac","sha256": "17cc49dc535a0fbe58c3a8634e774572bed31eb73415e9ce9d2703b977bf356f"},"properties": {"license": "BSD licence: http:\/\/antlr.org\/license.html","id1": "pkg:maven\/org.antlr\/ST4@4.0.4"}},{"description": {"text": "The JavaBeans(TM) Activation Framework is used by the JavaMail(TM) API to manage MIME data"},"location": {"uri": "file:///\/root\/.m2\/repository\/javax\/activation\/activation\/1.1.1\/activation-1.1.1.jar"},"hashes": {"md5": "46a37512971d8eca81c3fcf245bf07d2","sha1": "485de3a253e23f645037828c07f1d7f1af40763a","sha256": "ae475120e9fcd99b4b00b38329bd61cdc5eb754eee03fe66c01f50e137724f99"},"properties": {"license": "COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) Version 1.0: https:\/\/glassfish.dev.java.net\/public\/CDDLv1.0.html","id1": "pkg:maven\/javax.activation\/activation@1.1.1"}},{"description": {"text": "Compression algorithms"},"location": {"uri": "file:///\/root\/.m2\/repository\/io\/airlift\/aircompressor\/0.19\/aircompressor-0.19.jar"},"hashes": {"md5": "81bf4fbd1e98347ff56298125b20fad1","sha1": "54aeba52678f0b47418e79c083d1b41c328feed9","sha256": "7322c5861620bc4aa5c05c2900906d3962c67d1c5fb6503f7e1265f019325617"},"properties": {"license": "Apache License 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/io.airlift\/aircompressor@0.19"}},{"description": {"text": "core"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/typelevel\/algebra_2.12\/2.0.0-M2\/algebra_2.12-2.0.0-M2.jar"},"hashes": {"md5": "da22bde6d9f36850719375f788c8c3dc","sha1": "6bf17cf21e11b4132d42aeedc392c8c9cb21ac6e","sha256": "461acb40d654f78288908cfb298600b9ee60f77c9e74f9e883c7b2f9a21fe0a5"},"properties": {"license": "MIT: http:\/\/opensource.org\/licenses\/MIT","id1": "pkg:maven\/org.typelevel\/algebra_2.12@2.0.0-M2"}},{"description": {"text": "A set of annotations used for code inspection support and code documentation."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/jetbrains\/annotations\/17.0.0\/annotations-17.0.0.jar"},"hashes": {"md5": "7b06437ed47fa7b4a8ec8909f4fb9022","sha1": "8ceead41f4e71821919dbdb7a9847608f1a938cb","sha256": "195fb0da046d55bb042e91543484cf1da68b02bb7afbfe031f229e45ac84b3f2"},"properties": {"license": "The Apache Software License, Version 2.0: https:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.jetbrains\/annotations@17.0.0"}},{"description": {"text": "A framework for constructing recognizers, compilers, and translators from grammatical descriptions containing Java, C#, C++, or Python actions."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/antlr\/antlr-runtime\/3.5.2\/antlr-runtime-3.5.2.jar"},"hashes": {"md5": "1fbbae2cb72530207c20b797bdabd029","sha1": "cd9cd41361c155f3af0f653009dcecb08d8b4afd","sha256": "ce3fc8ecb10f39e9a3cddcbb2ce350d272d9cd3d0b1e18e6fe73c3b9389c8734"},"properties": {"id1": "pkg:maven\/org.antlr\/antlr-runtime@3.5.2"}},{"description": {"text": "The ANTLR 4 Runtime"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/antlr\/antlr4-runtime\/4.8\/antlr4-runtime-4.8.jar"},"hashes": {"md5": "f9386bb150f5cd38d3c161093724b50e","sha1": "7fe453b678b71c87c6677cef26f6b0cd96b26586","sha256": "2337df5d81e715b39aeea07aac46ad47e4f1f9e9cd7c899f124f425913efdcf8"},"properties": {"license": "http:\/\/www.antlr.org\/license.html","id1": "pkg:maven\/org.antlr\/antlr4-runtime@4.8"}},{"description": {"text": "Dependency Injection Kernel"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/glassfish\/hk2\/external\/aopalliance-repackaged\/2.6.1\/aopalliance-repackaged-2.6.1.jar"},"hashes": {"md5": "0237846ebdaa7db36b356044a373ffba","sha1": "b2eb0a83bcbb44cc5d25f8b18f23be116313a638","sha256": "bad77f9278d753406360af9e4747bd9b3161554ea9cd3d62411a0ae1f2c141fd"},"properties": {"license": "http:\/\/www.eclipse.org\/legal\/epl-2.0, https:\/\/www.gnu.org\/software\/classpath\/license.html","id1": "pkg:maven\/org.glassfish.hk2.external\/aopalliance-repackaged@2.6.1"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/dev\/ludovic\/netlib\/arpack\/2.2.0\/arpack-2.2.0.jar"},"hashes": {"md5": "5f2639cb0d6b708e7ba84028577f8617","sha1": "c43ec0fa862a84533bfcdb57c7b38da3406897ce","sha256": "7a621f1a077f1bbc4bb815c6d4dfc225a1f871f0ef88fd729ff11559d315ad1a"},"properties": {"id1": "pkg:maven\/dev.ludovic.netlib\/arpack@2.2.0"}},{"description": {"text": "Java APIs for the BLAS, LAPACK, and ARPACK Fortran libraries as translated through F2J."},"location": {"uri": "file:///\/root\/.m2\/repository\/net\/sourceforge\/f2j\/arpack_combined_all\/0.1\/arpack_combined_all-0.1.jar"},"hashes": {"md5": "83d82dd480da2aeba6429e746453ec0b","sha1": "225619a060b42605b4d9fd4af11815664abf26eb","sha256": "9964fb948ef213548a79b23dd480af9d72f1450824fa006bbfea211ac1ffa6dc"},"properties": {"license": "The BSD License: http:\/\/www.opensource.org\/licenses\/bsd-license.php","id1": "pkg:maven\/net.sourceforge.f2j\/arpack_combined_all@0.1"}},{"description": {"text": "Core off-heap memory management libraries for Arrow ValueVectors."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/arrow\/arrow-memory-core\/2.0.0\/arrow-memory-core-2.0.0.jar"},"hashes": {"md5": "2afc876a6c3dcdb2e01660ae37847295","sha1": "88fe8d6d38b08ac9eef183ff65f92e68504c8b3d","sha256": "d27560b1c7fb9494425bb4e53a735340e578d8c60efc356edbc72e305547dd0a"},"properties": {"id1": "pkg:maven\/org.apache.arrow\/arrow-memory-core@2.0.0","vid1": "cpe:2.3:a:apache:arrow:2.0.0:*:*:*:*:*:*:*"}},{"description": {"text": "ASM, a very small and fast Java bytecode manipulation framework"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/ow2\/asm\/asm\/7.1\/asm-7.1.jar"},"hashes": {"md5": "04fc92647ce25b41121683674a50dfdf","sha1": "fa29aa438674ff19d5e1386d2c3527a0267f291e","sha256": "4ab2fa2b6d2cc9ccb1eaa05ea329c407b47b13ed2915f62f8c4b8cc96258d4de"},"properties": {"license": "BSD: http:\/\/asm.ow2.org\/license.html","id1": "pkg:maven\/org.ow2.asm\/asm@7.1"}},{"description": {"text": "Static code analysis API of ASM, a very small and fast Java bytecode manipulation framework"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/ow2\/asm\/asm-analysis\/7.1\/asm-analysis-7.1.jar"},"hashes": {"md5": "7f66f9d85c5bf11f6bd94e249392c86f","sha1": "379e0250f7a4a42c66c5e94e14d4c4491b3c2ed3","sha256": "4612c0511a63db2a2570f07ad1959e19ed8eb703e4114da945cb85682519a55c"},"properties": {"license": "BSD: http:\/\/asm.ow2.org\/license.html","id1": "pkg:maven\/org.ow2.asm\/asm-analysis@7.1"}},{"description": {"text": "Usefull class adapters based on ASM, a very small and fast Java bytecode manipulation framework"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/ow2\/asm\/asm-commons\/7.1\/asm-commons-7.1.jar"},"hashes": {"md5": "a53524cb592585ce48f2de0ada82b885","sha1": "431dc677cf5c56660c1c9004870de1ed1ea7ce6c","sha256": "e5590489d8f1984d85bfeabd3b17374c59c28ae09d48ec4a0ebbd01959ecd358"},"properties": {"license": "BSD: http:\/\/asm.ow2.org\/license.html","id1": "pkg:maven\/org.ow2.asm\/asm-commons@7.1"}},{"description": {"text": "Tree API of ASM, a very small and fast Java bytecode manipulation framework"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/ow2\/asm\/asm-tree\/7.1\/asm-tree-7.1.jar"},"hashes": {"md5": "de9019ffee1e642e122b529f58ddd74b","sha1": "a3662cf1c1d592893ffe08727f78db35392fa302","sha256": "c0e82b220b0a52c71c7ca2a58c99a2530696c7b58b173052b9d48fe3efb10073"},"properties": {"license": "BSD: http:\/\/asm.ow2.org\/license.html","id1": "pkg:maven\/org.ow2.asm\/asm-tree@7.1"}},{"description": {"text": "Utilities for ASM, a very small and fast Java bytecode manipulation framework"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/ow2\/asm\/asm-util\/7.1\/asm-util-7.1.jar"},"hashes": {"md5": "5777b00daedeaf5987b92ad35d2a8cb2","sha1": "5b0b0f8cdb6c90582302ffcf5c20447206122f48","sha256": "a24485517596ae1003dcf2329c044a2a861e5c25d4476a695ccaacf560c74d1a"},"properties": {"license": "BSD: http:\/\/asm.ow2.org\/license.html","id1": "pkg:maven\/org.ow2.asm\/asm-util@7.1"}},{"description": {"text": "Annotations for defining API boundaries and tools for managing javadocs"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/yetus\/audience-annotations\/0.5.0\/audience-annotations-0.5.0.jar"},"hashes": {"md5": "032788f0841d26b027957fe91f2cd696","sha1": "55762d3191a8d6610ef46d11e8cb70c7667342a3","sha256": "c82631f06c75d46bf6524d95f0d6c2e3aef1b3eb4a7b584ca296624ef0d474be"},"properties": {"id1": "pkg:maven\/org.apache.yetus\/audience-annotations@0.5.0"}},{"description": {"text": "Avro core components"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/avro\/avro\/1.10.2\/avro-1.10.2.jar"},"hashes": {"md5": "fb4a62eb7b2c109d1b37d3e8ea0af837","sha1": "a65aaa91c1aeceb3dd4859dbb9765d1c2063f5a2","sha256": "fa6f0d601d6b6416c44b0da111d342e36df4ef5319368d06f9b4216a68d1b603"},"properties": {"license": "https:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.apache.avro\/avro@1.10.2","vid1": "cpe:2.3:a:apache:avro:1.10.2:*:*:*:*:*:*:*"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/avro\/avro-ipc\/1.10.2\/avro-ipc-1.10.2.jar\/org\/apache\/avro\/ipc\/stats\/static\/avro.js"},"hashes": {"md5": "d35aaa0cb582d3692a629bf6aaf598f4","sha1": "3cff3845464114feaaf3a8a2db3b847b9d60f2c1","sha256": "b3d5515947515081923c1d88a33f81d31e7235068839a12fbe3b4b2e9048d1b6"},"properties": {}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/avro\/avro-ipc\/1.10.2\/avro-ipc-1.10.2.jar\/org\/apache\/avro\/ipc\/stats\/static\/g.bar.js"},"hashes": {"md5": "d81fb55c1241b35507dcf1cf4373d6f8","sha1": "30bec210493df9ad46e6b450f3a6bd5d60edcb16","sha256": "e170509a32f523642eac51826ce943ac7fc7b0ff35ba012a326163066a035130"},"properties": {}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/avro\/avro-ipc\/1.10.2\/avro-ipc-1.10.2.jar\/org\/apache\/avro\/ipc\/stats\/static\/jquery-1.4.2.min.js"},"hashes": {"md5": "3c106cbb05b965a555fc68bace18f2e7","sha1": "61ab5ef8e9b36f611747bf33eb2e68a426a6ef2d","sha256": "2157e369ff4777cbe461b8cfc4fdf821ca7278b58bd2f4a0f8a994054a0f86c9"},"properties": {"id1": "pkg:javascript\/jquery@1.4.2.min"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/avro\/avro-ipc\/1.10.2\/avro-ipc-1.10.2.jar\/org\/apache\/avro\/ipc\/stats\/static\/jquery.tipsy.js"},"hashes": {"md5": "7289c39365832f18d9b575bc1f795e4e","sha1": "10f7accdcae42b9e84b52bfd98684c4c538d8d35","sha256": "5add80d50c197b867398c83875ca7777281b731559e5f83d46e0e554d86034d5"},"properties": {}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/avro\/avro-ipc\/1.10.2\/avro-ipc-1.10.2.jar\/org\/apache\/avro\/ipc\/stats\/static\/protovis-r3.2.js"},"hashes": {"md5": "8c54668444b1582ef04385529fae5b5b","sha1": "96a91e327c97eb45a59e24296a5bc56ab351397c","sha256": "a4352eb162c4594f3ad0479b06a97b827b226f83170540c54e70b99e0cc06ee8"},"properties": {}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/avro\/avro-ipc\/1.10.2\/avro-ipc-1.10.2.jar\/org\/apache\/avro\/ipc\/stats\/static\/tipsy.js"},"hashes": {"md5": "c3d34abed195b69f562d9e6b2c59debf","sha1": "3701b819fd315383a07cc8c47f260388bf1332c1","sha256": "93d97a98b59f6450de148ada3ab4068683ebd94cccdf5ee35873f2707356c003"},"properties": {}},{"location": {"uri": "file:///\/root\/.m2\/repository\/dev\/ludovic\/netlib\/blas\/2.2.0\/blas-2.2.0.jar"},"hashes": {"md5": "f21165b5c7f8280ec368aaf7a0043864","sha1": "8ee8659435b51cff5c8775bc0b3f236de11dae20","sha256": "76bd1002de64eb1cb26ca775d14c15450ff4428a0ace18353ea08b592b8dbade"},"properties": {"id1": "pkg:maven\/dev.ludovic.netlib\/blas@2.2.0"}},{"description": {"text": "Lightweight connection pool."},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/jolbox\/bonecp\/0.8.0.RELEASE\/bonecp-0.8.0.RELEASE.jar"},"hashes": {"md5": "730a2f3602f5f4c3ff7590b08205adce","sha1": "cec24ee9345b3678472bb1b8fdd6aa6b9428beb8","sha256": "a53d5b5a7ba6433fc7c29e29664313e50ddb53e7381698c41d1091e3c3d081fb"},"properties": {"license": "http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/com.jolbox\/bonecp@0.8.0.RELEASE"}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/bootstrap.bundle.min.js"},"hashes": {"md5": "a5334e475209f965b4862f3bedf32618","sha1": "fac45259046dd90b16d251739108002d67a00b54","sha256": "394156ee114ed3faf968419340ecfd17f69740eb7e4f0a88d59e1f6d5bf0c34e"},"properties": {}},{"description": {"text": "breeze-macros"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/scalanlp\/breeze-macros_2.12\/1.0\/breeze-macros_2.12-1.0.jar"},"hashes": {"md5": "d69b730b576483407ba7081968af4fbb","sha1": "03a56203db527ba6414781c1962531777a0d6107","sha256": "f79ba9acaaada5b7c1842d4bfd7b666fe1193c2cbb754cc173254daf5aadf686"},"properties": {"license": "Apache 2: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.scalanlp\/breeze-macros_2.12@1.0"}},{"description": {"text": "breeze"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/scalanlp\/breeze_2.12\/1.0\/breeze_2.12-1.0.jar"},"hashes": {"md5": "12f32c9676c3a21a4294ea4dd2112b17","sha1": "1833b50819d0df1e00cbc7a3fffae5dcf883b7cf","sha256": "b03101fe038ffa0886cffac38cdb65abe4c2869afc04b4421c7bc64555f3f58b"},"properties": {"license": "Apache 2: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.scalanlp\/breeze_2.12@1.0"}},{"description": {"text": "Cats kernel"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/typelevel\/cats-kernel_2.12\/2.0.0-M4\/cats-kernel_2.12-2.0.0-M4.jar"},"hashes": {"md5": "5fb86d3f1845bc5ba892db28ae65c266","sha1": "9e71e80bf168226eb98dbfefcf5bb9cc3db4168d","sha256": "88b87d1ea4f01f80267210443c7fe8aa1a639c29eddbf50a28921f33b46e55ab"},"properties": {"license": "MIT: http:\/\/opensource.org\/licenses\/MIT","id1": "pkg:maven\/org.typelevel\/cats-kernel_2.12@2.0.0-M4"}},{"description": {"text": "chill-java"},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/twitter\/chill-java\/0.10.0\/chill-java-0.10.0.jar"},"hashes": {"md5": "3c0e9cbbb2016364333f2cea3922ae97","sha1": "0fd2eb52afd9ab4337c9e51823f41ad8916e6976","sha256": "52afd3c1256d6f89293ba616c0c9ebf11191bb9e8159cd0c1cfdc99e5e0c5ffe"},"properties": {"license": "Apache 2: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/com.twitter\/chill-java@0.10.0"}},{"description": {"text": "chill"},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/twitter\/chill_2.12\/0.10.0\/chill_2.12-0.10.0.jar"},"hashes": {"md5": "a2cedd70ae6d7327696c24ff5464072d","sha1": "b208321208c0b3232a305fccd59df3d6a1f1eecd","sha256": "5cb5db46112699e6de681dedc0c1d0b300f5ccc2c0921b6bb3e4dba2e66c6fe6"},"properties": {"license": "Apache 2: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/com.twitter\/chill_2.12@0.10.0"}},{"description": {"text": "A library for fast runtime class-querying, and more"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/clapper\/classutil_2.12\/1.5.1\/classutil_2.12-1.5.1.jar"},"hashes": {"md5": "5432a8d88154a72ce28b0a97603ef2f2","sha1": "c0a26a9fb768c326ea4048373c3425717c5ef5ed","sha256": "c90bbf90fa57433d94fdd4669957d8b3734dc70d80292ddf24695b440ec48bdf"},"properties": {"license": "Apache License, Version 2.0: https:\/\/www.apache.org\/licenses\/LICENSE-2.0","id1": "pkg:maven\/org.clapper\/classutil_2.12@1.5.1"}},{"description": {"text": "\n    Commons CLI provides a simple API for presenting, processing and validating a command line interface.\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/commons-cli\/commons-cli\/1.2\/commons-cli-1.2.jar"},"hashes": {"md5": "bfdcae1ff93f0c07d733f03bdce28c9e","sha1": "2bf96b7aa8b611c177d329452af1dc933e14501c","sha256": "e7cd8951956d349b568b7ccfd4f5b2529a8c113e67c32b028f52ffda371259d9"},"properties": {"license": "http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/commons-cli\/commons-cli@1.2"}},{"description": {"text": "\n     The Apache Commons Codec package contains simple encoder and decoders for\n     various formats such as Base64 and Hexadecimal.  In addition to these\n     widely used encoders and decoders, the codec package also maintains a\n     collection of phonetic encoding utilities.\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/commons-codec\/commons-codec\/1.15\/commons-codec-1.15.jar"},"hashes": {"md5": "303baf002ce6d382198090aedd9d79a2","sha1": "49d94806b6e3dc933dacbd8acb0fdbab8ebd1e5d","sha256": "b3e9f6d63a790109bf0d056611fbed1cf69055826defeb9894a71369d246ed63"},"properties": {"license": "https:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/commons-codec\/commons-codec@1.15"}},{"description": {"text": "Types that extend and augment the Java Collections Framework."},"location": {"uri": "file:///\/root\/.m2\/repository\/commons-collections\/commons-collections\/3.2.2\/commons-collections-3.2.2.jar"},"hashes": {"md5": "f54a8510f834a1a57166970bfc982e94","sha1": "8ad72fe39fa8c91eaaf12aadb21e0c3661fe26d5","sha256": "eeeae917917144a68a741d4c0dff66aa5c5c5fd85593ff217bced3fc8ca783b8"},"properties": {"license": "http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/commons-collections\/commons-collections@3.2.2","vid1": "cpe:2.3:a:apache:commons_collections:3.2.2:*:*:*:*:*:*:*"}},{"description": {"text": "The \"commons-compiler\" API, including the \"IExpressionEvaluator\", \"IScriptEvaluator\", \"IClassBodyEvaluator\" and \"ISimpleCompiler\" interfaces."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/codehaus\/janino\/commons-compiler\/3.1.4\/commons-compiler-3.1.4.jar"},"hashes": {"md5": "052a07dc2b638d73b1348c278a05acab","sha1": "d5e7207eb6b9097befd5a4ea0152507bb7ae4285","sha256": "5171493e0a2c8ad5e5316a2da1fb48a14f03e154f472112e2bbd75d62e34bfd3"},"properties": {"license": "https:\/\/spdx.org\/licenses\/BSD-3-Clause.html","id1": "pkg:maven\/org.codehaus.janino\/commons-compiler@3.1.4"}},{"description": {"text": "\nApache Commons Compress software defines an API for working with\ncompression and archive formats.  These include: bzip2, gzip, pack200,\nlzma, xz, Snappy, traditional Unix Compress, DEFLATE, DEFLATE64, LZ4,\nBrotli, Zstandard and ar, cpio, jar, tar, zip, dump, 7z, arj.\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/commons\/commons-compress\/1.20\/commons-compress-1.20.jar"},"hashes": {"md5": "3f7237fb56029591b5bdd2698c196220","sha1": "b8df472b31e1f17c232d2ad78ceb1c84e00c641b","sha256": "0aeb625c948c697ea7b205156e112363b59ed5e2551212cd4e460bdb72c7c06e"},"properties": {"license": "https:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.apache.commons\/commons-compress@1.20","vid1": "cpe:2.3:a:apache:commons-compress:1.20:*:*:*:*:*:*:*","vid2": "cpe:2.3:a:apache:commons_compress:1.20:*:*:*:*:*:*:*"}},{"description": {"text": "Apache Commons Crypto is a cryptographic library optimized with AES-NI (Advanced Encryption Standard New Instructions). It provides Java API for both cipher level and Java stream level. Developers can use it to implement high performance AES encryption\/decryption with the minimum code and effort. Please note that Crypto doesn't implement the cryptographic algorithm such as AES directly. It wraps to Openssl or JCE which implement the algorithms. Features -------- 1. Cipher API for low level cryptographic operations. 2. Java stream API (CryptoInputStream\/CryptoOutputStream) for high level stream encryption\/decryption. 3. Both optimized with high performance AES encryption\/decryption. (1400 MB\/s - 1700 MB\/s throughput in modern Xeon processors). 4. JNI-based implementation to achieve comparable performance to the native C\/C++ version based on OpenSsl. 5. Portable across various operating systems (currently only Linux\/MacOSX\/Windows); Apache Commons Crypto loads the library according to your machine environment (it checks system properties, `os.name` and `os.arch`). 6. Simple usage. Add the commons-crypto-(version).jar file to your classpath. Export restrictions ------------------- This distribution includes cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and\/or re-export to another country, of encryption software. BEFORE using any encryption software, please check your country's laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted. See for more information. The U.S. Government Department of Commerce, Bureau of Industry and Security (BIS), has classified this software as Export Commodity Control Number (ECCN) 5D002.C.1, which includes information security software using or performing cryptographic functions with asymmetric algorithms. The form and manner of this Apache Software Foundation distribution makes it eligible for export under the License Exception ENC Technology Software Unrestricted (TSU) exception (see the BIS Export Administration Regulations, Section 740.13) for both object code and source code. The following provides more details on the included cryptographic software: * Commons Crypto use [Java Cryptography Extension](http:\/\/docs.oracle.com\/javase\/8\/docs\/technotes\/guides\/security\/crypto\/CryptoSpec.html) provided by Java * Commons Crypto link to and use [OpenSSL](https:\/\/www.openssl.org\/) ciphers"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/commons\/commons-crypto\/1.1.0\/commons-crypto-1.1.0.jar"},"hashes": {"md5": "c71451f3c4737ba6d84f9bd9e8f2400d","sha1": "4a8b4caa84032a0f1f1dad16875820a4f37524b7","sha256": "44dc28551cdba731658090d9b10d2eead9839c269d70cdcd7d56c0423df5227f"},"properties": {"license": "Apache License, Version 2.0: https:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.apache.commons\/commons-crypto@1.1.0"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/commons\/commons-crypto\/1.1.0\/commons-crypto-1.1.0.jar\/org\/apache\/commons\/crypto\/native\/Windows\/x86_64\/commons-crypto.dll"},"hashes": {"md5": "8d2cde413aeee6d974b138b27dee4ecb","sha1": "003dd119b8b520463453f8784d771db3def10881","sha256": "5b719579aa43ee096cdd407403d668bd3ca12fce5fa66adb1ec77ad3bd77972a"},"properties": {}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/commons\/commons-crypto\/1.1.0\/commons-crypto-1.1.0.jar\/org\/apache\/commons\/crypto\/native\/Windows\/x86\/commons-crypto.dll"},"hashes": {"md5": "5eea8d1b2452b767283fb9a3d4b96f24","sha1": "d8a8984ee0d89619dfb5b4ccfdfb102c7df0dd15","sha256": "e68cf48cb0087709832a715476b288f4b982eb4bfd3d5cd04c9f0d539867b774"},"properties": {}},{"description": {"text": "Commons Database Connection Pooling"},"location": {"uri": "file:///\/root\/.m2\/repository\/commons-dbcp\/commons-dbcp\/1.4\/commons-dbcp-1.4.jar"},"hashes": {"md5": "b004158fab904f37f5831860898b3cd9","sha1": "30be73c965cc990b153a100aaaaafcf239f82d39","sha256": "a6e2d83551d0e5b59aa942359f3010d35e79365e6552ad3dbaa6776e4851e4f6"},"properties": {"license": "http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/commons-dbcp\/commons-dbcp@1.4"}},{"description": {"text": "\nThe Apache Commons IO library contains utility classes, stream implementations, file filters,\nfile comparators, endian transformation classes, and much more.\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/commons-io\/commons-io\/2.8.0\/commons-io-2.8.0.jar"},"hashes": {"md5": "21ba575792e2694c39af13918a80550b","sha1": "92999e26e6534606b5678014e66948286298a35c","sha256": "02f291e5d1243dc143496e3cbbb40a1ced47aa58f2d633d3e38780cd068d5074"},"properties": {"license": "https:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/commons-io\/commons-io@2.8.0","vid1": "cpe:2.3:a:apache:commons_io:2.8.0:*:*:*:*:*:*:*"}},{"description": {"text": "\n        Commons Lang, a package of Java utility classes for the\n        classes that are in java.lang's hierarchy, or are considered to be so\n        standard as to justify existence in java.lang.\n    "},"location": {"uri": "file:///\/root\/.m2\/repository\/commons-lang\/commons-lang\/2.6\/commons-lang-2.6.jar"},"hashes": {"md5": "4d5c1693079575b362edf41500630bbd","sha1": "0ce1edb914c94ebc388f086c6827e8bdeec71ac2","sha256": "50f11b09f877c294d56f24463f47d28f929cf5044f648661c0f0cfbae9a2f49c"},"properties": {"license": "http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/commons-lang\/commons-lang@2.6"}},{"description": {"text": "\n  Apache Commons Lang, a package of Java utility classes for the\n  classes that are in java.lang's hierarchy, or are considered to be so\n  standard as to justify existence in java.lang.\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/commons\/commons-lang3\/3.12.0\/commons-lang3-3.12.0.jar"},"hashes": {"md5": "19fe50567358922bdad277959ea69545","sha1": "c6842c86792ff03b9f1d1fe2aab8dc23aa6c6f0e","sha256": "d919d904486c037f8d193412da0c92e22a9fa24230b9d67a57855c5c31c7e94e"},"properties": {"license": "https:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.apache.commons\/commons-lang3@3.12.0"}},{"description": {"text": "Commons Logging is a thin adapter allowing configurable bridging to other,\n    well known logging systems."},"location": {"uri": "file:///\/root\/.m2\/repository\/commons-logging\/commons-logging\/1.1.3\/commons-logging-1.1.3.jar"},"hashes": {"md5": "92eb5aabc1b47287de53d45c086a435c","sha1": "f6f66e966c70a83ffbdb6f17a0919eaf7c8aca7f","sha256": "70903f6fc82e9908c8da9f20443f61d90f0870a312642991fe8462a0b9391784"},"properties": {"license": "http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/commons-logging\/commons-logging@1.1.3"}},{"description": {"text": "The Apache Commons Math project is a library of lightweight, self-contained mathematics and statistics components addressing the most common practical problems not immediately available in the Java programming language or commons-lang."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/commons\/commons-math3\/3.4.1\/commons-math3-3.4.1.jar"},"hashes": {"md5": "14a218d0ee57907dd2c7ef944b6c0afd","sha1": "3ac44a8664228384bc68437264cf7c4cf112f579","sha256": "d1075b14a71087038b0bfd198f0f7dd8e49b5b3529d8e2eba99e7d9eb8565e4b"},"properties": {"license": "http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.apache.commons\/commons-math3@3.4.1"}},{"description": {"text": "\nApache Commons Net library contains a collection of network utilities and protocol implementations.\nSupported protocols include: Echo, Finger, FTP, NNTP, NTP, POP3(S), SMTP(S), Telnet, Whois\n    "},"location": {"uri": "file:///\/root\/.m2\/repository\/commons-net\/commons-net\/3.1\/commons-net-3.1.jar"},"hashes": {"md5": "23c94d51e72f341fb412d6a015e16313","sha1": "2298164a7c2484406f2aa5ac85b205d39019896f","sha256": "34a58d6d80a50748307e674ec27b4411e6536fd12e78bec428eb2ee49a123007"},"properties": {"license": "http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/commons-net\/commons-net@3.1"}},{"description": {"text": "Commons Object Pooling Library"},"location": {"uri": "file:///\/root\/.m2\/repository\/commons-pool\/commons-pool\/1.5.4\/commons-pool-1.5.4.jar"},"hashes": {"md5": "80e9d1cbd70542f4f293793d109679a9","sha1": "75b6e20c596ed2945a259cea26d7fadd298398e6","sha256": "22095672ac3ad6503e42ec6d4cbc330cd1318040223f6c5d9605473b6d2aa0fd"},"properties": {"license": "http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/commons-pool\/commons-pool@1.5.4"}},{"description": {"text": "Commons Object Pooling Library"},"location": {"uri": "file:///\/root\/.m2\/repository\/commons-pool\/commons-pool\/1.6\/commons-pool-1.6.jar"},"hashes": {"md5": "5ca02245c829422176d23fa530e919cc","sha1": "4572d589699f09d866a226a14b7f4323c6d8f040","sha256": "46c42b4a38dc6b2db53a9ee5c92c63db103665d56694e2cfce2c95d51a6860cc"},"properties": {"license": "http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/commons-pool\/commons-pool@1.6"}},{"description": {"text": "The Apache Commons Object Pooling Library."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/commons\/commons-pool2\/2.6.2\/commons-pool2-2.6.2.jar"},"hashes": {"md5": "696197d79439773526f300b1a5eb38c9","sha1": "775a8072995b29eafe8fb0a828a190589f71cede","sha256": "689091759a3a4d8da3be38480e3df3fbcb3c3c9d81811d40cb64c56ae62e68f7"},"properties": {"license": "https:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.apache.commons\/commons-pool2@2.6.2"}},{"description": {"text": "Apache Commons Text is a library focused on algorithms working on strings."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/commons\/commons-text\/1.6\/commons-text-1.6.jar"},"hashes": {"md5": "a1fb840c3963ed43c78291b5e61d55ac","sha1": "ba72cf0c40cf701e972fe7720ae844629f4ecca2","sha256": "df45e56549b63e0fe716953c9d43cc158f8bf008baf60498e7c17f3faa00a70b"},"properties": {"license": "https:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.apache.commons\/commons-text@1.6"}},{"description": {"text": " \nCompression codec for LZF encoding for particularly encoding\/decoding, with reasonable compression.\nCompressor is basic Lempel-Ziv codec, without Huffman (deflate\/gzip) or statistical post-encoding.\nSee \"http:\/\/oldhome.schmorp.de\/marc\/liblzf.html\" for more on original LZF package.\n    "},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/ning\/compress-lzf\/1.0.3\/compress-lzf-1.0.3.jar"},"hashes": {"md5": "dc55ed6fe0bbad93bbf38331768ba1b4","sha1": "3e1495b0c532ebe58f1c8b1c5d9b3bdcc6c1504c","sha256": "6cf93bda1c2caf618652f97d2f36c883a5a9774345384c05d3593b173731bccd"},"properties": {"license": "Apache License 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/com.ning\/compress-lzf@1.0.3"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/com\/github\/fommil\/netlib\/core\/1.1.2\/core-1.1.2.jar"},"hashes": {"md5": "ab845840ad73fa2ec1a5025a7c48b97e","sha1": "574b480eca62f535fad6d259e144fee3ef24b66e","sha256": "5ffaddee0a3f8d09a56064aa05feb95837ddad9d42d9dcc37479c66e869aa139"},"properties": {"id1": "pkg:maven\/com.github.fommil.netlib\/core@1.1.2"}},{"description": {"text": "Low-level API"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/curator\/curator-client\/2.13.0\/curator-client-2.13.0.jar"},"hashes": {"md5": "ca2c6ca2277e78d1f6b865ee82e10357","sha1": "a1974d9b3251c055408059b2f408d19d7db07224","sha256": "62ab2201b5b9af63b215a4e6829dbe7d553a0805cfb0b1a665f9b49da8270c51"},"properties": {"license": "http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.apache.curator\/curator-client@2.13.0"}},{"description": {"text": "High-level API that greatly simplifies using ZooKeeper."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/curator\/curator-framework\/2.13.0\/curator-framework-2.13.0.jar"},"hashes": {"md5": "91e34b86afb44ef5c728f69ed9790f1d","sha1": "d45229aee7d3f1f628a34fcac9b66ed5ba52c31f","sha256": "db084e5e0fed0548a8128f12a3e7a15c875c9595e75316c9578d64e77375c4a9"},"properties": {"license": "http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.apache.curator\/curator-framework@2.13.0"}},{"description": {"text": "All of the recipes listed on the ZooKeeper recipes doc (except two phase commit)."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/curator\/curator-recipes\/2.13.0\/curator-recipes-2.13.0.jar"},"hashes": {"md5": "02685a8f2e44faa1941e953ac426a8d7","sha1": "1e6d5cf7b18a402f5d52785877010711538d68a0","sha256": "22be05c1a3e6c5ede22e77372b08dc631a3b93b64acb7f682537ea65a6ddba06"},"properties": {"license": "http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.apache.curator\/curator-recipes@2.13.0"}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/d3.min.js"},"hashes": {"md5": "e1b9f89cc778a8c619cde3aea8b6f9d4","sha1": "71188357fc005e40125b0ad76586c1f4bd53cffd","sha256": "3d4c7c277efd3bb019ed0aba5d2dfbe575ded9b9055b842997774bee02f2b76a"},"properties": {}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/dagre-d3.min.js"},"hashes": {"md5": "2a602f00fd01dc07a0cb4def2f19850f","sha1": "f7552c9cb333c9dfc81c01149f7c321ed95ae0ef","sha256": "f38a54a35b59d44f359e1ecdbccc457ebae3f37c5448fc007107081d518144a3"},"properties": {}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/dataTables.bootstrap4.1.10.20.min.js"},"hashes": {"md5": "ffefe8e36010fb53f061ec2f8cbbbc2a","sha1": "2682a9e6cc6491ead91255ca62c6002ecfb4d5f8","sha256": "03c1d0b27ffdb97b7e55191a2e15ad8fb28c0bc6d84fbeabdc807b893a83b4ba"},"properties": {}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/dataTables.rowsGroup.js"},"hashes": {"md5": "9473e0a904f35fdf0110d912d16d5fb7","sha1": "195a59175be1992aab636c5c641b405ba0283581","sha256": "5856c937e4fe8a921364a14de58f406788db336ed9066b3aed897c0ced755c42"},"properties": {}},{"description": {"text": "\n        Plugin providing DataNucleus implementation of the JDO API.\n    "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/datanucleus\/datanucleus-api-jdo\/4.2.4\/datanucleus-api-jdo-4.2.4.jar"},"hashes": {"md5": "f54789e11168bdfa5063d5241573ff21","sha1": "7e2c71f7eb9b40b660d009c3ea1b55fb71694bca","sha256": "f30f1f09658329190811468e58a622f069d97a7284d67a88b8d01c809ab3d1f3"},"properties": {"license": "http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.datanucleus\/datanucleus-api-jdo@4.2.4"}},{"description": {"text": "\n        DataNucleus Core provides the primary components of a heterogenous Java persistence solution. \n        It supports persistence API's being layered on top of the core functionality.\n    "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/datanucleus\/datanucleus-core\/4.1.17\/datanucleus-core-4.1.17.jar"},"hashes": {"md5": "56845c7af1890cde68d67c39f2d0e1d3","sha1": "c03898d49b506b60849fe1db39d04ab27fa15422","sha256": "adb64b5ec1837821e289fc82b04c13f6b5a2f1c68a24628bcec6a7c43b5f5bca"},"properties": {"license": "http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.datanucleus\/datanucleus-core@4.1.17"}},{"description": {"text": "\n        Plugin for DataNucleus providing persistence to RDBMS datastores.\n    "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/datanucleus\/datanucleus-rdbms\/4.1.19\/datanucleus-rdbms-4.1.19.jar"},"hashes": {"md5": "7d1ad32dea1b7f5bf2d6c04e83a7bb17","sha1": "923fa411f49cca5dbb6221140b1ae89c90b3a3fd","sha256": "a189e10fb48dc0fa550721ee2206a1df8a2fd68d213149bf68793976b0ade687"},"properties": {"license": "http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.datanucleus\/datanucleus-rdbms@4.1.19"}},{"description": {"text": "Contains the core Apache Derby database engine, which also includes the embedded JDBC driver."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/derby\/derby\/10.14.2.0\/derby-10.14.2.0.jar"},"hashes": {"md5": "3ddcc1d435344d39d0122dbc2f39a746","sha1": "7efad40ef52fbb1f08142f07a83b42d29e47d8ce","sha256": "2c40eb581e5221ab33c7c796979b49ce404e7e393357c58f7bcdb30a09efca72"},"properties": {"id1": "pkg:maven\/org.apache.derby\/derby@10.14.2.0","vid1": "cpe:2.3:a:apache:derby:10.14.2.0:*:*:*:*:*:*:*"}},{"description": {"text": "A reporter for Dropwizard Metrics which announces measurements using Hadoop Metrics2."},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/github\/joshelser\/dropwizard-metrics-hadoop-metrics2-reporter\/0.1.2\/dropwizard-metrics-hadoop-metrics2-reporter-0.1.2.jar"},"hashes": {"md5": "7c59244206bb5ed013cbd52b4c84d94d","sha1": "ff3520ab6e48718e2d79e47f6cf2bd7b50180b84","sha256": "a22d6889790fa98d5f85de6e25f7dc89946b26964742e6deb9f91681946fa03a"},"properties": {"license": "Apache License, Version 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/com.github.joshelser\/dropwizard-metrics-hadoop-metrics2-reporter@0.1.2"}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/executorspage.js"},"hashes": {"md5": "a308ab7d4b075f6cbc082c25bb28c96e","sha1": "d31f285d67df17cf83309cfcd777d2ea829e9cc2","sha256": "5cd722c740eebf9af035b7fbc81150c57913dfeaf8888460a94f5c23e01a1cce"},"properties": {}},{"description": {"text": "\n    Memory Efficient Serialization Library\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/google\/flatbuffers\/flatbuffers-java\/1.9.0\/flatbuffers-java-1.9.0.jar"},"hashes": {"md5": "7e3311ef466642fe47a5b203bc7e5d21","sha1": "460bc8f6411768659c1ffb529592e251a808b9f2","sha256": "bca905c497fc67f5863d3ae9ece778073176c2ab588dedebdc8ab17da848ee48"},"properties": {"license": "Apache License V2.0: https:\/\/raw.githubusercontent.com\/google\/flatbuffers\/master\/LICENSE.txt","id1": "pkg:maven\/com.google.flatbuffers\/flatbuffers-java@1.9.0"}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/graphlib-dot.min.js"},"hashes": {"md5": "4c5ef7d11656cbc9c5efa082c2cc171a","sha1": "197289ce3c78118bdeae5f312f97ed2b76cbd367","sha256": "668584b1ed5fe082dc65c895d7cf4b4b3f0868758b1bdbaf056905418594a556"},"properties": {}},{"description": {"text": "A general-purpose Scala utility library"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/clapper\/grizzled-scala_2.12\/4.9.3\/grizzled-scala_2.12-4.9.3.jar"},"hashes": {"md5": "8c9bfc950a5a703292323280dcd0cf4d","sha1": "fae01e95b44a67d3e56827c45eb0a7cce4580078","sha256": "16485f8e4f6e84d9bd2f31cc0c359dd57b8b32018fe584c1f21b602149512643"},"properties": {"license": "BSD: http:\/\/software.clapper.org\/grizzled-scala\/license.html","id1": "pkg:maven\/org.clapper\/grizzled-scala_2.12@4.9.3"}},{"description": {"text": "Google Gson library"},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/google\/code\/gson\/gson\/2.2.4\/gson-2.2.4.jar"},"hashes": {"md5": "2f54fc24807a4cad7297012dd8cebf3d","sha1": "a60a5e993c98c864010053cb901b7eab25306568","sha256": "c0328cd07ca9e363a5acd00c1cf4afe8cf554bd6d373834981ba05cebec687fb"},"properties": {"license": "The Apache Software License, Version 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/com.google.code.gson\/gson@2.2.4"}},{"description": {"text": "\n    Guava is a suite of core and expanded libraries that include\n    utility classes, google's collections, io classes, and much\n    much more.\n\n    Guava has two code dependencies - javax.annotation\n    per the JSR-305 spec and javax.inject per the JSR-330 spec.\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/google\/guava\/guava\/14.0.1\/guava-14.0.1.jar"},"hashes": {"md5": "58553f87d83b9f8ec74bd3529083ee2f","sha1": "69e12f4c6aeac392555f1ea86fab82b5e5e31ad4","sha256": "d69df3331840605ef0e5fe4add60f2d28e870e3820937ea29f713d2035d9ab97"},"properties": {"license": "http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/com.google.guava\/guava@14.0.1","vid1": "cpe:2.3:a:google:guava:14.0.1:*:*:*:*:*:*:*"}},{"description": {"text": "Apache Hadoop Client aggregation pom with dependencies exposed"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-api\/3.3.1\/hadoop-client-api-3.3.1.jar"},"hashes": {"md5": "e18a4514cfc3bee9745f1bfd3846d8d1","sha1": "4b9c9cdd9967495838fb521001699c4c9dddf183","sha256": "5434cede7fd14d451ff70073aa08ae678f461e701203cabd6b7eada76fd565bf"},"properties": {"id1": "pkg:maven\/org.apache.hadoop\/hadoop-client-api@3.3.1","id2": "pkg:maven\/org.apache.hadoop\/hadoop-client@3.3.1","vid1": "cpe:2.3:a:apache:hadoop:3.3.1:*:*:*:*:*:*:*"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-api\/3.3.1\/hadoop-client-api-3.3.1.jar\/META-INF\/maven\/org.apache.hadoop\/hadoop-mapreduce-client-core\/pom.xml"},"hashes": {"md5": "58621d7ec8db4087eef956ebd8bcdb39","sha1": "3dfc5e423fd69083482b95dbce669f07980dcd4f","sha256": "7d48615dad14d383c9d1c6187e592c3a3926a799820052df727f9ac42ba17943"},"properties": {"id1": "pkg:maven\/org.apache.hadoop\/hadoop-mapreduce-client-core@3.3.1","vid1": "cpe:2.3:a:apache:hadoop:3.3.1:*:*:*:*:*:*:*"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-api\/3.3.1\/hadoop-client-api-3.3.1.jar\/webapps\/static\/jquery\/jquery-ui-1.12.1.custom.min.js"},"hashes": {"md5": "c15b1008dec3c8967ea657a7bb4baaec","sha1": "78489e580adaef931e6e5b131dab556c397e4a1a","sha256": "28ce75d953678c4942df47a11707a15e3c756021cf89090e3e6aa7ad6b6971c3"},"properties": {}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-api\/3.3.1\/hadoop-client-api-3.3.1.jar\/webapps\/static\/dt-1.10.18\/js\/jquery.dataTables.min.js"},"hashes": {"md5": "4e2939fa069d4d76296292c23a604401","sha1": "a71cb2f9cfd92e6eb5d33c0d703c822bd9c937ef","sha256": "5a7ef74f700730ba5f2aa1c4daffb13a9acec1b92c50117b2bea845bd9771304"},"properties": {}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-api\/3.3.1\/hadoop-client-api-3.3.1.jar\/webapps\/static\/jt\/jquery.jstree.js"},"hashes": {"md5": "f8fb4b3143c2ebf7727831085892fdc3","sha1": "cb4bdf65878f208f0fcfa1811bb9aedfa96829df","sha256": "54a60f92d02108f739eaea17702b0c4b15eea5f90551f683c3b6799c180e7998"},"properties": {}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-api\/3.3.1\/hadoop-client-api-3.3.1.jar\/webapps\/static\/dt-sorting\/natural.js"},"hashes": {"md5": "6119b176fc9ded71d13d2d9e4b166ba9","sha1": "2f5ecc90d7e4a8d6922c345cadf4952be2eb0d6d","sha256": "7abeaadbaef39a5a540701143e8bdc05a82be5030b69eb03373d3b7a84c0225f"},"properties": {}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-api\/3.3.1\/hadoop-client-api-3.3.1.jar\/webapps\/static\/yarn.dt.plugins.js"},"hashes": {"md5": "6e4fd1cc68b16668497bae311c867170","sha1": "2353dbc70b8f571313e688d220cdf9f506b9dbea","sha256": "6aa0ce02cbf9e540ed27967bf49416ec9d03ecd82c775b355e7b18a700cf1a8e"},"properties": {}},{"description": {"text": "Core Jackson processing abstractions (aka Streaming API), implementation for JSON"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-core\/pom.xml"},"hashes": {"md5": "f9ada6cc3dd1156b68ba12199022dc5c","sha1": "8f964b3629e7e8ff1aa6d6fe702e27e555e0fbba","sha256": "8f015c8456e24cddbd5b8fe442a4d04635ded8fcc62a07005ca1518a7d3e153a"},"properties": {"id1": "pkg:maven\/com.fasterxml.jackson.core\/jackson-core@2.10.5","vid1": "cpe:2.3:a:fasterxml:jackson-modules-java8:2.10.5:*:*:*:*:*:*:*"}},{"description": {"text": "General data-binding functionality for Jackson: works on core streaming API"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-databind\/pom.xml"},"hashes": {"md5": "c561bd2c36d9017ec868c7d9835b7ffb","sha1": "4f0d8bfbc84fe1a77f41b2adbb5fe5e6cdfce345","sha256": "ebe04cc8a012bcfcf8ebbd02b26ab0a8cb078d20c8b603732bd2a1a8249ad4c2"},"properties": {"id1": "pkg:maven\/com.fasterxml.jackson.core\/jackson-databind@2.10.5.1","vid1": "cpe:2.3:a:fasterxml:jackson-databind:2.10.5.1:*:*:*:*:*:*:*","vid2": "cpe:2.3:a:fasterxml:jackson-modules-java8:2.10.5.1:*:*:*:*:*:*:*"}},{"description": {"text": "Pile of code that is shared by all Jackson-based JAX-RS\nproviders.\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/com.fasterxml.jackson.jaxrs\/jackson-jaxrs-base\/pom.xml"},"hashes": {"md5": "74241f7e4bb1ef4b7081a7ab128c074f","sha1": "96170161689f49dac03d78afaebcd02a4ca51046","sha256": "39cd60802b1a8f33a280c4e30391c3acd137fe4af4070e57340d46bfb7183e1a"},"properties": {"id1": "pkg:maven\/com.fasterxml.jackson.jaxrs\/jackson-jaxrs-base@2.10.5"}},{"description": {"text": "Functionality to handle JSON input\/output for JAX-RS implementations (like Jersey and RESTeasy) using standard Jackson data binding.\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/com.fasterxml.jackson.jaxrs\/jackson-jaxrs-json-provider\/pom.xml"},"hashes": {"md5": "5473c3e96a58c1ff8fbc14a8e82b28f1","sha1": "7fe1503fb8cf225c8a62ea98274186c4b580840e","sha256": "0f4ecdb52487b712fe86e0c3b877d1c71bf1c616d963789e4eef2f95d9f65d8e"},"properties": {"id1": "pkg:maven\/com.fasterxml.jackson.jaxrs\/jackson-jaxrs-json-provider@2.10.5"}},{"description": {"text": "Support for using JAXB annotations as an alternative to \"native\" Jackson annotations, for configuring\ndata-binding.\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/com.fasterxml.jackson.module\/jackson-module-jaxb-annotations\/pom.xml"},"hashes": {"md5": "52d92c371a3344a27c5eb895c9d95b07","sha1": "98b0e856816d94fc734ea7d884a45ec10bac9381","sha256": "875afbaa40f1a37080af1abbaf7387a109b1ce33c9dd64e4869afa53a1eb630e"},"properties": {"id1": "pkg:maven\/com.fasterxml.jackson.module\/jackson-module-jaxb-annotations@2.10.5"}},{"description": {"text": "\n        Woodstox is a high-performance XML processor that\n        implements Stax (JSR-173), SAX2 and Stax2 APIs\n    "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/com.fasterxml.woodstox\/woodstox-core\/pom.xml"},"hashes": {"md5": "1947308d3f71224a50bd65a313793041","sha1": "38f5192b59d4d9672b1e8e3d7a2079e1c46ee8a2","sha256": "fd7c58cff1f7ea3da9d66c618ec3ecb225281c99e0ad5b4d1649f8ba5ac40c59"},"properties": {"license": "The Apache License, Version 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/com.fasterxml.woodstox\/woodstox-core@5.3.0"}},{"description": {"text": "\n    A clean room implementation of the JCIP Annotations based entirely on the specification provided by the javadocs.\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/com.github.stephenc.jcip\/jcip-annotations\/pom.xml"},"hashes": {"md5": "11f9647450c14ff9b341c68782ef071a","sha1": "bdccebfbbbdd66fe56dcdf3bdee7b97a853cccc5","sha256": "68c2a5aa6e8f345743093e52b5b9e0190ba4d5a5215c0a59b4d7d33647208cbb"},"properties": {"license": "Apache License, Version 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/com.github.stephenc.jcip\/jcip-annotations@1.0-1"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/com.google.errorprone\/error_prone_annotations\/pom.xml"},"hashes": {"md5": "6acc431b0f396de04934401ffc7057ee","sha1": "d759b1b643583e30d8bb6bb55f4ad434f26c44a4","sha256": "983ad7fe0fa6f6f91e2d20477f5089eccc3f4d8ec6c51d6eb45583970e279d3c"},"properties": {"license": "Apache 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/com.google.errorprone\/error_prone_annotations@2.5.1"}},{"description": {"text": "\n    Contains\n    com.google.common.util.concurrent.internal.InternalFutureFailureAccess and\n    InternalFutures. Most users will never need to use this artifact. Its\n    classes is conceptually a part of Guava, but they're in this separate\n    artifact so that Android libraries can use them without pulling in all of\n    Guava (just as they can use ListenableFuture by depending on the\n    listenablefuture artifact).\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/com.google.guava\/failureaccess\/pom.xml"},"hashes": {"md5": "0f074dccc597a7ddf88504ebb8ff2d64","sha1": "e8160e78fdaaf7088621dc1649d9dd2dfcf8d0e8","sha256": "e96042ce78fecba0da2be964522947c87b40a291b5fd3cd672a434924103c4b9"},"properties": {"id1": "pkg:maven\/com.google.guava\/failureaccess@1.0.1"}},{"description": {"text": "\n    Guava is a suite of core and expanded libraries that include\n    utility classes, Google's collections, I\/O classes, and\n    much more.\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/com.google.guava\/guava\/pom.xml"},"hashes": {"md5": "6c30777cd0fc207a8b001d299c6a6e65","sha1": "0f55555f43cb33c8c2f911e962ae5e4bc2f522b0","sha256": "6d18c9188ad4b7855fb7fea6f1793754b41fa1747811ae1e3d753d6fcc9dcc59"},"properties": {"id1": "pkg:maven\/com.google.guava\/guava@30.1.1-jre","vid1": "cpe:2.3:a:google:guava:30.1.1:*:*:*:*:*:*:*"}},{"description": {"text": "\n    An empty artifact that Guava depends on to signal that it is providing\n    ListenableFuture -- but is also available in a second \"version\" that\n    contains com.google.common.util.concurrent.ListenableFuture class, without\n    any other Guava classes. The idea is:\n\n    - If users want only ListenableFuture, they depend on listenablefuture-1.0.\n\n    - If users want all of Guava, they depend on guava, which, as of Guava\n    27.0, depends on\n    listenablefuture-9999.0-empty-to-avoid-conflict-with-guava. The 9999.0-...\n    version number is enough for some build systems (notably, Gradle) to select\n    that empty artifact over the \"real\" listenablefuture-1.0 -- avoiding a\n    conflict with the copy of ListenableFuture in guava itself. If users are\n    using an older version of Guava or a build system other than Gradle, they\n    may see class conflicts. If so, they can solve them by manually excluding\n    the listenablefuture artifact or manually forcing their build systems to\n    use 9999.0-....\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/com.google.guava\/listenablefuture\/pom.xml"},"hashes": {"md5": "beef3d4b11136de11247863ec9e759d0","sha1": "1b77ba79f9b2b7dfd4e15ea7bb0d568d5eb9cb8d","sha256": "18d4b1db26153d4e55079ce1f76bb1fe05cdb862ef9954a88cbcc4ff38b8679b"},"properties": {"id1": "pkg:maven\/com.google.guava\/listenablefuture@9999.0-empty-to-avoid-conflict-with-guava"}},{"description": {"text": "\n    A set of annotations that provide additional information to the J2ObjC\n    translator to modify the result of translation.\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/com.google.j2objc\/j2objc-annotations\/pom.xml"},"hashes": {"md5": "8f75c6533ad26a2047e989e345614773","sha1": "47e0dd93285dcc6b33181713bc7e8aed66742964","sha256": "5faca824ba115bee458730337dfdb2fcea46ba2fd774d4304edbf30fa6a3f055"},"properties": {"license": "The Apache Software License, Version 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/com.google.j2objc\/j2objc-annotations@1.3"}},{"description": {"text": "\n    Core Protocol Buffers library. Protocol Buffers are a way of encoding structured data in an\n    efficient yet extensible format.\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/com.google.protobuf\/protobuf-java\/pom.xml"},"hashes": {"md5": "7f54cfc1053388b3605fc97a6bec7303","sha1": "2d2e87204d85c9f4ddb7cfe0cd798e91652d7ada","sha256": "b02844967b71b7faa98b7c36f3877ff9afe7bd681a9421b60afa72c9da990491"},"properties": {"id1": "pkg:maven\/com.google.protobuf\/protobuf-java@3.7.1"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/com.google.re2j\/re2j\/pom.xml"},"hashes": {"md5": "02b85662ffebb2a6b645fc4cbc11bf73","sha1": "47719bb5f0fdc646c3b2f278a8ee2afc6d041e60","sha256": "bc23214b63effd4ff19b4abab378443306ae4753567acbea1bf845bdc35b737f"},"properties": {"license": "The Go license: https:\/\/golang.org\/LICENSE","id1": "pkg:maven\/com.google.re2j\/re2j@1.1"}},{"description": {"text": "\n        Java library for Javascript Object Signing and Encryption (JOSE) and\n        JSON Web Tokens (JWT)\n    "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/com.nimbusds\/nimbus-jose-jwt\/pom.xml"},"hashes": {"md5": "16c009ddc6927cecc870e26bff12ee83","sha1": "db465a509efff5223363b738e43f5b1829c44f37","sha256": "1f1b5638c280bdcf95449731c7ba1bf0b81b52d4666712247683f69fa0b09476"},"properties": {"license": "The Apache Software License, Version 2.0: https:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/com.nimbusds\/nimbus-jose-jwt@9.8.1","vid1": "cpe:2.3:a:connect2id:nimbus_jose\\+jwt:9.8.1:*:*:*:*:*:*:*"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/com.squareup.okhttp\/okhttp\/pom.xml"},"hashes": {"md5": "3807b3f5def30bb75d632fd8574c1671","sha1": "c0e46fa7785ffa7947fb225e3c655df4d9ff8fb9","sha256": "057b6d8f44d7df3a9c38ece8f902be574db4195d31b9a8b15831f408061c4cb7"},"properties": {"id1": "pkg:maven\/com.squareup.okhttp\/okhttp@2.7.5","vid1": "cpe:2.3:a:squareup:okhttp:2.7.5:*:*:*:*:*:*:*"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/com.squareup.okio\/okio\/pom.xml"},"hashes": {"md5": "a0de905687103cf94a7ae88897fa72fb","sha1": "f1130f411594ddc3124991b298c5af9424e4beec","sha256": "1be29d32516af3d4d16d1e6e160ca7773f6211b66ff80068d1c2b7aebceec2c9"},"properties": {"id1": "pkg:maven\/com.squareup.okio\/okio@1.6.0"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/com.sun.jersey\/jersey-core\/pom.xml"},"hashes": {"md5": "ae02d25ea57a97c27989f4984405985a","sha1": "dd7eafcd18e0e46cbfa1a8adbad2a39763ce7932","sha256": "014358b22c74986c2ed96991f392328322864b695a9026f677591dca50598c1d"},"properties": {"id1": "pkg:maven\/com.sun.jersey\/jersey-core@1.19","vid1": "cpe:2.3:a:jersey_project:jersey:1.19:*:*:*:*:*:*:*"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/com.thoughtworks.paranamer\/paranamer\/pom.xml"},"hashes": {"md5": "4468c1c7783db291b4c518e33a87fe76","sha1": "2d5b644579cd14d1b1b7ef7e21cb8a637e04913e","sha256": "1bd0fb4210d4f17d87c9a83a9d5d1de4c089183b4a773d766d7039130fc3514b"},"properties": {"id1": "pkg:maven\/com.thoughtworks.paranamer\/paranamer@2.3"}},{"description": {"text": "Apache Commons BeanUtils provides an easy-to-use but flexible wrapper around reflection and introspection."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/commons-beanutils\/commons-beanutils\/pom.xml"},"hashes": {"md5": "6d76b5cb892566fdebc54ebc8c6d9cb0","sha1": "42e7c39331e1735250b294ce2984d0e434ebc955","sha256": "c35cca7b61d4678d9578cbc0b901b8717b539abf9254441da78b8fe60de064d0"},"properties": {"id1": "pkg:maven\/commons-beanutils\/commons-beanutils@1.9.4","vid1": "cpe:2.3:a:apache:commons_beanutils:1.9.4:*:*:*:*:*:*:*"}},{"description": {"text": "\n     The Apache Commons Codec package contains simple encoder and decoders for\n     various formats such as Base64 and Hexadecimal.  In addition to these\n     widely used encoders and decoders, the codec package also maintains a\n     collection of phonetic encoding utilities.\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/commons-codec\/commons-codec\/pom.xml"},"hashes": {"md5": "9a239bab862f7252e68c5180e43bfaa4","sha1": "093ee1760aba62d6896d578bd7d247d0fa52f0e7","sha256": "c1e7140d1dea8fdf3528bc1e3c5444ac0b541297311f45f9806c213ec3ee9a10"},"properties": {"id1": "pkg:maven\/commons-codec\/commons-codec@1.11"}},{"description": {"text": "\nApache Commons Net library contains a collection of network utilities and protocol implementations.\nSupported protocols include: Echo, Finger, FTP, NNTP, NTP, POP3(S), SMTP(S), Telnet, Whois\n    "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/commons-net\/commons-net\/pom.xml"},"hashes": {"md5": "666b27f47b3e219c42c1c07b2d38ed25","sha1": "9dd75a32c1edbde107486895f8f35258371227bb","sha256": "1bbf48fc513118d7662cc678bade5603e5cacfebe4e186883ca7328d141072c6"},"properties": {"id1": "pkg:maven\/commons-net\/commons-net@3.6"}},{"description": {"text": "dnsjava is an implementation of DNS in Java. It supports all defined record types (including the DNSSEC types), and unknown types. It can be used for queries, zone transfers, and dynamic updates. It includes a cache which can be used by clients, and a minimal implementation of a server. It supports TSIG authenticated messages, partial DNSSEC verification, and EDNS0. "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/dnsjava\/dnsjava\/pom.xml"},"hashes": {"md5": "c403e123770220fb781a27a0e2064b14","sha1": "4a3ab378301e1c04d59a18159c54d2192578d784","sha256": "8f3e016e2bb4b6d44c1dc9182db72c5d7ed4fa13ed367ca417eedcb813d35862"},"properties": {"license": "BSD 2-Clause license: http:\/\/opensource.org\/licenses\/BSD-2-Clause","id1": "pkg:maven\/dnsjava\/dnsjava@2.1.7"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/jakarta.activation\/jakarta.activation-api\/pom.xml"},"hashes": {"md5": "70bac9dbf001350891ba8d66da2e5f75","sha1": "b9c1b2502949970360efe8d75ec5268d87d38a82","sha256": "42585cb07dda7f23aa04eb5e0940061944a246a67ad3d16942fbe569ff03cd31"},"properties": {"id1": "pkg:maven\/jakarta.activation\/jakarta.activation-api@1.2.1"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/javax.ws.rs\/jsr311-api\/pom.xml"},"hashes": {"md5": "00fed97b8b2e931ae36cc8a28968bf62","sha1": "a243a99ab8b7229423ff7ac83bf8f2c8737914e7","sha256": "e68b6d4f86f4747313857c7c1ce2e0e262b4867fd31bfbb9c6d2bf62721a19f4"},"properties": {"license": "\n                CDDL License\n            : http:\/\/www.opensource.org\/licenses\/cddl1.php","id1": "pkg:maven\/javax.ws.rs\/jsr311-api@1.1.1"}},{"description": {"text": "Java reflect give poor performance on getter setter an constructor calls, accessors-smart use ASM to speed up those calls.\n    "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/net.minidev\/accessors-smart\/pom.xml"},"hashes": {"md5": "0637393509525818c6538762a5cb9524","sha1": "3e9e8c9d467ddf8b2911eb707bef5fc0a952e0ba","sha256": "a4aa34a874899fcdf48f99d1f1c52d4a36ed8854b6a238d7b407eb376c01aee4"},"properties": {"license": "The Apache Software License, Version 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/net.minidev\/accessors-smart@2.4.2","vid1": "cpe:2.3:a:json_smart_project:json_smart:2.4.2:*:*:*:*:*:*:*"}},{"description": {"text": "\n    JSON (JavaScript Object Notation) is a lightweight data-interchange format.\n    It is easy for humans to read and write. It is easy for machines to parse and generate.\n    It is based on a subset of the JavaScript Programming Language, Standard ECMA-262 3rd Edition\n    - December 1999. JSON is a text format that is completely language independent but uses\n    conventions that are familiar to programmers of the C-family of languages, including C, C++, C#,\n    Java, JavaScript, Perl, Python, and many others.\n    These properties make JSON an ideal data-interchange language.\n\t"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/net.minidev\/json-smart\/pom.xml"},"hashes": {"md5": "a24893e44410c19e1a7d50d42ecbd992","sha1": "335f41b461caf6b4d098446bb5e52fc5c64399df","sha256": "a60f8cc844f553d6d722a5fcdde2463f5794361fab98fd4d9a84e76b01193a91"},"properties": {"id1": "pkg:maven\/net.minidev\/json-smart@1.3.2","vid1": "cpe:2.3:a:json_smart_project:json_smart:1.3.2:*:*:*:*:*:*:*"}},{"description": {"text": "Avro core components"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.avro\/avro\/pom.xml"},"hashes": {"md5": "7c004a4bda0f0c7a14d273e3f2c7e0a3","sha1": "f4079d2b0a549d1e46f6eee0a8dc5a4cbf2d7c11","sha256": "cb752a8b0463e7a5c4e4aba88f0d24e8c9a389309484cf36443884bb6fe6de91"},"properties": {"id1": "pkg:maven\/org.apache.avro\/avro@1.7.7","vid1": "cpe:2.3:a:apache:avro:1.7.7:*:*:*:*:*:*:*"}},{"description": {"text": "\nApache Commons Compress software defines an API for working with\ncompression and archive formats.  These include: bzip2, gzip, pack200,\nlzma, xz, Snappy, traditional Unix Compress, DEFLATE, DEFLATE64, LZ4,\nBrotli, Zstandard and ar, cpio, jar, tar, zip, dump, 7z, arj.\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.commons\/commons-compress\/pom.xml"},"hashes": {"md5": "7873b69b14687c9f833c89f239ef3770","sha1": "5fd8e87adb169ab13cb525b6986cf924685c2990","sha256": "9d5a690d1dea6a747e0dd8e74e64447167f395cb8f148010b8241334f58b525b"},"properties": {"id1": "pkg:maven\/org.apache.commons\/commons-compress@1.19","vid1": "cpe:2.3:a:apache:commons-compress:1.19:*:*:*:*:*:*:*","vid2": "cpe:2.3:a:apache:commons_compress:1.19:*:*:*:*:*:*:*"}},{"description": {"text": "\n        Tools to assist in the reading of configuration\/preferences files in\n        various formats\n    "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.commons\/commons-configuration2\/pom.xml"},"hashes": {"md5": "1451f7786fffc0c67065fb713c61ebc9","sha1": "abe302b96439550e835325980d0d01613ab20c07","sha256": "c023c9cc7999f04051a7b628ac6cbb2f97825495b03eec03a81f10dc5892731f"},"properties": {"id1": "pkg:maven\/org.apache.commons\/commons-configuration2@2.1.1","vid1": "cpe:2.3:a:apache:commons_configuration:2.1.1:*:*:*:*:*:*:*"}},{"description": {"text": "\n  Apache Commons Lang, a package of Java utility classes for the\n  classes that are in java.lang's hierarchy, or are considered to be so\n  standard as to justify existence in java.lang.\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.commons\/commons-lang3\/pom.xml"},"hashes": {"md5": "992fb3b7cc0209086761547745c2ce9e","sha1": "c445be3b6442b41cbea539d4218be3aea9428a55","sha256": "16bf63e86f5ea0404e89ed0f654b0915bea0030129aea9531d74369b71f764da"},"properties": {"id1": "pkg:maven\/org.apache.commons\/commons-lang3@3.7"}},{"description": {"text": "The Math project is a library of lightweight, self-contained mathematics and statistics components addressing the most common practical problems not immediately available in the Java programming language or commons-lang."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.commons\/commons-math3\/pom.xml"},"hashes": {"md5": "8ef1664338629b6e756fd291816eb2a0","sha1": "857e1177647f63abbdbb7ba63187b54db04a2dc2","sha256": "7938d22121c4e258c94ce2d16c1b683a2a4f8eb8b12ce09ca8409e179ed0117d"},"properties": {"id1": "pkg:maven\/org.apache.commons\/commons-math3@3.1.1"}},{"description": {"text": "Apache Commons Text is a library focused on algorithms working on strings."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.commons\/commons-text\/pom.xml"},"hashes": {"md5": "8e66b1cd3f6d591113fdf754452b6ed3","sha1": "f00061bfc3230893fc3298776a3ec80e6a013dfc","sha256": "bf1a7fe425f778424d5a91caad80bbc6c82d310dd28f32d5a24b2b8b596fc713"},"properties": {"id1": "pkg:maven\/org.apache.commons\/commons-text@1.4"}},{"description": {"text": "Low-level API"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.curator\/curator-client\/pom.xml"},"hashes": {"md5": "37e19f8a925da0987c63d66bbdac4ad1","sha1": "6c72dd455b5aa592e1fcf740450a0fd71835c27d","sha256": "36da112d632ecb104c358ef1ba061b2a559ac3b2144d47d52778a625caa4fc6c"},"properties": {"id1": "pkg:maven\/org.apache.curator\/curator-client@4.2.0"}},{"description": {"text": "High-level API that greatly simplifies using ZooKeeper."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.curator\/curator-framework\/pom.xml"},"hashes": {"md5": "54b6eaba949d85221c9509627c055d54","sha1": "f61ae86ae45e7a3e0f5bb24a5d72457dcf6e4989","sha256": "b9e8c711ef11a13d6f6c9c9de638e14915569b10f24f75bb4a20141176916225"},"properties": {"id1": "pkg:maven\/org.apache.curator\/curator-framework@4.2.0"}},{"description": {"text": "All of the recipes listed on the ZooKeeper recipes doc (except two phase commit)."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.curator\/curator-recipes\/pom.xml"},"hashes": {"md5": "641cceca2b99571d07748aa5f365c5c3","sha1": "18c9c37eff8f0b2e87416245e0f70a0062418629","sha256": "506d239592937bc14825a9c86a0500bae8b14c1ca47a0ebebf4d4f5b52c1c954"},"properties": {"id1": "pkg:maven\/org.apache.curator\/curator-recipes@4.2.0"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.hadoop.thirdparty\/hadoop-shaded-guava\/pom.xml"},"hashes": {"md5": "13ae395afc94c98a1f2249321af7cc0a","sha1": "b2474c17499b5e86bdd72c9139950ef9ba447d68","sha256": "d9189fe72452b5c5cbfae3f4442a144418cdb1d45a54b4ed69a5fa092301c97d"},"properties": {"id1": "pkg:maven\/org.apache.hadoop.thirdparty\/hadoop-shaded-guava@1.1.1","vid1": "cpe:2.3:a:apache:hadoop:1.1.1:*:*:*:*:*:*:*"}},{"description": {"text": "\n   Apache HttpComponents Core (blocking I\/O)\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.httpcomponents\/httpcore\/pom.xml"},"hashes": {"md5": "5c18b46ff40654f6ba7022e960b1ac0c","sha1": "7d4610db34bf2175d0d3813d7faac9cf7ca7c0e5","sha256": "8f812d9fa7b72a3d4aa7f825278932a5df344b42a6d8398905879431a1bf9a97"},"properties": {"id1": "pkg:maven\/org.apache.httpcomponents\/httpcore@4.4.13"}},{"description": {"text": "Kerby-kerb Admin facilities"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.kerby\/kerb-admin\/pom.xml"},"hashes": {"md5": "a421572868062e1016c71e8beecf1cc9","sha1": "a90b3d77eb076ff759c41c465a816f6a08871eb5","sha256": "5f468e8d16008963da3eaa766794af06030b9744301594d0a47117d4793a71f9"},"properties": {"id1": "pkg:maven\/org.apache.kerby\/kerb-admin@1.0.1"}},{"description": {"text": "Kerby-kerb Client"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.kerby\/kerb-client\/pom.xml"},"hashes": {"md5": "2b36d6ea707b1c30e91a8b5448cbe60c","sha1": "73ff9e02a86bf4c0024f07542816f3ad746561d5","sha256": "754dc899c68ae85e6810d9aba47bb5c01878bd3a1eeeee2b40ded71c6ffca410"},"properties": {"id1": "pkg:maven\/org.apache.kerby\/kerb-client@1.0.1"}},{"description": {"text": "Kerby-kerb Common facilities for both client and server"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.kerby\/kerb-common\/pom.xml"},"hashes": {"md5": "ac363df19af2e78b701630565dd3fda6","sha1": "269ba78fffc01720280b25e2a8353fef4af54990","sha256": "74a3e3b6f990e7a2e0eaeb7fd4d6369599c47c4e7fa54dea657b44657073e55b"},"properties": {"id1": "pkg:maven\/org.apache.kerby\/kerb-common@1.0.1"}},{"description": {"text": "Kerby-kerb core facilities"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.kerby\/kerb-core\/pom.xml"},"hashes": {"md5": "8581fa55f147f3eaade3cd4dda766265","sha1": "53a2d1140016b6e8fcdce5e7e12c1a1fe4b0dc00","sha256": "86f6ad02595c7c47283daa6f1d642a93f7584b30a5a6eb820245bf30b9677713"},"properties": {"id1": "pkg:maven\/org.apache.kerby\/kerb-core@1.0.1"}},{"description": {"text": "Kerby-kerb Crypto facility"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.kerby\/kerb-crypto\/pom.xml"},"hashes": {"md5": "69d8ea185e1bf86326cadfd12cdc0306","sha1": "a7b7d29734d42229c960bd26466cd4ed0fc63990","sha256": "0bb4815a29493b92fcabf6e73f6053e68383efa1a645ada99e966518d72f9c5c"},"properties": {"id1": "pkg:maven\/org.apache.kerby\/kerb-crypto@1.0.1"}},{"description": {"text": "Kerby-kerb Identity"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.kerby\/kerb-identity\/pom.xml"},"hashes": {"md5": "5500f0b5d325a1777d8036bd15e4e620","sha1": "7aecbc2bb7b56229a16bc401c491ba7e86b31acd","sha256": "d643046e00eab1f8b667e16296dec84ef552635630c18f161150787743de1ea2"},"properties": {"id1": "pkg:maven\/org.apache.kerby\/kerb-identity@1.0.1"}},{"description": {"text": "Kerby-kerb Server"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.kerby\/kerb-server\/pom.xml"},"hashes": {"md5": "68727faef720242ddd2ef6c70e26aa51","sha1": "9ce3284d6bbfed7d6f7f665e4e12f0818b86a015","sha256": "40029665eb9a8f1a4fd69b53522352877a6657f73035ef673058f4c867ef7767"},"properties": {"id1": "pkg:maven\/org.apache.kerby\/kerb-server@1.0.1"}},{"description": {"text": "Kerb Simple Kdc"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.kerby\/kerb-simplekdc\/pom.xml"},"hashes": {"md5": "84974153d9ddbd09f2671f4a5d0d974d","sha1": "981789c69c07fd594738093ac191b37fa266cb5e","sha256": "3a9c15fcb4d6be624de4b45ee715ebb2eaac032acf3f61d788131fac0a86b94b"},"properties": {"id1": "pkg:maven\/org.apache.kerby\/kerb-simplekdc@1.0.1"}},{"description": {"text": "Kerby-kerb Utilities"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.kerby\/kerb-util\/pom.xml"},"hashes": {"md5": "501e5e41cd7c761a574e916c20daca13","sha1": "9e1b711a08e54797e71374939f98ddc94e5e125c","sha256": "59d42b0ba246a8747140bec2c59cddfe14a99b21c409366a8d068e5fd5d8cbc4"},"properties": {"id1": "pkg:maven\/org.apache.kerby\/kerb-util@1.0.1"}},{"description": {"text": "Kerby ASN1 Project"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.kerby\/kerby-asn1\/pom.xml"},"hashes": {"md5": "dc3cea3de59b234406ab8696d7b2ad5c","sha1": "b53adc319fa573b55222a0dc744bef8166b017a5","sha256": "97a864a4b54ac617d1bc99d4db37f995095ce3e023ce4a255ca9322b9c7302ae"},"properties": {"id1": "pkg:maven\/org.apache.kerby\/kerby-asn1@1.0.1"}},{"description": {"text": "Kerby config library"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.kerby\/kerby-config\/pom.xml"},"hashes": {"md5": "457f3723158849b78ca47def23700ef7","sha1": "f2ccb46c5c0bc736deef9b530feee67c885e9024","sha256": "4715d150ec6c8c3f45871f6617f97b69a0857988282d383f70b59eba1e7c46da"},"properties": {"id1": "pkg:maven\/org.apache.kerby\/kerby-config@1.0.1"}},{"description": {"text": "Kerby PKIX Project"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.kerby\/kerby-pkix\/pom.xml"},"hashes": {"md5": "fb25762e01b590eb83aa04eac7443493","sha1": "3237ee87c8e6c2cd77bb9597ab31e58e35237d93","sha256": "0b70e7f24e4b81c62b74dacab7c3342e0e1d3d1139285dbb60c0e412876aab61"},"properties": {"id1": "pkg:maven\/org.apache.kerby\/kerby-pkix@1.0.1"}},{"description": {"text": "Kerby common util, without any 3rd party dependency"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.kerby\/kerby-util\/pom.xml"},"hashes": {"md5": "d0c04aef674b20bf66548ff140344f28","sha1": "1066937c8f3cd6ae134068de74149e9297baf77c","sha256": "4f1dea5550d7d7f3808f5101dab6b81830449c5b1be736eba2add08a9c94f6d9"},"properties": {"id1": "pkg:maven\/org.apache.kerby\/kerby-util@1.0.1"}},{"description": {"text": "Kerby XDR Project"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.kerby\/kerby-xdr\/pom.xml"},"hashes": {"md5": "39541793f5a7ce97c1eba96fc1fdeb26","sha1": "b79f9247dd6f5d9471b6fe2a1dab6f87504def53","sha256": "37b2a133d17dd268766ed050c4a2eb2f7bcb9930b7a7f8c3bb5e190661921656"},"properties": {"id1": "pkg:maven\/org.apache.kerby\/kerby-xdr@1.0.1"}},{"description": {"text": "Token provider project"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.kerby\/token-provider\/pom.xml"},"hashes": {"md5": "00fd29cf9a89be548465c25fef887cfd","sha1": "c41e7279e90d56e56291097459250d9ab1bbef75","sha256": "7374b7ca24c5ac80c704cf03cff86e678a6fa063fca467647d09a9e771543228"},"properties": {"id1": "pkg:maven\/org.apache.kerby\/token-provider@1.0.1"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.codehaus.mojo\/animal-sniffer-annotations\/pom.xml"},"hashes": {"md5": "196452fe33a7cc4c16e2e6f8c2fd6167","sha1": "80948bd07c5db60753d8d5a9164b8b2272e0842a","sha256": "e956ab5d2eb48fabae12300d0cd2d3294d4a2a41abc2068c23cb4d60ad76cbe5"},"properties": {"id1": "pkg:maven\/org.codehaus.mojo\/animal-sniffer-annotations@1.17"}},{"description": {"text": "tax2 API is an extension to basic Stax 1.0 API that adds significant new functionality, such as full-featured bi-direction validation interface and high-performance Typed Access API.\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.codehaus.woodstox\/stax2-api\/pom.xml"},"hashes": {"md5": "3a5b2e0759c9e274202af5768b77c82c","sha1": "052c4497300ff75147fade804f05351ded9e9eec","sha256": "79da410c8c0f46a3f8e8adb30d6c24ccd6065b6ef6bfde87bd97e9881ea0a2e7"},"properties": {"license": "The BSD License: http:\/\/www.opensource.org\/licenses\/bsd-license.php","id1": "pkg:maven\/org.codehaus.woodstox\/stax2-api@4.2.1"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.eclipse.jetty.websocket\/websocket-api\/pom.xml"},"hashes": {"md5": "75298fa0ae5d57ee93ff6c8f9b07991a","sha1": "23cb923521b72e62a1c81350a01d0e3e5b76e0ae","sha256": "284b65008261429980a5954cc3d1e2feddf4c1bb9da06f0dd2077118b8f7d938"},"properties": {"id1": "pkg:maven\/org.eclipse.jetty.websocket\/websocket-api@9.4.40.v20210413"}},{"description": {"text": "The jetty xml utilities."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.eclipse.jetty\/jetty-xml\/pom.xml"},"hashes": {"md5": "c1d45b47b62a2fc08a98f3b7a9cc901c","sha1": "6686016336f14798fc67565c30dc31c38fa226c2","sha256": "693d5b17b23ec8d5fd8a3d3d2342ba59912b888184f83d2f3ecf121a1a0e0248"},"properties": {"id1": "pkg:maven\/org.eclipse.jetty\/jetty-xml@9.4.40.v20210413","vid1": "cpe:2.3:a:eclipse:jetty:9.4.40:20210413:*:*:*:*:*:*","vid2": "cpe:2.3:a:jetty:jetty:9.4.40:20210413:*:*:*:*:*:*"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.jline\/jline-builtins\/pom.xml"},"hashes": {"md5": "33c507b180f48338fc5dcbd54ba957ea","sha1": "be00f1187dd43547c9f58ba239f2675ebc6f4699","sha256": "d5cea110936af258b70658586e006ea0f28055544cc0d9fc1cd078cae3fb9c88"},"properties": {"id1": "pkg:maven\/org.jline\/jline-builtins@3.9.0"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.jline\/jline-reader\/pom.xml"},"hashes": {"md5": "99a0e4aead860023e52bfa1dbc37c37c","sha1": "c97151dfb8ec42b3d729125348665f04cbf0f2cf","sha256": "9ddafc756de317e5dda7f1bc3c43328b59a9578fcef965cc7ba4630ff50d45b6"},"properties": {"id1": "pkg:maven\/org.jline\/jline-reader@3.9.0"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.jline\/jline-remote-ssh\/pom.xml"},"hashes": {"md5": "e7e17716c33a856b8f7e9f960e544d64","sha1": "976e31f547b994cdd2d7029b25cf305858ef2b67","sha256": "a50704421c1dff75c3535702ee1fe2a7e2f092accff63288bc91ca1ca5e509ab"},"properties": {"id1": "pkg:maven\/org.jline\/jline-remote-ssh@3.9.0"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.jline\/jline-remote-telnet\/pom.xml"},"hashes": {"md5": "7c69530d4e60be0cb48e9c71828a5640","sha1": "d87f3ba508cd7384a208fcec1d4e1c284a8744db","sha256": "bb26438c026a2f7769de3aae803050d5d254a66a877de04964bfc1cf3916bf6d"},"properties": {"id1": "pkg:maven\/org.jline\/jline-remote-telnet@3.9.0"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.jline\/jline-style\/pom.xml"},"hashes": {"md5": "db535a6686eb7e02799c114d1eb1c649","sha1": "3fd079ce1405a080dbb0c255189f3b037e13e6b5","sha256": "89492e37c7eac383e1a799630488d39e07d2b2e08138228bc789e82f5d3bc8d3"},"properties": {"id1": "pkg:maven\/org.jline\/jline-style@3.9.0"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.jline\/jline-terminal-jansi\/pom.xml"},"hashes": {"md5": "c2256017c11d49eb3fa5344b41c112cd","sha1": "9738cc4c06d9544218459c001c4b12f8b27f3a76","sha256": "9dfccdc1441b5b69ef78779444b17487026c3de2ec12ccc77a749c25fe2ccc66"},"properties": {"id1": "pkg:maven\/org.jline\/jline-terminal-jansi@3.9.0"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.jline\/jline-terminal-jna\/pom.xml"},"hashes": {"md5": "77fc6197899bb9b6cbae9e94cb26b82e","sha1": "2b67780740f41ff298e0508d99b867159ad22bdf","sha256": "c1a846aa3a81ea05711bca3e0d3d072720e80fc657b5aa66cfe61416dc11f058"},"properties": {"id1": "pkg:maven\/org.jline\/jline-terminal-jna@3.9.0"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.jline\/jline-terminal\/pom.xml"},"hashes": {"md5": "c37c3b9ca18d88c507b37732d3919417","sha1": "cad6d50b0024f4cd1537bff309a1cc004ceda646","sha256": "9544fb2b04dd64156ae0202534c4438e51aeee35a6b8e282566c71853d3feb41"},"properties": {"id1": "pkg:maven\/org.jline\/jline-terminal@3.9.0"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.jline\/jline\/pom.xml"},"hashes": {"md5": "59fc3c9ba8741ce29b2d2f0100295ee4","sha1": "9fca7de3d585a352cd619c516097d90d71a89cca","sha256": "87924e688e9892d8607f0083507990a1a3ecfba28111ec0349fb8800a05fdd8d"},"properties": {"id1": "pkg:maven\/org.jline\/jline@3.9.0"}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/historypage-common.js"},"hashes": {"md5": "4a99944095a794a7ed4d4f76ecdafb3e","sha1": "837e153520cc7fa677cb8265939d1a7827d78163","sha256": "deec786f6431857234746036116410f180a7f7a1c6dbd0f48746f2829bd77e83"},"properties": {}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/historypage.js"},"hashes": {"md5": "d8a11e6fa1bc1462b82f23d8fea08eb4","sha1": "70f7bb2524e222f2fbb661632f584bf26a61e062","sha256": "7f34938545493a0636582f9bb46736eed9219e56f77da059e3b0c153b99be91b"},"properties": {}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hive\/hive-exec\/2.3.9\/hive-exec-2.3.9-core.jar"},"hashes": {"md5": "60961223f48c77879c0d4f1c4819f3e6","sha1": "df3ce2399090f7647aa8907d563bd92d8b4d9c9b","sha256": "8df46e83c72a24c72185636b63c2b4b8760e169fb45086c3e5beafa776db7ae3"},"properties": {"id1": "pkg:maven\/org.apache.hive\/hive-exec@2.3.9","vid1": "cpe:2.3:a:apache:hive:2.3.9:*:*:*:*:*:*:*"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hive\/hive-storage-api\/2.7.2\/hive-storage-api-2.7.2.jar"},"hashes": {"md5": "5f2bd86269ab5f76a8e7a05a915c5f29","sha1": "68ebb7b11f93daaa43286d3d41279da0cfc06f35","sha256": "2ad0305d84f6293af7358df53596f7237a7df5fe3b22d3de6e13b44b57b74c85"},"properties": {"id1": "pkg:maven\/org.apache.hive\/hive-storage-api@2.7.2","vid1": "cpe:2.3:a:apache:hive:2.7.2:*:*:*:*:*:*:*"}},{"description": {"text": "${project.name}"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/glassfish\/hk2\/hk2-api\/2.6.1\/hk2-api-2.6.1.jar"},"hashes": {"md5": "23e8c18dae0c7b776bed756763d5153f","sha1": "114bd7afb4a1bd9993527f52a08a252b5d2acac5","sha256": "c2cb80a01e58440ae57d5ee59af4d4d94e5180e04aff112b0cb611c07d61e773"},"properties": {"license": "http:\/\/www.eclipse.org\/legal\/epl-2.0, https:\/\/www.gnu.org\/software\/classpath\/license.html","id1": "pkg:maven\/org.glassfish.hk2\/hk2-api@2.6.1"}},{"description": {"text": "${project.name}"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/glassfish\/hk2\/hk2-locator\/2.6.1\/hk2-locator-2.6.1.jar"},"hashes": {"md5": "dfd358720393d83b01747928db6e3912","sha1": "9dedf9d2022e38ec0743ed44c1ac94ad6149acdd","sha256": "febc668deb9f2000c76bd4918d8086c0a4c74d07bd0c60486b72c6bd38b62874"},"properties": {"license": "http:\/\/www.eclipse.org\/legal\/epl-2.0, https:\/\/www.gnu.org\/software\/classpath\/license.html","id1": "pkg:maven\/org.glassfish.hk2\/hk2-locator@2.6.1"}},{"description": {"text": "${project.name}"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/glassfish\/hk2\/hk2-utils\/2.6.1\/hk2-utils-2.6.1.jar"},"hashes": {"md5": "75ccb55538a77bf878996497ffeb86f3","sha1": "396513aa96c1d5a10aa4f75c4dcbf259a698d62d","sha256": "30727f79086452fdefdab08451d982c2082aa239d9f75cdeb1ba271e3c887036"},"properties": {"license": "http:\/\/www.eclipse.org\/legal\/epl-2.0, https:\/\/www.gnu.org\/software\/classpath\/license.html","id1": "pkg:maven\/org.glassfish.hk2\/hk2-utils@2.6.1","vid1": "cpe:2.3:a:oracle:utilities_framework:2.6.1:*:*:*:*:*:*:*"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/htrace\/htrace-core4\/4.1.0-incubating\/htrace-core4-4.1.0-incubating.jar"},"hashes": {"md5": "34f428e68910ea6555c79e733d433f1a","sha1": "12b3e2adda95e8c41d9d45d33db075137871d2e2","sha256": "5d45b7904857c3e4ad36b3bcc57be2d2c5f308c69b5f6a58bd86aa7d48a25ef6"},"properties": {"id1": "pkg:maven\/org.apache.htrace\/htrace-core4@4.1.0-incubating"}},{"description": {"text": "Core Jackson abstractions, basic JSON streaming API implementation\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/htrace\/htrace-core4\/4.1.0-incubating\/htrace-core4-4.1.0-incubating.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-core\/pom.xml"},"hashes": {"md5": "b5ed6cb7f987a4da86141638b1538d81","sha1": "ed8235ea6d84480833675e709b415bde24ce25f7","sha256": "8310978da8c7013ecaaba13c9b41b75ab3a09797ae4b946ae5e1614088f995d7"},"properties": {"id1": "pkg:maven\/com.fasterxml.jackson.core\/jackson-core@2.4.0","vid1": "cpe:2.3:a:fasterxml:jackson-modules-java8:2.4.0:*:*:*:*:*:*:*"}},{"description": {"text": "General data-binding functionality for Jackson: works on core streaming API"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/htrace\/htrace-core4\/4.1.0-incubating\/htrace-core4-4.1.0-incubating.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-databind\/pom.xml"},"hashes": {"md5": "d3f7afe903419aa0c03f9cf8682e1a69","sha1": "3c0d06b6c0a9f4135fcf5c5557c751c0cd066c0c","sha256": "083be927bdddaf1e992d0e9f0fff509b60f35deea307216d8ba773f065a6f30c"},"properties": {"id1": "pkg:maven\/com.fasterxml.jackson.core\/jackson-databind@2.4.0","vid1": "cpe:2.3:a:fasterxml:jackson-databind:2.4.0:*:*:*:*:*:*:*","vid2": "cpe:2.3:a:fasterxml:jackson-modules-java8:2.4.0:*:*:*:*:*:*:*"}},{"description": {"text": "Commons Logging is a thin adapter allowing configurable bridging to other,\n    well known logging systems."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/htrace\/htrace-core4\/4.1.0-incubating\/htrace-core4-4.1.0-incubating.jar\/META-INF\/maven\/commons-logging\/commons-logging\/pom.xml"},"hashes": {"md5": "976d812430b8246deeaf2ea54610f263","sha1": "76672afb562b9e903674ad3a544cdf2092f1faa3","sha256": "d0f2e16d054e8bb97add9ca26525eb2346f692809fcd2a28787da8ceb3c35ee8"},"properties": {"id1": "pkg:maven\/commons-logging\/commons-logging@1.1.1"}},{"description": {"text": "\n   Apache HttpComponents Client\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/httpcomponents\/httpclient\/4.5.13\/httpclient-4.5.13.jar"},"hashes": {"md5": "40d6b9075fbd28fa10292a45a0db9457","sha1": "e5f6cae5ca7ecaac1ec2827a9e2d65ae2869cada","sha256": "6fe9026a566c6a5001608cf3fc32196641f6c1e5e1986d1037ccdbd5f31ef743"},"properties": {"id1": "pkg:maven\/org.apache.httpcomponents\/httpclient@4.5.13","vid1": "cpe:2.3:a:apache:httpclient:4.5.13:*:*:*:*:*:*:*"}},{"description": {"text": "\n   Apache HttpComponents Core (blocking I\/O)\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/httpcomponents\/httpcore\/4.4.14\/httpcore-4.4.14.jar"},"hashes": {"md5": "2b3991eda121042765a5ee299556c200","sha1": "9dd1a631c082d92ecd4bd8fd4cf55026c720a8c1","sha256": "f956209e450cb1d0c51776dfbd23e53e9dd8db9a1298ed62b70bf0944ba63b28"},"properties": {"id1": "pkg:maven\/org.apache.httpcomponents\/httpcore@4.4.14"}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/initialize-tooltips.js"},"hashes": {"md5": "4bbbe3972ca4aca9bb6f1195ab949b7d","sha1": "68c4470ab3e44a88136bf826f6d2bc82ce76a3fc","sha256": "cbfddcaa32fbffc96a3311f358c7bf726e98c13b646dfc03e044a327e17cfc67"},"properties": {}},{"description": {"text": "istack common utility code"},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/sun\/istack\/istack-commons-runtime\/3.0.8\/istack-commons-runtime-3.0.8.jar"},"hashes": {"md5": "d8555a2f242c55d6727b4d0e82ab8446","sha1": "d6a97364045aa6b99bf2d3c566a3f98599c2d296","sha256": "4ffabb06be454a05e4398e20c77fa2b6308d4b88dfbef7ca30a76b5b7d5505ef"},"properties": {"license": "http:\/\/www.eclipse.org\/org\/documents\/edl-v10.php","id1": "pkg:maven\/com.sun.istack\/istack-commons-runtime@3.0.8"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/ivy\/ivy\/2.5.0\/ivy-2.5.0.jar"},"hashes": {"md5": "2958b7c9440835c9944a5db2ff920054","sha1": "7cd93e73e91acb868717ebf2410f966f53ae5897","sha256": "2f4c835b52311df922f8a8eb057843de5485088b234ccd03e478b9066b5e6bfc"},"properties": {"id1": "pkg:maven\/org.apache.ivy\/ivy@2.5.0","vid1": "cpe:2.3:a:apache:ant:2.5.0:*:*:*:*:*:*:*"}},{"description": {"text": "Core Jackson processing abstractions (aka Streaming API), implementation for JSON"},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/fasterxml\/jackson\/core\/jackson-core\/2.12.3\/jackson-core-2.12.3.jar"},"hashes": {"md5": "2f2db39bffd7e5ec8648977a740b870f","sha1": "deb23fe2a7f2b773e18ced2b50d4acc1df8fa366","sha256": "baef34fbce041d54f3af3ff4fc917ed8b43ed2a6fa30e0a6abfd9a2b2c3f71e0"},"properties": {"license": "The Apache Software License, Version 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/com.fasterxml.jackson.core\/jackson-core@2.12.3","vid1": "cpe:2.3:a:fasterxml:jackson-modules-java8:2.12.3:*:*:*:*:*:*:*"}},{"description": {"text": "Jackson is a high-performance JSON processor (parser, generator)\n"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/codehaus\/jackson\/jackson-core-asl\/1.9.13\/jackson-core-asl-1.9.13.jar"},"hashes": {"md5": "319c49a4304e3fa9fe3cd8dcfc009d37","sha1": "3c304d70f42f832e0a86d45bd437f692129299a4","sha256": "440a9cb5ca95b215f953d3a20a6b1a10da1f09b529a9ddea5f8a4905ddab4f5a"},"properties": {"license": "The Apache Software License, Version 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.codehaus.jackson\/jackson-core-asl@1.9.13"}},{"description": {"text": "General data-binding functionality for Jackson: works on core streaming API"},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/fasterxml\/jackson\/core\/jackson-databind\/2.12.3\/jackson-databind-2.12.3.jar"},"hashes": {"md5": "4e821fbfd2d3034ae84735b564c30fed","sha1": "d6153f8fc60c479ab0f9efb35c034526436a4953","sha256": "94d973062c2fda3dff2c9a85eafce57204821cce9085a99377693dbc9fb8da23"},"properties": {"license": "The Apache Software License, Version 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/com.fasterxml.jackson.core\/jackson-databind@2.12.3","vid1": "cpe:2.3:a:fasterxml:jackson-databind:2.12.3:*:*:*:*:*:*:*","vid2": "cpe:2.3:a:fasterxml:jackson-modules-java8:2.12.3:*:*:*:*:*:*:*"}},{"description": {"text": "Data Mapper package is a high-performance data binding package\nbuilt on Jackson JSON processor\n"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/codehaus\/jackson\/jackson-mapper-asl\/1.9.13\/jackson-mapper-asl-1.9.13.jar"},"hashes": {"md5": "1750f9c339352fc4b728d61b57171613","sha1": "1ee2f2bed0e5dd29d1cb155a166e6f8d50bbddb7","sha256": "74e7a07a76f2edbade29312a5a2ebccfa019128bc021ece3856d76197e9be0c2"},"properties": {"license": "The Apache Software License, Version 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.codehaus.jackson\/jackson-mapper-asl@1.9.13","vid1": "cpe:2.3:a:fasterxml:jackson-mapper-asl:1.9.13:*:*:*:*:*:*:*"}},{"description": {"text": "jackson-module-scala"},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/fasterxml\/jackson\/module\/jackson-module-scala_2.12\/2.12.3\/jackson-module-scala_2.12-2.12.3.jar"},"hashes": {"md5": "43014f69bbafdb86bc8b069ddac5d6c0","sha1": "7f7f80a98c92b539b193c652b5ff002cd52c2c6f","sha256": "bc71d461b7ea64e5f0556280c2fb921ff6c76d58dca6266339209ef18d2962ac"},"properties": {"license": "The Apache Software License, Version 2.0: https:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/com.fasterxml.jackson.module\/jackson-module-scala_2.12@2.12.3"}},{"description": {"text": "Jakarta Annotations API"},"location": {"uri": "file:///\/root\/.m2\/repository\/jakarta\/annotation\/jakarta.annotation-api\/1.3.5\/jakarta.annotation-api-1.3.5.jar"},"hashes": {"md5": "8b165cf58df5f8c2a222f637c0a07c97","sha1": "59eb84ee0d616332ff44aba065f3888cf002cd2d","sha256": "85fb03fc054cdf4efca8efd9b6712bbb418e1ab98241c4539c8585bbc23e1b8a"},"properties": {"license": "EPL 2.0: http:\/\/www.eclipse.org\/legal\/epl-2.0\nGPL2 w\/ CPE: https:\/\/www.gnu.org\/software\/classpath\/license.html","id1": "pkg:maven\/jakarta.annotation\/jakarta.annotation-api@1.3.5"}},{"description": {"text": "Injection API (JSR 330) version ${javax.inject.version} repackaged as OSGi bundle"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/glassfish\/hk2\/external\/jakarta.inject\/2.6.1\/jakarta.inject-2.6.1.jar"},"hashes": {"md5": "4d7c80a1e3cd54531af03bef4537f7af","sha1": "8096ebf722902e75fbd4f532a751e514f02e1eb7","sha256": "5e88c123b3e41bca788b2683118867d9b6dec714247ea91c588aed46a36ee24f"},"properties": {"license": "http:\/\/www.eclipse.org\/legal\/epl-2.0, https:\/\/www.gnu.org\/software\/classpath\/license.html","id1": "pkg:maven\/org.glassfish.hk2.external\/jakarta.inject@2.6.1"}},{"description": {"text": "Jakarta Servlet 4.0"},"location": {"uri": "file:///\/root\/.m2\/repository\/jakarta\/servlet\/jakarta.servlet-api\/4.0.3\/jakarta.servlet-api-4.0.3.jar"},"hashes": {"md5": "193258b1056435dba7919a978052cd81","sha1": "7c810f7bca93d109bac3323286b8e5ec6c394e12","sha256": "6d93010ca93301383c5ca960d55611a5c91798da1efb0f1fe9356f27831bf499"},"properties": {"license": "EPL 2.0: http:\/\/www.eclipse.org\/legal\/epl-2.0\nGPL2 w\/ CPE: https:\/\/www.gnu.org\/software\/classpath\/license.html","id1": "pkg:maven\/jakarta.servlet\/jakarta.servlet-api@4.0.3"}},{"description": {"text": "\n        Jakarta Bean Validation API\n    "},"location": {"uri": "file:///\/root\/.m2\/repository\/jakarta\/validation\/jakarta.validation-api\/2.0.2\/jakarta.validation-api-2.0.2.jar"},"hashes": {"md5": "77501d529c1928c9bac2500cc9f93fb0","sha1": "5eacc6522521f7eacb081f95cee1e231648461e7","sha256": "b42d42428f3d922c892a909fa043287d577c0c5b165ad9b7d568cebf87fc9ea4"},"properties": {"license": "Apache License 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/jakarta.validation\/jakarta.validation-api@2.0.2"}},{"description": {"text": "Jakarta RESTful Web Services API"},"location": {"uri": "file:///\/root\/.m2\/repository\/jakarta\/ws\/rs\/jakarta.ws.rs-api\/2.1.6\/jakarta.ws.rs-api-2.1.6.jar"},"hashes": {"md5": "c3892382aeb5c54085b22b1890511d29","sha1": "1dcb770bce80a490dff49729b99c7a60e9ecb122","sha256": "4cea299c846c8a6e6470cbfc2f7c391bc29b9caa2f9264ac1064ba91691f4adf"},"properties": {"license": "EPL 2.0: http:\/\/www.eclipse.org\/legal\/epl-2.0\nGPL2 w\/ CPE: https:\/\/www.gnu.org\/software\/classpath\/license.html","id1": "pkg:maven\/jakarta.ws.rs\/jakarta.ws.rs-api@2.1.6","vid1": "cpe:2.3:a:oracle:web_services:2.1.6:*:*:*:*:*:*:*"}},{"description": {"text": "JAXB (JSR 222) API"},"location": {"uri": "file:///\/root\/.m2\/repository\/jakarta\/xml\/bind\/jakarta.xml.bind-api\/2.3.2\/jakarta.xml.bind-api-2.3.2.jar"},"hashes": {"md5": "dabb40ba58199304c640b7bd8bb2fbac","sha1": "8d49996a4338670764d7ca4b85a1c4ccf7fe665d","sha256": "69156304079bdeed9fc0ae3b39389f19b3cc4ba4443bc80508995394ead742ea"},"properties": {"license": "http:\/\/www.eclipse.org\/org\/documents\/edl-v10.php","id1": "pkg:maven\/jakarta.xml.bind\/jakarta.xml.bind-api@2.3.2"}},{"description": {"text": "The \"JANINO\" implementation of the \"commons-compiler\" API: Super-small, super-fast, independent from the JDK's \"tools.jar\"."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/codehaus\/janino\/janino\/3.1.4\/janino-3.1.4.jar"},"hashes": {"md5": "e6baa2eea3e759fd7737ab1d3bf13228","sha1": "8e03cd83c0b0635c0e0a8e002078a44378af74b0","sha256": "234370ad8b26f76e4c6d92fa06340a36876a1157087ee0af26129ffd92103642"},"properties": {"license": "https:\/\/spdx.org\/licenses\/BSD-3-Clause.html","id1": "pkg:maven\/org.codehaus.janino\/janino@3.1.4"}},{"description": {"text": "\n  \tJavassist (JAVA programming ASSISTant) makes Java bytecode manipulation\n    simple.  It is a class library for editing bytecodes in Java.\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/javassist\/javassist\/3.25.0-GA\/javassist-3.25.0-GA.jar"},"hashes": {"md5": "3a4267e01989478be188d127b7a39425","sha1": "442dc1f9fd520130bd18da938622f4f9b2e5fba3","sha256": "5d49abd02997134f80041645e9668e1ff97afd69d2c2c55ae9fbd40dc073f97b"},"properties": {"license": "MPL 1.1: http:\/\/www.mozilla.org\/MPL\/MPL-1.1.html\nLGPL 2.1: http:\/\/www.gnu.org\/licenses\/lgpl-2.1.html\nApache License 2.0: http:\/\/www.apache.org\/licenses\/","id1": "pkg:maven\/org.javassist\/javassist@3.25.0-GA"}},{"description": {"text": "Common Annotations for the JavaTM Platform API"},"location": {"uri": "file:///\/root\/.m2\/repository\/javax\/annotation\/javax.annotation-api\/1.3.2\/javax.annotation-api-1.3.2.jar"},"hashes": {"md5": "2ab1973eefffaa2aeec47d50b9e40b9d","sha1": "934c04d3cfef185a8008e7bf34331b79730a9d43","sha256": "e04ba5195bcd555dc95650f7cc614d151e4bcd52d29a10b8aa2197f3ab89ab9b"},"properties": {"license": "CDDL + GPLv2 with classpath exception: https:\/\/github.com\/javaee\/javax.annotation\/blob\/master\/LICENSE","id1": "pkg:maven\/javax.annotation\/javax.annotation-api@1.3.2"}},{"description": {"text": "The Java Data Objects API (JDO) : a standard interface-based Java model abstraction of persistence, developed by the JCP."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/datanucleus\/javax.jdo\/3.2.0-m3\/javax.jdo-3.2.0-m3.jar"},"hashes": {"md5": "53e1eac14fa3a58cf0054f03373af8f4","sha1": "c911b22710a8f77541a966615033b4ab943fd6f3","sha256": "b0e338881376e4588f7564ae2dcc91737148e7c950873f6b0b899cbf0feef80b"},"properties": {"license": "http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.datanucleus\/javax.jdo@3.2.0-m3"}},{"description": {"text": "Java(TM) Servlet 3.1 API Design Specification"},"location": {"uri": "file:///\/root\/.m2\/repository\/javax\/servlet\/javax.servlet-api\/3.1.0\/javax.servlet-api-3.1.0.jar"},"hashes": {"md5": "79de69e9f5ed8c7fcb8342585732bbf7","sha1": "3cd63d075497751784b2fa84be59432f4905bf7c","sha256": "af456b2dd41c4e82cf54f3e743bc678973d9fe35bd4d3071fa05c7e5333b8482"},"properties": {"license": "CDDL + GPLv2 with classpath exception: https:\/\/glassfish.dev.java.net\/nonav\/public\/CDDL+GPL.html","id1": "pkg:maven\/javax.servlet\/javax.servlet-api@3.1.0"}},{"description": {"text": "Javolution - Java Solution for Real-Time and Embedded Systems.\n        This project uses template classes to generates java code for various versions\n        of the Java run-time (e.g. J2ME, 1.4, GCJ, 1.5). The default maven compilation\n        builds OSGI bundle for Java 1.5+ (parameterized classes).\n        For others targets the ant script should be used directly (e.g. \"ant j2me\").\n    "},"location": {"uri": "file:///\/root\/.m2\/repository\/javolution\/javolution\/5.5.1\/javolution-5.5.1.jar"},"hashes": {"md5": "1b7257da4690bada3cac7293985f8588","sha1": "3fcba819cdb7861728405963ddc4b2755ab182e5","sha256": "6de167427fb5ad34fe533cb36a8b3427fa6052a2b99781874396ed5cca9f8ed1"},"properties": {"license": "BSD License: http:\/\/javolution.org\/LICENSE.txt","id1": "pkg:maven\/javolution\/javolution@5.5.1"}},{"description": {"text": "JAXB (JSR 222) API"},"location": {"uri": "file:///\/root\/.m2\/repository\/javax\/xml\/bind\/jaxb-api\/2.2.11\/jaxb-api-2.2.11.jar"},"hashes": {"md5": "5983d1e2ec1a9b0604575cd9e9582591","sha1": "32274d4244967ff43e7a5d967743d94ed3d2aea7","sha256": "273d82f8653b53ad9d00ce2b2febaef357e79a273560e796ff3fcfec765f8910"},"properties": {"license": "CDDL 1.1: https:\/\/glassfish.java.net\/public\/CDDL+GPL_1_1.html\nGPL2 w\/ CPE: https:\/\/glassfish.java.net\/public\/CDDL+GPL_1_1.html","id1": "pkg:maven\/javax.xml.bind\/jaxb-api@2.2.11"}},{"description": {"text": "JAXB (JSR 222) Reference Implementation"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/glassfish\/jaxb\/jaxb-runtime\/2.3.2\/jaxb-runtime-2.3.2.jar"},"hashes": {"md5": "9c3bf13a58e56c1b955bf5a365ca10b2","sha1": "5528bc882ea499a09d720b42af11785c4fc6be2a","sha256": "e6e0a1e89fb6ff786279e6a0082d5cef52dc2ebe67053d041800737652b4fd1b"},"properties": {"id1": "pkg:maven\/org.glassfish.jaxb\/jaxb-runtime@2.3.2"}},{"description": {"text": "JCL 1.2 implemented over SLF4J"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/slf4j\/jcl-over-slf4j\/1.7.30\/jcl-over-slf4j-1.7.30.jar"},"hashes": {"md5": "69ad224b2feb6f86554fe8997b9c3d4b","sha1": "cd92524ea19d27e5b94ecd251e1af729cffdfe15","sha256": "71e9ee37b9e4eb7802a2acc5f41728a4cf3915e7483d798db3b4ff2ec8847c50"},"properties": {"license": "Apache License, Version 2.0: https:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.slf4j\/jcl-over-slf4j@1.7.30"}},{"description": {"text": "The Java Data Objects (JDO) API is a standard interface-based Java model abstraction of persistence, developed as Java Specification Request 243 under the auspices of the Java Community Process."},"location": {"uri": "file:///\/root\/.m2\/repository\/javax\/jdo\/jdo-api\/3.0.1\/jdo-api-3.0.1.jar"},"hashes": {"md5": "978ae9726514457b8cfe8a3ba1c17ca5","sha1": "058e7a538e020b73871e232eeb064835fd98a492","sha256": "2a2e63d44a4d7fe267650d08431218648adee14f725df3896d09db3084d7a2f2"},"properties": {"license": "Apache 2: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/javax.jdo\/jdo-api@3.0.1"}},{"description": {"text": "Jersey core server implementation"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/glassfish\/jersey\/core\/jersey-server\/2.34\/jersey-server-2.34.jar"},"hashes": {"md5": "5c0de0e2c2c0585d82737aa5bc5f6269","sha1": "3f3ad63ce2b51ff565d3ba85eeb8202983e9be13","sha256": "553768b59190093e8af89b3171b333c4bfbbf9f89f82939857c8d27f2bffc98b"},"properties": {"license": "EPL 2.0: http:\/\/www.eclipse.org\/legal\/epl-2.0\nThe GNU General Public License (GPL), Version 2, With Classpath Exception: https:\/\/www.gnu.org\/software\/classpath\/license.html\nApache License, 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html\nModified BSD: http:\/\/asm.objectweb.org\/license.html","id1": "pkg:maven\/org.glassfish.jersey.core\/jersey-server@2.34","vid1": "cpe:2.3:a:jersey_project:jersey:2.34:*:*:*:*:*:*:*"}},{"description": {"text": "Jetty module for Jetty :: IO Utility"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/eclipse\/jetty\/jetty-io\/9.4.40.v20210413\/jetty-io-9.4.40.v20210413.jar"},"hashes": {"md5": "8982c5f09a934e837fa8e228b756f510","sha1": "c420368a360c20b40a57897676d581462d0a54c0","sha256": "480a679eaba36be7b408b9d131d36e50399d60da89a394afe62963d83bc79af3"},"properties": {"license": "http:\/\/www.apache.org\/licenses\/LICENSE-2.0, https:\/\/www.eclipse.org\/org\/documents\/epl-v10.php","id1": "pkg:maven\/org.eclipse.jetty\/jetty-io@9.4.40.v20210413","vid1": "cpe:2.3:a:mortbay_jetty:jetty:9.4.40:20210413:*:*:*:*:*:*"}},{"description": {"text": "Jetty module for Jetty :: IO Utility"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/eclipse\/jetty\/jetty-io\/9.4.42.v20210604\/jetty-io-9.4.42.v20210604.jar"},"hashes": {"md5": "4da18c010ced65856dd49e69468c616d","sha1": "581c5bb1aca96934e6961315fff066000c783659","sha256": "d0d0636d41e116098d769dbe42fb7b7a0de6ba8fc43d9530c048aa511f5dc99b"},"properties": {"license": "http:\/\/www.apache.org\/licenses\/LICENSE-2.0, https:\/\/www.eclipse.org\/org\/documents\/epl-v10.php","id1": "pkg:maven\/org.eclipse.jetty\/jetty-io@9.4.42.v20210604","vid1": "cpe:2.3:a:mortbay_jetty:jetty:9.4.42:20210604:*:*:*:*:*:*"}},{"description": {"text": "The core jetty server artifact."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/eclipse\/jetty\/jetty-server\/9.4.42.v20210604\/jetty-server-9.4.42.v20210604.jar"},"hashes": {"md5": "dd74817327198bf4e84b2b563f3893b6","sha1": "f5f95cdabe677bd8aad9e80f5e125c5b1c5011aa","sha256": "686df52be3629ed40f95c35963777f0e7606c807c14fb817bd602793e3ccd0f9"},"properties": {"license": "http:\/\/www.apache.org\/licenses\/LICENSE-2.0, https:\/\/www.eclipse.org\/org\/documents\/epl-v10.php","id1": "pkg:maven\/org.eclipse.jetty\/jetty-server@9.4.42.v20210604","vid1": "cpe:2.3:a:eclipse:jetty:9.4.42:20210604:*:*:*:*:*:*","vid2": "cpe:2.3:a:jetty:jetty:9.4.42:20210604:*:*:*:*:*:*","vid3": "cpe:2.3:a:jetty:jetty_http_server:9.4.42:20210604:*:*:*:*:*:*","vid4": "cpe:2.3:a:mortbay_jetty:jetty:9.4.42:20210604:*:*:*:*:*:*"}},{"description": {"text": "The jetty xml utilities."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/eclipse\/jetty\/jetty-xml\/9.4.42.v20210604\/jetty-xml-9.4.42.v20210604.jar"},"hashes": {"md5": "3cb0cae71234bf53040c562796e652e4","sha1": "8333226af8fcd8c10dc78da5b5ee12ed6848be26","sha256": "5aa82355a10821d40e40ea3af98bc2ffa924c688e1cf3f92e08e8a8e06894777"},"properties": {"license": "http:\/\/www.apache.org\/licenses\/LICENSE-2.0, https:\/\/www.eclipse.org\/org\/documents\/epl-v10.php","id1": "pkg:maven\/org.eclipse.jetty\/jetty-xml@9.4.42.v20210604","vid1": "cpe:2.3:a:eclipse:jetty:9.4.42:20210604:*:*:*:*:*:*","vid2": "cpe:2.3:a:jetty:jetty:9.4.42:20210604:*:*:*:*:*:*","vid3": "cpe:2.3:a:mortbay_jetty:jetty:9.4.42:20210604:*:*:*:*:*:*"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/jline\/jline\/2.14.6\/jline-2.14.6.jar"},"hashes": {"md5": "480423551649bc6980b43f09e4717272","sha1": "c3aeac59c022bdc497c8c48ed86fa50450e4896a","sha256": "97d1acaac82409be42e622d7a54d3ae9d08517e8aefdea3d2ba9791150c2f02d"},"properties": {"license": "The BSD License: http:\/\/www.opensource.org\/licenses\/bsd-license.php","id1": "pkg:maven\/jline\/jline@2.14.6"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/jline\/jline\/2.14.6\/jline-2.14.6.jar\/META-INF\/native\/windows64\/jansi.dll"},"hashes": {"md5": "b009262ec2c7e84839af9729b752f14e","sha1": "8d96f40da8970ddd48af4517512a0fdd077c33da","sha256": "daed7ea5b66bce3821742564af812b6f4e25939b3d273ed5a156ba7c92c452dc"},"properties": {}},{"location": {"uri": "file:///\/root\/.m2\/repository\/jline\/jline\/2.14.6\/jline-2.14.6.jar\/META-INF\/native\/windows32\/jansi.dll"},"hashes": {"md5": "83fdcbb296f9732176748e443c7637a5","sha1": "f91fda2c7f9f485db21a50c05ff3a65c1fa20090","sha256": "7db0fdba01b93f8d45c8fa9ba949f424efb0361d6f8af5561d769378d8b3a1ac"},"properties": {}},{"description": {"text": "Date and time library to replace JDK date handling"},"location": {"uri": "file:///\/root\/.m2\/repository\/joda-time\/joda-time\/2.10.10\/joda-time-2.10.10.jar"},"hashes": {"md5": "c2a46de8a73ec7b60011429561ae72e3","sha1": "29e8126e31f41e5c12b9fe3a7eb02e704c47d70b","sha256": "dd8e7c92185a678d1b7b933f31209b6203c8ffa91e9880475a1be0346b9617e3"},"properties": {"license": "Apache License, Version 2.0: https:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/joda-time\/joda-time@2.10.10","vid1": "cpe:2.3:a:time_project:time:2.10.10:*:*:*:*:*:*:*"}},{"description": {"text": "Jodd Core tools and utilities, including type converters, JDateTime, cache etc."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/jodd\/jodd-core\/3.5.2\/jodd-core-3.5.2.jar"},"hashes": {"md5": "22c37c2de6e254dff68b787da51e160e","sha1": "a9ac8028eeeb5fa430e17017628629c94123c401","sha256": "562478781548bd9cbdeef87f940967cf5cbcd5c1e6497a9056c8c89e603ec9be"},"properties": {"license": "The New BSD License: http:\/\/jodd.org\/license.html","id1": "pkg:maven\/org.jodd\/jodd-core@3.5.2","vid1": "cpe:2.3:a:jodd:jodd:3.5.2:*:*:*:*:*:*:*"}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/jquery-3.5.1.min.js"},"hashes": {"md5": "dc5e7f18c8d36ac1d3d4753a87c98d0a","sha1": "c8e1c8b386dc5b7a9184c763c88d19a346eb3342","sha256": "f7f6a5894f1d19ddad6fa392b2ece2c5e578cbf7da4ea805b6885eb6985b6e3d"},"properties": {}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/jquery.blockUI.min.js"},"hashes": {"md5": "879f6c970e4ae4ae559ce9e40668bfd3","sha1": "94549079c4adcfed8a7527616c1323ada3a287f4","sha256": "806aedff52ac822f2adc5797073e1e5c5cec32eb9f15f2319cb32a347dcd232b"},"properties": {}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/jquery.cookies.2.2.0.min.js"},"hashes": {"md5": "03b9574487d06f8f8513f95758c7cab3","sha1": "90a61ac9835905ebec2bb1499dd0b0de894f8045","sha256": "10fdbfbb18a947e7024457f52fd2dfe94ebddd612156c886731474b02aa45d23"},"properties": {}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/jquery.dataTables.1.10.20.min.js"},"hashes": {"md5": "64cd39014cddcb7305b2422bd1356db8","sha1": "608cb2069d3ff41f03d5d1e883625a2b30f3b532","sha256": "2f871fee6fdc802e757bb0453f141c299717af2cd28eeed56012892ce28f1ef4"},"properties": {}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/jquery.mustache.js"},"hashes": {"md5": "edd6196bafbc99da4b069d0aef2714a5","sha1": "a8e3b156340b754fb94ca493e1683263b77b096c","sha256": "520f7bf7d54c8dde783aaf6f0dac66c9edc55da01716ccabca6888686822e7d6"},"properties": {}},{"description": {"text": "A clean-room Apache-licensed implementation of simple JSON processing"},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/tdunning\/json\/1.8\/json-1.8.jar"},"hashes": {"md5": "a89b66cf37063d0ee4f401193eb0ca2d","sha1": "fa57d5adf557b226738cd42e6c093dd0a76c5fd4","sha256": "e0b487de3ccd3d1c288976677835e49880799c35507059039a18fa4ae1e7c59a"},"properties": {"license": "The Apache Software License, Version 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/com.tdunning\/json@1.8"}},{"description": {"text": "json4s-ast"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/json4s\/json4s-ast_2.12\/3.7.0-M11\/json4s-ast_2.12-3.7.0-M11.jar"},"hashes": {"md5": "f106ddf363ca77383877ccb0bdeaa425","sha1": "f8c92b6b7cb37f3e2fdf649ad1ba3d65248bb45d","sha256": "f9388c0ad4a969bf1a1867e85ce24ed87ca5a1095342b96b35c356fd971b544d"},"properties": {"license": "Apache-2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0","id1": "pkg:maven\/org.json4s\/json4s-ast_2.12@3.7.0-M11"}},{"description": {"text": "json4s-core"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/json4s\/json4s-core_2.12\/3.7.0-M11\/json4s-core_2.12-3.7.0-M11.jar"},"hashes": {"md5": "1db3cb3db15c895307cfd20b81e2d8a6","sha1": "4126de102c272d727ea0e1875ee3db9f6ac7060f","sha256": "2fd8e66a3715565294c4edb5d2514e7ff59a14960c7f8dd84cf0991661a48a10"},"properties": {"license": "Apache-2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0","id1": "pkg:maven\/org.json4s\/json4s-core_2.12@3.7.0-M11"}},{"description": {"text": "json4s-jackson"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/json4s\/json4s-jackson_2.12\/3.7.0-M11\/json4s-jackson_2.12-3.7.0-M11.jar"},"hashes": {"md5": "53dc7ac002aa4de2843799cd239aae2d","sha1": "54089dd27d932de33c329199474ad429ee076510","sha256": "d03ed279c83870b9bd624b1817fe6290822d7e74207d1e250860fbdd935643dc"},"properties": {"license": "Apache-2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0","id1": "pkg:maven\/org.json4s\/json4s-jackson_2.12@3.7.0-M11"}},{"description": {"text": "json4s-scalap"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/json4s\/json4s-scalap_2.12\/3.7.0-M11\/json4s-scalap_2.12-3.7.0-M11.jar"},"hashes": {"md5": "2a5d1806ab0330c4e355c34a13afaf9e","sha1": "5a5aafd028f7ac4a8565e1cebe1307c146c87f70","sha256": "d2a1f84b618e1cba12c4e8ce2babc23d78a12de5f568abf8fbaeca39c52e0eb8"},"properties": {"license": "Apache-2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0","id1": "pkg:maven\/org.json4s\/json4s-scalap_2.12@3.7.0-M11"}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/jsonFormatter.min.js"},"hashes": {"md5": "beca83ee888fc4e974d0069b5e94b6ea","sha1": "0795631699a4d227e3cf13398792d54c0f4e4eb2","sha256": "182aaeba495cc66257d9c46ea68df28139bd6f02eb97695341ef4dae69dd0539"},"properties": {}},{"description": {"text": "JSR305 Annotations for Findbugs"},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/google\/code\/findbugs\/jsr305\/3.0.0\/jsr305-3.0.0.jar"},"hashes": {"md5": "195d5db8981fbec5fa18d5df9fad95ed","sha1": "5871fb60dc68d67da54a663c3fd636a10a532948","sha256": "bec0b24dcb23f9670172724826584802b80ae6cbdaba03bdebdef9327b962f6a"},"properties": {"license": "The Apache Software License, Version 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/com.google.code.findbugs\/jsr305@3.0.0"}},{"description": {"text": "\n    The javax.transaction package. It is appropriate for inclusion in a classpath, and may be added to a Java 2 installation.\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/javax\/transaction\/jta\/1.1\/jta-1.1.jar"},"hashes": {"md5": "82a10ce714f411b28f13850059de09ee","sha1": "2ca09f0b36ca7d71b762e14ea2ff09d5eac57558","sha256": "b8ec163b4a47bad16f9a0b7d03c3210c6b0a29216d768031073ac20817c0ba50"},"properties": {"id1": "pkg:maven\/javax.transaction\/jta@1.1"}},{"description": {"text": "JUL to SLF4J bridge"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/slf4j\/jul-to-slf4j\/1.7.30\/jul-to-slf4j-1.7.30.jar"},"hashes": {"md5": "f2c78cb93d70dc5dea0c50f36ace09c1","sha1": "d58bebff8cbf70ff52b59208586095f467656c30","sha256": "bbcbfdaa72572255c4f85207a9bfdb24358dc993e41252331bd4d0913e4988b9"},"properties": {"id1": "pkg:maven\/org.slf4j\/jul-to-slf4j@1.7.30"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/kafka\/kafka-clients\/2.8.0\/kafka-clients-2.8.0.jar"},"hashes": {"md5": "e57ddd02a349770f42d4019e85097dc8","sha1": "a4f66ca79617470d1355b809675313619bbae45a","sha256": "dfdce6e0d4abb1ad87f91246aa903f469de1061c7a0e020466ff5dcfb156bc2a"},"properties": {"license": "The Apache Software License, Version 2.0: https:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.apache.kafka\/kafka-clients@2.8.0","vid1": "cpe:2.3:a:apache:kafka:2.8.0:*:*:*:*:*:*:*"}},{"description": {"text": "Fast, efficient Java serialization. This is the parent pom that assembles the main kryo and shaded kryo artifacts."},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/esotericsoftware\/kryo-shaded\/4.0.2\/kryo-shaded-4.0.2.jar"},"hashes": {"md5": "27717b481916c44eed34ea7a68782ed5","sha1": "e8c89779f93091aa9cb895093402b5d15065bf88","sha256": "a4899f57fef456b9ec66f730e7b493ecb3dc494cc5758721ed9c18416fd2d3b6"},"properties": {"license": "3-Clause BSD License: https:\/\/opensource.org\/licenses\/BSD-3-Clause","id1": "pkg:maven\/com.esotericsoftware\/kryo-parent@4.0.2","id2": "pkg:maven\/com.esotericsoftware\/kryo-shaded@4.0.2"}},{"description": {"text": "High performance Java reflection using code generation"},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/esotericsoftware\/kryo-shaded\/4.0.2\/kryo-shaded-4.0.2.jar\/META-INF\/maven\/com.esotericsoftware\/reflectasm\/pom.xml"},"hashes": {"md5": "9ab3a0dad36d0b32447722ad06018470","sha1": "da632f37b4ae2181ea53e43b3212428c2a23c478","sha256": "1c5a80634d547bf5ec80c71624db9d8837e2702d01375e3b8b5c0f32d1e81e61"},"properties": {"license": "New BSD License: http:\/\/www.opensource.org\/licenses\/bsd-license.php","id1": "pkg:maven\/com.esotericsoftware\/reflectasm@1.11.3"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/dev\/ludovic\/netlib\/lapack\/2.2.0\/lapack-2.2.0.jar"},"hashes": {"md5": "ea29c00c94e4b86db8d57a0ddeede86c","sha1": "f634f1885af05e5c39f1c21afef43318d3f56eda","sha256": "3f143b35bac8e654760b6ffed82c6b11c028592ecf55c8fd4ba8b3cc12fab9d6"},"properties": {"id1": "pkg:maven\/dev.ludovic.netlib\/lapack@2.2.0"}},{"description": {"text": "An uber jar which contains all the leveldbjni platform libraries and dependencies"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/fusesource\/leveldbjni\/leveldbjni-all\/1.8\/leveldbjni-all-1.8.jar"},"hashes": {"md5": "6944e9bc03c7938868e53c96726ae914","sha1": "707350a2eeb1fa2ed77a32ddb3893ed308e941db","sha256": "c297213b0e6f9392305952753f3099a4c02e70b3656266fe01867e7b6c160ffe"},"properties": {"license": "http:\/\/www.opensource.org\/licenses\/BSD-3-Clause","id1": "pkg:maven\/org.fusesource.leveldbjni\/leveldbjni-all@1.8"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/fusesource\/leveldbjni\/leveldbjni-all\/1.8\/leveldbjni-all-1.8.jar\/META-INF\/native\/windows64\/leveldbjni.dll"},"hashes": {"md5": "4b6fa20009ca1eb556e752671461a3f2","sha1": "978ca9c96c03eb220556ce5bc96c715f95a0967c","sha256": "7794f7bbc848d1a9ad98996f2c68a1cf12ac17562f646c6d7f5733404a7b5ef1"},"properties": {}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/fusesource\/leveldbjni\/leveldbjni-all\/1.8\/leveldbjni-all-1.8.jar\/META-INF\/native\/windows32\/leveldbjni.dll"},"hashes": {"md5": "551b9310a9ed358359296a89715df2f4","sha1": "bba450e93688b872b3fcaa31e8457950e97d8429","sha256": "3cf3f6284f99acad369a15f0b4eca8e0dec2b0342651c519e4665570da8a68ee"},"properties": {}},{"description": {"text": "Thrift is a software framework for scalable cross-language services development."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/thrift\/libfb303\/0.9.3\/libfb303-0.9.3.jar"},"hashes": {"md5": "5e1c646346ecf2750a1b8b6cb2aa1c4f","sha1": "5d1abb695642e88558f4e7e0d32aa1925a1fd0b7","sha256": "23fc397a42181b17bb7d0fada2213735ed8db38cfbf038d12b9c00ea7419e11b"},"properties": {"license": "The Apache Software License, Version 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.apache.thrift\/libfb303@0.9.3","vid1": "cpe:2.3:a:apache:thrift:0.9.3:*:*:*:*:*:*:*"}},{"description": {"text": "Thrift is a software framework for scalable cross-language services development."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/thrift\/libthrift\/0.12.0\/libthrift-0.12.0.jar"},"hashes": {"md5": "6a4a3db3b6674e59e2ed386372e5f04b","sha1": "300bfbee03c7afa77301fb0946115e400e28ae04","sha256": "28478ea7b296ff569aae07271ddaf1d2118bcb325495f25a2d323891cfc46c68"},"properties": {"license": "The Apache Software License, Version 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.apache.thrift\/libthrift@0.12.0","vid1": "cpe:2.3:a:apache:thrift:0.12.0:*:*:*:*:*:*:*"}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/log-view.js"},"hashes": {"md5": "8ea252ab0ae81bed5856bd5dd0c72bcb","sha1": "50055eb57856a70a2334245602d9ae4851306063","sha256": "b82a4899ad4bc25fc2e72142d61e879d84f54c4a77be9b0efdb88f3776e07379"},"properties": {}},{"description": {"text": "Apache Log4j 1.2"},"location": {"uri": "file:///\/root\/.m2\/repository\/log4j\/log4j\/1.2.17\/log4j-1.2.17.jar"},"hashes": {"md5": "04a41f0a068986f0f73485cf507c0f40","sha1": "5af35056b4d257e4b64b9e8069c0746e8b08629f","sha256": "1d31696445697720527091754369082a6651bd49781b6005deb94e56753406f9"},"properties": {"license": "The Apache Software License, Version 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/log4j\/log4j@1.2.17","vid1": "cpe:2.3:a:apache:log4j:1.2.17:*:*:*:*:*:*:*"}},{"description": {"text": "Java ports and bindings of the LZ4 compression algorithm and the xxHash hashing algorithm"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/lz4\/lz4-java\/1.7.1\/lz4-java-1.7.1.jar"},"hashes": {"md5": "d56d86823662a663a4d614dd5e117eff","sha1": "c4d931ef8ad2c9c35d65b231a33e61428472d0da","sha256": "f1167a45d4b8002053670ef6991ca66d1bab9dcc03e4ef00183674d2f3fb9cac"},"properties": {"license": "The Apache Software License, Version 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.lz4\/lz4-java@1.7.1"}},{"description": {"text": "machinist"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/typelevel\/machinist_2.12\/0.6.8\/machinist_2.12-0.6.8.jar"},"hashes": {"md5": "a1797e977a9e0356e479446b210906ac","sha1": "005f242d36de554d7bb659dbcbe6ffd1caf31690","sha256": "570aede4e5e88f4f881aa6a49d958b76af3457aa3662bd590d254eb7d64c08e0"},"properties": {"license": "MIT: http:\/\/opensource.org\/licenses\/MIT","id1": "pkg:maven\/org.typelevel\/machinist_2.12@0.6.8"}},{"description": {"text": "core"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/typelevel\/macro-compat_2.12\/1.1.1\/macro-compat_2.12-1.1.1.jar"},"hashes": {"md5": "c6c8927e9d6b7e3e4f60c019f146d099","sha1": "ed809d26ef4237d7c079ae6cf7ebd0dfa7986adf","sha256": "8b1514ec99ac9c7eded284367b6c9f8f17a097198a44e6f24488706d66bbd2b8"},"properties": {"license": "Apache 2: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.typelevel\/macro-compat_2.12@1.1.1"}},{"description": {"text": "\n        Metrics is a Java library which gives you unparalleled insight into what your code does in\n        production. Metrics provides a powerful toolkit of ways to measure the behavior of critical\n        components in your production environment.\n    "},"location": {"uri": "file:///\/root\/.m2\/repository\/io\/dropwizard\/metrics\/metrics-core\/4.2.2\/metrics-core-4.2.2.jar"},"hashes": {"md5": "ea8061fae029bd114934a765f7acff38","sha1": "a18f58f2f02cdf0a98289b0be782d8668519785a","sha256": "c730780f109e12cbfb9e58e58ce97886ab178d4a21a397a6b6785c0968a76d78"},"properties": {"license": "https:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/io.dropwizard.metrics\/metrics-core@4.2.2"}},{"description": {"text": "\n        A reporter for Metrics which announces measurements to a Graphite server.\n    "},"location": {"uri": "file:///\/root\/.m2\/repository\/io\/dropwizard\/metrics\/metrics-graphite\/4.2.2\/metrics-graphite-4.2.2.jar"},"hashes": {"md5": "f635df13cba2d05c007399cd3978e59b","sha1": "498f4e963b3478cf3c13042f02adda6641c78437","sha256": "fa3cb2855aeb4d5134386e9adee01b8d5ffed2265c142fbcd32929d1c2f065f9"},"properties": {"license": "https:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/io.dropwizard.metrics\/metrics-graphite@4.2.2"}},{"description": {"text": "\n        A set of classes which allow you to report metrics via JMX.\n    "},"location": {"uri": "file:///\/root\/.m2\/repository\/io\/dropwizard\/metrics\/metrics-jmx\/4.2.2\/metrics-jmx-4.2.2.jar"},"hashes": {"md5": "7bb7e004dbb4a83b71065aa80767f4b1","sha1": "42fa67ee318c2b426bd4a50b86fe975806200aa5","sha256": "d4e22ae68a71a399f2d053a896c22e360154e283a32ec3a9daf197c1be26350e"},"properties": {"license": "https:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/io.dropwizard.metrics\/metrics-jmx@4.2.2"}},{"description": {"text": "\n        A set of Jackson modules which provide serializers for most Metrics classes.\n    "},"location": {"uri": "file:///\/root\/.m2\/repository\/io\/dropwizard\/metrics\/metrics-json\/4.2.2\/metrics-json-4.2.2.jar"},"hashes": {"md5": "d61996fe5aad055e6cfbca55331d43dc","sha1": "3635b78f45ffd80a4b4a07b9c9d9e214fc8d7c41","sha256": "dd74d81e2bf76d2179826c6ba396a0a93893d30f294ed745c802c5af0f65b824"},"properties": {"license": "https:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/io.dropwizard.metrics\/metrics-json@4.2.2"}},{"description": {"text": "\n        A set of classes which allow you to monitor critical aspects of your Java Virtual Machine\n        using Metrics.\n    "},"location": {"uri": "file:///\/root\/.m2\/repository\/io\/dropwizard\/metrics\/metrics-jvm\/4.2.2\/metrics-jvm-4.2.2.jar"},"hashes": {"md5": "e034fb114fbebcb6041aa5822213ffd0","sha1": "4fd5d54009cee9ea26fd517224ec519c61a45a48","sha256": "4566fb195ea4caead744440ec72c4b123e904d419f941a22ef5d6a36b389a7f2"},"properties": {"license": "https:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/io.dropwizard.metrics\/metrics-jvm@4.2.2"}},{"description": {"text": "Minimal overhead Java logging"},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/esotericsoftware\/minlog\/1.3.0\/minlog-1.3.0.jar"},"hashes": {"md5": "5ab0ee168b90e0ad7010b159e603d304","sha1": "ff07b5f1b01d2f92bb00a337f9a94873712f0827","sha256": "f7b399d3a5478a4f3e0d98bd1c9f47766119c66414bc33aa0f6cde0066f24cc2"},"properties": {"license": "New BSD License: http:\/\/www.opensource.org\/licenses\/bsd-license.php","id1": "pkg:maven\/com.esotericsoftware\/minlog@1.3.0"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/io\/netty\/netty-all\/4.1.63.Final\/netty-all-4.1.63.Final.jar"},"hashes": {"md5": "be1bceb75e93d1ade864e50ed3c3e587","sha1": "02f4f61c3f096192a49db049d80e9734f5b0d1ba","sha256": "cff5b095730bf026f3013b0b66982dc76feda1569c05d16ae1a88a513e2ca068"},"properties": {"id1": "pkg:maven\/io.netty\/netty-all@4.1.63.Final","vid1": "cpe:2.3:a:netty:netty:4.1.63:*:*:*:*:*:*:*"}},{"description": {"text": "A library for instantiating Java objects"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/objenesis\/objenesis\/2.6\/objenesis-2.6.jar"},"hashes": {"md5": "5ffac3f51405ca9b2915970a224b3e8f","sha1": "639033469776fd37c08358c6b92a4761feb2af4b","sha256": "5e168368fbc250af3c79aa5fef0c3467a2d64e5a7bd74005f25d8399aeb0708d"},"properties": {"license": "http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.objenesis\/objenesis@2.6"}},{"description": {"text": "A simple library for reading and writing CSV in Java"},"location": {"uri": "file:///\/root\/.m2\/repository\/net\/sf\/opencsv\/opencsv\/2.3\/opencsv-2.3.jar"},"hashes": {"md5": "9eebabaa007dc329845e5ab3c12b4e6b","sha1": "c23708cdb9e80a144db433e23344a788a1fd6599","sha256": "dc0ba5bff6140dc92339973026a0ecbddc2a3b01bdd46ed9d16becc2f6d78de6"},"properties": {"license": "Apache 2: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/net.sf.opencsv\/opencsv@2.3"}},{"description": {"text": "\n    The core reader and writer for ORC files. Uses the vectorized column batch\n    for the in memory representation.\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/orc\/orc-core\/1.6.9\/orc-core-1.6.9.jar"},"hashes": {"md5": "9ccaef76377eb33a79ba22e2331f3224","sha1": "4e59d13b866fc76f996224010d7eb2fc64d340a7","sha256": "fc1008d15cf505cfb3888cad2a585c75ea419bc3bc36895b1d2ed1e22772281d"},"properties": {"id1": "pkg:maven\/org.apache.orc\/orc-core@1.6.9","vid1": "cpe:2.3:a:apache:orc:1.6.9:*:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-catalyst_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-catalyst_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-catalyst_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-catalyst_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-catalyst_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-catalyst_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-catalyst_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-core_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-core_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-core_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-core_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-core_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-core_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-core_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-core_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-core_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-core_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-core_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-core_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-core_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/graphx\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-graphx_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/graphx\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-graphx_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/graphx\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-graphx_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/sql\/hive\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-hive_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:hive:3.3.0:snapshot:*:*:*:*:*:*","vid2": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-kvstore_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-kvstore_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-kvstore_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-kvstore_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-kvstore_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-kvstore_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-kvstore_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-kvstore_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-kvstore_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-kvstore_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-kvstore_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-kvstore_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-kvstore_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-kvstore_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-launcher_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-launcher_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-launcher_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-launcher_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-launcher_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-launcher_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-launcher_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-launcher_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-launcher_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-launcher_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-launcher_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-launcher_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-launcher_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-launcher_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/mllib-local\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-mllib-local_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/mllib-local\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-mllib-local_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/mllib-local\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-mllib-local_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/mllib-local\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-mllib-local_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/mllib\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-mllib_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/mllib\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-mllib_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-common_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-common_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-common_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-common_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-common_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-common_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-common_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-common_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-common_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-common_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-common_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-common_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-common_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-common_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-common_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-shuffle_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-shuffle_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-shuffle_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-shuffle_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-shuffle_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-shuffle_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-shuffle_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-shuffle_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-shuffle_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-shuffle_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-shuffle_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-shuffle_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-shuffle_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-network-shuffle_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/repl\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-repl_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-sketch_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-sketch_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-sketch_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-sketch_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-sketch_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-sketch_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-sketch_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-sketch_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/external\/kafka-0-10-sql\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-sql-kafka-0-10_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:kafka:3.3.0:snapshot:*:*:*:*:*:*","vid2": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-sql_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-sql_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-sql_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-sql_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-sql_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-sql_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/external\/kafka-0-10\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-streaming-kafka-0-10_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:kafka:3.3.0:snapshot:*:*:*:*:*:*","vid2": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/streaming\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-streaming_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/streaming\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-streaming_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/streaming\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-streaming_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/streaming\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-streaming_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/streaming\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-streaming_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-tags_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-tags_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-tags_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-tags_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-tags_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-tags_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-tags_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-tags_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-tags_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-tags_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-tags_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-tags_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-tags_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-tags_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-tags_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-tags_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-tags_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-tags_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-tags_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-tags_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/external\/kafka-0-10-token-provider\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-token-provider-kafka-0-10_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:kafka:3.3.0:snapshot:*:*:*:*:*:*","vid2": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/external\/kafka-0-10-token-provider\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-token-provider-kafka-0-10_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:kafka:3.3.0:snapshot:*:*:*:*:*:*","vid2": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/external\/kafka-0-10-token-provider\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-token-provider-kafka-0-10_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:kafka:3.3.0:snapshot:*:*:*:*:*:*","vid2": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-unsafe_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-unsafe_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-unsafe_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-unsafe_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-unsafe_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-unsafe_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-unsafe_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-unsafe_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-unsafe_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-unsafe_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-unsafe_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-unsafe_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-unsafe_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"description": {"text": "The Apache Software Foundation provides support for the Apache community of open-source software projects.\n    The Apache projects are characterized by a collaborative, consensus based development process, an open and\n    pragmatic software license, and a desire to create high quality software that leads the way in its field.\n    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers\n    and users."},"location": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml"},"properties": {"license": "Apache 2.0 License http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.apache.spark\/spark-unsafe_2.12@3.3.0-SNAPSHOT","vid1": "cpe:2.3:a:apache:spark:3.3.0:snapshot:*:*:*:*:*:*"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/oro\/oro\/2.0.8\/oro-2.0.8.jar"},"hashes": {"md5": "42e940d5d2d822f4dc04c65053e630ab","sha1": "5592374f834645c4ae250f4c9fbb314c9369d698","sha256": "e00ccdad5df7eb43fdee44232ef64602bf63807c2d133a7be83ba09fd49af26e"},"properties": {"id1": "pkg:maven\/oro\/oro@2.0.8"}},{"description": {"text": "Used by various API providers that rely on META-INF\/services mechanism to locate providers."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/glassfish\/hk2\/osgi-resource-locator\/1.0.3\/osgi-resource-locator-1.0.3.jar"},"hashes": {"md5": "e7e82b82118c5387ae45f7bf3892909b","sha1": "de3b21279df7e755e38275137539be5e2c80dd58","sha256": "aab5d7849f7cfcda2cc7c541ba1bd365151d42276f151c825387245dfde3dd74"},"properties": {"license": "EPL 2.0: http:\/\/www.eclipse.org\/legal\/epl-2.0\nGPL2 w\/ CPE: https:\/\/www.gnu.org\/software\/classpath\/license.html","id1": "pkg:maven\/org.glassfish.hk2\/osgi-resource-locator@1.0.3"}},{"description": {"text": "Paranamer allows runtime access to constructor and method parameter names for Java classes"},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/thoughtworks\/paranamer\/paranamer\/2.8\/paranamer-2.8.jar"},"hashes": {"md5": "f213c72b67d4850f17a4a3e9064904de","sha1": "619eba74c19ccf1da8ebec97a2d7f8ba05773dd6","sha256": "688cb118a6021d819138e855208c956031688be4b47a24bb615becc63acedf07"},"properties": {"license": "LICENSE.txt","id1": "pkg:maven\/com.thoughtworks.paranamer\/paranamer@2.8"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/parquet\/parquet-column\/1.12.0\/parquet-column-1.12.0.jar"},"hashes": {"md5": "adb3e6027a4bd12785a465070aded5c6","sha1": "f02e32161790f4019146f3d626fd6f561c1674ff","sha256": "6d64940acc2f565da4fa96584fb7551dba2049aa70d92c5f57cc409840bdaa1f"},"properties": {"id1": "pkg:maven\/org.apache.parquet\/parquet-column@1.12.0"}},{"description": {"text": "Zero-allocation implementations of fast non-cryptographic hash functions\n        for byte sequences or blocks of memory"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/parquet\/parquet-column\/1.12.0\/parquet-column-1.12.0.jar\/META-INF\/maven\/net.openhft\/zero-allocation-hashing\/pom.xml"},"hashes": {"md5": "e298d28ec9df45759091665bde6bff6a","sha1": "73c50bf4abe388a24a85f3f718a9bbb983c0ba65","sha256": "1148c7d83ab52daa00606b0175bfbec713c9411f39687ad426d501f3da42fb55"},"properties": {"id1": "pkg:maven\/net.openhft\/zero-allocation-hashing@0.9"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/parquet\/parquet-common\/1.12.0\/parquet-common-1.12.0.jar"},"hashes": {"md5": "d400a7d483bc2bdcd969876110cd136b","sha1": "8697be3280ad238f70060a8bff7bf66fe8dfc46c","sha256": "618727cfc8cec0a946d6499c0c6e8f61cbf3464eff99200832a70777d13a3117"},"properties": {"id1": "pkg:maven\/org.apache.parquet\/parquet-common@1.12.0"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/parquet\/parquet-encoding\/1.12.0\/parquet-encoding-1.12.0.jar"},"hashes": {"md5": "e5a1fccbf6d7147598abdeacb595cec2","sha1": "257c0c34ee68b52791e28c92447a5e065568c96f","sha256": "41e606d602ba532d7a8408dfd55acfb445653453bef3bd3c4e35f5959c369ccf"},"properties": {"id1": "pkg:maven\/org.apache.parquet\/parquet-encoding@1.12.0"}},{"description": {"text": "Parquet-mr related java classes to use the parquet-format thrift structures."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/parquet\/parquet-format-structures\/1.12.0\/parquet-format-structures-1.12.0.jar"},"hashes": {"md5": "f4b4691fe338ffad5bcf61caeaaf227d","sha1": "eb73b9cb2be4c142418f01c190c38c8db38ddb90","sha256": "6e07d688d32f35be19ecf44d94b30322de9fac332b21b538dca25aaa62e4e3fa"},"properties": {"id1": "pkg:maven\/org.apache.parquet\/parquet-format-structures@1.12.0"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/parquet\/parquet-hadoop\/1.12.0\/parquet-hadoop-1.12.0.jar"},"hashes": {"md5": "ff6e35e80394dbc46b16c5b006d8577e","sha1": "9db040aed8cc3e0e9d27ae8e14b01d531b8b7638","sha256": "add2e25fb658f89745c5b7a0e135218d2b36e4898530e745985bc186cd6f6393"},"properties": {"id1": "pkg:maven\/org.apache.parquet\/parquet-hadoop@1.12.0"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/parquet\/parquet-jackson\/1.12.0\/parquet-jackson-1.12.0.jar"},"hashes": {"md5": "99d613e5b3698dc8d037aec9b727cdc6","sha1": "cf19a7197bda364334325a8a1cde5bcf5889773d","sha256": "e4bf2f1e0ab479ba4897185dc0357fd2a5bdff300dd9a510ef8b7b6b2674b738"},"properties": {"id1": "pkg:maven\/org.apache.parquet\/parquet-jackson@1.12.0"}},{"description": {"text": "Core Jackson processing abstractions (aka Streaming API), implementation for JSON"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/parquet\/parquet-jackson\/1.12.0\/parquet-jackson-1.12.0.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-core\/pom.xml"},"hashes": {"md5": "f5c9fb2c2b9309f9b2eddb1dae56e8cd","sha1": "fbf301fa1d702b938916081dfbb6ef5bb73cb709","sha256": "caffed146e667de7344c210fe8eda0241bc187fc5606237e1835711d0c5667de"},"properties": {"license": "The Apache Software License, Version 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/com.fasterxml.jackson.core\/jackson-core@2.11.4","vid1": "cpe:2.3:a:fasterxml:jackson-modules-java8:2.11.4:*:*:*:*:*:*:*"}},{"description": {"text": "General data-binding functionality for Jackson: works on core streaming API"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/parquet\/parquet-jackson\/1.12.0\/parquet-jackson-1.12.0.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-databind\/pom.xml"},"hashes": {"md5": "6315d58d6fb8fd15ecbff547ee71d7df","sha1": "d4fda4e0fe5c2b5eda4e5addc07e1c1a404529aa","sha256": "5cc5c656fd5fe56a9a1614323cf0f3edc73718392b8d1d8ecf2798045b53bbc7"},"properties": {"license": "The Apache Software License, Version 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/com.fasterxml.jackson.core\/jackson-databind@2.11.4","vid1": "cpe:2.3:a:fasterxml:jackson-databind:2.11.4:*:*:*:*:*:*:*","vid2": "cpe:2.3:a:fasterxml:jackson-modules-java8:2.11.4:*:*:*:*:*:*:*"}},{"description": {"text": "JPMML class model"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/jpmml\/pmml-model\/1.4.8\/pmml-model-1.4.8.jar"},"hashes": {"md5": "a3c3f66a3afa4a5d704cd297134ee7cc","sha1": "ed4ca84fd2843a9708c8464ef8abfa9095be1624","sha256": "ef65d9b98c635f8c83841258ad449824576eb4936b7faac4e9f3510dc2e8448c"},"properties": {"license": "BSD 3-Clause License: http:\/\/opensource.org\/licenses\/BSD-3-Clause","id1": "pkg:maven\/org.jpmml\/pmml-model@1.4.8"}},{"description": {"text": "\n    Protocol Buffers are a way of encoding structured data in an efficient yet\n    extensible format.\n  "},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/google\/protobuf\/protobuf-java\/2.5.0\/protobuf-java-2.5.0.jar"},"hashes": {"md5": "a44473b98947e2a54c54e0db1387d137","sha1": "a10732c76bfacdbd633a7eb0f7968b1059a65dfa","sha256": "e0c1c64575c005601725e7c6a02cebf9e1285e888f756b2a1d73ffa8d725cc74"},"properties": {"license": "New BSD license: http:\/\/www.opensource.org\/licenses\/bsd-license.php","id1": "pkg:maven\/com.google.protobuf\/protobuf-java@2.5.0"}},{"description": {"text": "Py4J enables Python programs running in a Python interpreter to dynamically access Java objects in a Java Virtual Machine. Methods are called as if the Java objects resided in the Python interpreter and Java collections can be accessed through standard Python collection methods. Py4J also enables Java programs to call back Python objects."},"location": {"uri": "file:///\/root\/.m2\/repository\/net\/sf\/py4j\/py4j\/0.10.9.2\/py4j-0.10.9.2.jar"},"hashes": {"md5": "af319d48610d0843c8624f4b654989f7","sha1": "64a1fda4291ab97f697034459ce70aa6a2fce659","sha256": "b101d1938c43003d4e0935c383e664135ab87186c44180a2a9296ca3bbe29e89"},"properties": {"license": "The New BSD License: http:\/\/www.opensource.org\/licenses\/bsd-license.html","id1": "pkg:maven\/net.sf.py4j\/py4j@0.10.9.2"}},{"description": {"text": "This library allows your Java program to interface very easily with the Python world. It uses the Pyro protocol to call methods on remote objects. (See https:\/\/github.com\/irmen\/Pyro4). To that end, it also contains and uses a feature complete pickle protocol implementation -read and write- to exchange data with Pyro\/Python.\n\nPyrolite only implements part of the client side Pyro library, hence its name 'lite'...  But because Pyrolite has no dependencies, it is a much lighter way to use Pyro from Java\/.NET than a solution with jython+pyro or IronPython+Pyro would provide. So if you don't need Pyro's full feature set, and don't require your Java\/.NET code to host Pyro objects itself, Pyrolite may be a good choice to connect java or .NET and python.\n\n(More info about Pyro itself: https:\/\/pyro4.readthedocs.io\/ )\n\nVersion 4.30 changes:\nSupport for unpickling protocol 5 pickles with out-of-band buffers (Python 3.8)\n"},"location": {"uri": "file:///\/root\/.m2\/repository\/net\/razorvine\/pyrolite\/4.30\/pyrolite-4.30.jar"},"hashes": {"md5": "259e0cd3de5f46b4b61cd2e9d08fb385","sha1": "26892c2d53dd3ca2cfd6ace27a37e600571b8e02","sha256": "76c8108b0741f1816694d53a250dd69060094905c02739297f218046c0bf67c9"},"properties": {"license": "MIT License: https:\/\/raw.githubusercontent.com\/irmen\/Pyrolite\/master\/LICENSE","id1": "pkg:maven\/net.razorvine\/pyrolite@4.30"}},{"description": {"text": "RocksDB fat jar that contains .so files for linux32 and linux64, jnilib files\n        for Mac OSX, and a .dll for Windows x64.\n    "},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/rocksdb\/rocksdbjni\/6.2.2\/rocksdbjni-6.2.2.jar"},"hashes": {"md5": "07be0d3cb2a39def0441e15ff9c71705","sha1": "5337051b43477a3fb345889378abbba5bdb29830","sha256": "a86d5cae8fbfc87e1aeecc0103cd8654f02982a1ffbb301c2ede8e8c4bc34c0d"},"properties": {"license": "Apache License 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html\nGNU General Public License, version 2: http:\/\/www.gnu.org\/licenses\/gpl-2.0.html","id1": "pkg:maven\/org.rocksdb\/rocksdbjni@6.2.2"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/rocksdb\/rocksdbjni\/6.2.2\/rocksdbjni-6.2.2.jar\/librocksdbjni-win64.dll"},"hashes": {"md5": "ed427b92abc996d83670a8eafa9b45c7","sha1": "0c5169c3a068b24d62f29ce5518655d502314823","sha256": "b719dd2d15a169172247ada6cbec1fdabbd96489fa842bcaff6b6100ebdb8704"},"properties": {}},{"description": {"text": "scala-collection-compat"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/scala-lang\/modules\/scala-collection-compat_2.12\/2.0.0\/scala-collection-compat_2.12-2.0.0.jar"},"hashes": {"md5": "9bad1a8fa33b8463bbeae0be342e4413","sha1": "9d5f2b7d65830becb108330ad3fcab017eaca4e8","sha256": "434b0783eaf4855aee27cb47e7372c5dfb39ba0d056485e047745bdb8832da70"},"properties": {"license": "Apache-2.0: https:\/\/www.apache.org\/licenses\/LICENSE-2.0","id1": "pkg:maven\/org.scala-lang.modules\/scala-collection-compat_2.12@2.0.0"}},{"description": {"text": "scala-collection-compat"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/scala-lang\/modules\/scala-collection-compat_2.12\/2.1.1\/scala-collection-compat_2.12-2.1.1.jar"},"hashes": {"md5": "d10083faaf87b115f5875c153ea52740","sha1": "838ef049cad2b9738c143349e8271653815cac3c","sha256": "679aa5b780a29c7cf74edb67a419fcf514b41084151e620bfee0ab3aacc17ad2"},"properties": {"license": "Apache-2.0: https:\/\/www.apache.org\/licenses\/LICENSE-2.0","id1": "pkg:maven\/org.scala-lang.modules\/scala-collection-compat_2.12@2.1.1"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/scala-lang\/scala-compiler\/2.12.14\/scala-compiler-2.12.14.jar\/scala\/tools\/nsc\/doc\/html\/resource\/lib\/diagrams.js"},"hashes": {"md5": "2e1f79e48b0e659ed965afa26a201107","sha1": "4c35b9ae3fcb2fcee566878e808544a9c950925b","sha256": "d8a8ed1e20a29d4d9a42c984a0b6d74f8781f6258921c257dc234e1552938a74"},"properties": {}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/scala-lang\/scala-compiler\/2.12.14\/scala-compiler-2.12.14.jar\/scala\/tools\/nsc\/doc\/html\/resource\/lib\/index.js"},"hashes": {"md5": "a08355a55bc59b335c9afa16d3682a7f","sha1": "d3092a1b9c9c06cad11e016c6c1143b2ad821135","sha256": "b4c417591851cc8f98521d1c5f6e012e5d853bc0d6efb0443642a39f8f3dc880"},"properties": {}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/scala-lang\/scala-compiler\/2.12.14\/scala-compiler-2.12.14.jar\/scala\/tools\/nsc\/doc\/html\/resource\/lib\/jquery.mousewheel.min.js"},"hashes": {"md5": "d5843dbdc71ff8014a5eafd346a262da","sha1": "127e1d971efab9341db8079f10663dc28e8e0a2f","sha256": "8e73a30d35c83ea6a597c3343324d2b7df097ad26e67b62efb5266ee12d317b5"},"properties": {}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/scala-lang\/scala-compiler\/2.12.14\/scala-compiler-2.12.14.jar\/scala\/tools\/nsc\/doc\/html\/resource\/lib\/jquery.panzoom.min.js"},"hashes": {"md5": "c342421033e7969c439f653fb93a3157","sha1": "57e8700a39d8f95e5768b40d0690c7e572ac0dbd","sha256": "970bfa8aa52c87a1a77718ecd3529037d89818560d90107529d55488612cbba2"},"properties": {}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/scala-lang\/scala-compiler\/2.12.14\/scala-compiler-2.12.14.jar\/jquery.slim.min.js"},"hashes": {"md5": "fb8409a092adc6e8be17e87d59e0595e","sha1": "cf8d9821552d51bb50ce572e696aba1309065800","sha256": "e3e5f35d586c0e6a9a9d7187687be087580c40a5f8d0e52f0c4053bbc25c98db"},"properties": {}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/scala-lang\/scala-compiler\/2.12.14\/scala-compiler-2.12.14.jar\/scala\/tools\/nsc\/doc\/html\/resource\/lib\/modernizr.custom.js"},"hashes": {"md5": "350aeacb2780a90495094db70b7a6d21","sha1": "0b78efd666ca58b71e87d86e83f4768ce51d6348","sha256": "d7ba4db2f617af853ad324e7e1a012c43f14ec7436afad430794bb1fe11f7e99"},"properties": {}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/scala-lang\/scala-compiler\/2.12.14\/scala-compiler-2.12.14.jar\/scala\/tools\/nsc\/doc\/html\/resource\/lib\/scheduler.js"},"hashes": {"md5": "0a0d28a27d996abff56588994ce544e2","sha1": "80370626df86212b4174ce17095abfd6c11105ec","sha256": "b38a639a32cfbbfa65bcd0536482c7b8f01e33460a96c1cad2321abf93626d8c"},"properties": {}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/scala-lang\/scala-compiler\/2.12.14\/scala-compiler-2.12.14.jar\/scala\/tools\/nsc\/doc\/html\/resource\/lib\/template.js"},"hashes": {"md5": "d34001437bfe41def06b041f374f4e90","sha1": "d932577b638f4bc737245e56a774f87b128efee1","sha256": "e64b8e321cb0d45471be40ce0069e223b2a84e7d2bb1758752742752e9473d5d"},"properties": {}},{"description": {"text": "Standard library for the Scala Programming Language"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/scala-lang\/scala-library\/2.12.14\/scala-library-2.12.14.jar"},"hashes": {"md5": "aef32f8d80523270bce124911ac43df2","sha1": "1c65e76e15684d378fa2deb4ebe536a68e10c9bf","sha256": "0451dce8322903a6c2aa7d31232b54daa72a61ced8ade0b4c5022442a3f6cb57"},"properties": {"license": "Apache-2.0: https:\/\/www.apache.org\/licenses\/LICENSE-2.0","id1": "pkg:maven\/org.scala-lang\/scala-library@2.12.14","vid1": "cpe:2.3:a:scala-lang:scala:2.12.14:*:*:*:*:*:*:*"}},{"description": {"text": "scala-parser-combinators"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/scala-lang\/modules\/scala-parser-combinators_2.12\/1.1.2\/scala-parser-combinators_2.12-1.1.2.jar"},"hashes": {"md5": "b687df70f489bc911396c996a864f13b","sha1": "2ad65ccbeed662b51e2b96221cb4e7d7d6b7b87a","sha256": "24985eb43e295a9dd77905ada307a850ca25acf819cdb579c093fc6987b0dbc2"},"properties": {"license": "Apache-2.0: https:\/\/www.apache.org\/licenses\/LICENSE-2.0","id1": "pkg:maven\/org.scala-lang.modules\/scala-parser-combinators_2.12@1.1.2"}},{"description": {"text": "scala-xml"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/scala-lang\/modules\/scala-xml_2.12\/1.2.0\/scala-xml_2.12-1.2.0.jar"},"hashes": {"md5": "5daf691f15978092fc8424e1fe5245e4","sha1": "5d38ac30beb8420dd395c0af447ba412158965e6","sha256": "1b48dc206f527b7604ef32492ada8e71706c63a65d999e0cabdafdc5793b4d63"},"properties": {"license": "Apache-2.0: https:\/\/www.apache.org\/licenses\/LICENSE-2.0","id1": "pkg:maven\/org.scala-lang.modules\/scala-xml_2.12@1.2.0"}},{"description": {"text": "a command line options parsing library"},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/github\/scopt\/scopt_2.12\/3.7.1\/scopt_2.12-3.7.1.jar"},"hashes": {"md5": "25bfd5ce5b7f88b4bc6d9e8b0c3a7cfb","sha1": "ad93d8232ddc76fc8ee99b8a3e0939dad9d469bd","sha256": "41c77bfc41a9492a9aa0760fa873cf99289595ff97fe761e28726e00b44f9e6a"},"properties": {"license": "MIT: http:\/\/www.opensource.org\/licenses\/mit-license.php","id1": "pkg:maven\/com.github.scopt\/scopt_2.12@3.7.1"}},{"description": {"text": "coreJVM"},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/chuusai\/shapeless_2.12\/2.3.3\/shapeless_2.12-2.3.3.jar"},"hashes": {"md5": "002995e4aa53f59d06e99734826cc960","sha1": "6041e2c4871650c556a9c6842e43c04ed462b11f","sha256": "312e301432375132ab49592bd8d22b9cd42a338a6300c6157fb4eafd1e3d5033"},"properties": {"license": "Apache 2: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/com.chuusai\/shapeless_2.12@2.3.3"}},{"description": {"text": "Roaring bitmaps are compressed bitmaps (also called bitsets) which tend to outperform conventional compressed bitmaps such as WAH or Concise."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/roaringbitmap\/shims\/0.9.0\/shims-0.9.0.jar"},"hashes": {"md5": "07711e342a2ed34e089fd3bafa71a083","sha1": "9e20f3ceaea96781b72eac8be9153e9829dc3da7","sha256": "740f56a146b5820a2b3fd26ba646064bb99705fa986368e625fe1d4c51e800b0"},"properties": {"license": "Apache 2: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.roaringbitmap\/shims@0.9.0"}},{"description": {"text": "The slf4j API"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/slf4j\/slf4j-api\/1.7.30\/slf4j-api-1.7.30.jar"},"hashes": {"md5": "f8be00da99bc4ab64c79ab1e2be7cb7c","sha1": "b5a4b6d16ab13e34a88fae84c35cd5d68cac922c","sha256": "cdba07964d1bb40a0761485c6b1e8c2f8fd9eb1d19c53928ac0d7f9510105c57"},"properties": {"id1": "pkg:maven\/org.slf4j\/slf4j-api@1.7.30"}},{"description": {"text": "SLF4J LOG4J-12 Binding"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/slf4j\/slf4j-log4j12\/1.7.30\/slf4j-log4j12-1.7.30.jar"},"hashes": {"md5": "78f1ff83b38c52a30a278dec6e023a6d","sha1": "c21f55139d8141d2231214fb1feaf50a1edca95e","sha256": "4d41e01c40caf8a6c74add2b073055d8a4ce1c30e58154177b13f12d78abbe7b"},"properties": {"id1": "pkg:maven\/org.slf4j\/slf4j-log4j12@1.7.30"}},{"description": {"text": "snappy-java: A fast compression\/decompression library"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/xerial\/snappy\/snappy-java\/1.1.8.4\/snappy-java-1.1.8.4.jar"},"hashes": {"md5": "3aca6cae2cada8442809bc79be3df269","sha1": "66f0d56454509f6e36175f2331572e250e04a6cc","sha256": "24c4d1fc1e89e078331ab8f401a99cad68599bde4a2e4516042cb548c51b1c3e"},"properties": {"license": "Apache-2.0: https:\/\/www.apache.org\/licenses\/LICENSE-2.0.html","id1": "pkg:maven\/org.xerial.snappy\/snappy-java@1.1.8.4"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/xerial\/snappy\/snappy-java\/1.1.8.4\/snappy-java-1.1.8.4.jar\/org\/xerial\/snappy\/native\/Windows\/x86_64\/snappyjava.dll"},"hashes": {"md5": "9c14838fdac91cc0666eab07bfc21bc8","sha1": "1a439f0d589c48cfb3e3e17499e4961cdcda7bb9","sha256": "ba2eb1fc7d6b209bae559f0091dd85a899db422b8824b6bd25ff147b725a4ae3"},"properties": {}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/xerial\/snappy\/snappy-java\/1.1.8.4\/snappy-java-1.1.8.4.jar\/org\/xerial\/snappy\/native\/Windows\/x86\/snappyjava.dll"},"hashes": {"md5": "10d5fed1e53436b1eaebd5af74411ab9","sha1": "a7e426427985ed03e37b7e2198cecbe0be95b92d","sha256": "d2d922984b4487a4d9117137db6072bebd37b82a33adee02d0d57bcd8c723da8"},"properties": {}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/sorttable.js"},"hashes": {"md5": "5708e889aac098e2cc4051c4d4e16356","sha1": "8311e7061a4b16f796660cf0bfe24e3964d4e998","sha256": "718fc917df5cc75d545ddcc1465c2af7f4b70332abb2a3a592b1a36fda3f309a"},"properties": {}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/spark-dag-viz.js"},"hashes": {"md5": "4c4f3f679b14b3bf51e1704a54bdaf65","sha1": "3a7dd24fb767b09239746395acdbe1fd117a99c2","sha256": "7c3a8a164897f37f35ab7897040216d2afc7d2abb536b6188683c6a29da6fc69"},"properties": {}},{"location": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/src\/main\/resources\/org\/apache\/spark\/sql\/execution\/ui\/static\/spark-sql-viz.js"},"hashes": {"md5": "c3241035a6f736d3e7e3e5bd6c58411d","sha1": "bfaccbb40070da4820b88fec02da799c0298832d","sha256": "061ec29d4eefc08ea0b8edac8ed6cec99783f54a034dfa691e7b34ec6ac502d5"},"properties": {}},{"description": {"text": "macros"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/typelevel\/spire-macros_2.12\/0.17.0-M1\/spire-macros_2.12-0.17.0-M1.jar"},"hashes": {"md5": "4a24f85bbd05d7a9cf9c708a7926f564","sha1": "66a4cd59bc0daa39b67b0b5e496cee078b835d51","sha256": "8d687fc799a295a7c99751062bca24d8ce857bedaadbf7d0bdc98a819cce3316"},"properties": {"license": "MIT: http:\/\/opensource.org\/licenses\/MIT","id1": "pkg:maven\/org.typelevel\/spire-macros_2.12@0.17.0-M1"}},{"description": {"text": "platform"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/typelevel\/spire-platform_2.12\/0.17.0-M1\/spire-platform_2.12-0.17.0-M1.jar"},"hashes": {"md5": "7aaff30f900870cfe6c010fe2562caf4","sha1": "7019bddf5c9dd6c7fabbb2aba7ab1dea68ed4f4f","sha256": "308753b8afd38588dc5020465bf2aee8625e445ba604172f6cc20e0895689ae0"},"properties": {"license": "MIT: http:\/\/opensource.org\/licenses\/MIT","id1": "pkg:maven\/org.typelevel\/spire-platform_2.12@0.17.0-M1"}},{"description": {"text": "util"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/typelevel\/spire-util_2.12\/0.17.0-M1\/spire-util_2.12-0.17.0-M1.jar"},"hashes": {"md5": "3034b6182c2ae3d79d61e129d767308c","sha1": "0372220218b332a3551b720a480311b8db810017","sha256": "075627e58342d487922bf9667ea0d0aceb79793cc64ab2ba21bc4f2805723e96"},"properties": {"license": "MIT: http:\/\/opensource.org\/licenses\/MIT","id1": "pkg:maven\/org.typelevel\/spire-util_2.12@0.17.0-M1"}},{"description": {"text": "core"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/typelevel\/spire_2.12\/0.17.0-M1\/spire_2.12-0.17.0-M1.jar"},"hashes": {"md5": "b4a8aaa12d2f14ebe958b6c603b55a8e","sha1": "948825db5072a4bccce3517f6ee7b745ae989db4","sha256": "db796a3d63ef906e45d1efb66f732d56b6ec2d4894891ac89051f491bc754c22"},"properties": {"license": "MIT: http:\/\/opensource.org\/licenses\/MIT","id1": "pkg:maven\/org.typelevel\/spire_2.12@0.17.0-M1"}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/stagepage.js"},"hashes": {"md5": "55064d7a52ac9e29531ad716ad449961","sha1": "5baf660c34edca378eb13cb0014d8082dcef5d5c","sha256": "f4063795277cbe97b878af7d158600eed3ea1a421c8cd8140bb6b81949476ca5"},"properties": {}},{"description": {"text": "StAX API is the standard java XML processing API defined by JSR-173"},"location": {"uri": "file:///\/root\/.m2\/repository\/stax\/stax-api\/1.0.1\/stax-api-1.0.1.jar"},"hashes": {"md5": "7d436a53c64490bee564c576babb36b4","sha1": "49c100caf72d658aca8e58bd74a4ba90fa2b0d70","sha256": "d1968436fc216c901fb9b82c7e878b50fd1d30091676da95b2edd3a9c0ccf92e"},"properties": {"license": "The Apache Software License, Version 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/stax\/stax-api@1.0.1"}},{"description": {"text": "A library for summarizing data in streams for which it is infeasible to store all events"},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/clearspring\/analytics\/stream\/2.9.6\/stream-2.9.6.jar"},"hashes": {"md5": "298278ea2ea29ce1da1a956dd6fad4d4","sha1": "f9c235bdf6681756b8d4b5429f6e7217597c37ef","sha256": "d61aebbea8a08148c3aca6b03464495a4bbf9d362205d54ea5f6b443af73afdf"},"properties": {"license": "Apache License, Version 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/com.clearspring.analytics\/stream@2.9.6"}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/streaming-page.js"},"hashes": {"md5": "026bbb899a811df8fcf6683ed91334e1","sha1": "80b6be9c6bd0d439bdadc760515dab9084fd40ac","sha256": "2583857f869f59b70e4e83f61dfe1fa2254176540ce15b1e5d488b4fa2b0f6d0"},"properties": {}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/structured-streaming-page.js"},"hashes": {"md5": "3ef6bd20531b0b07f2a820104eb66140","sha1": "c6ab1d0e618aa71284dcdda4545ebe5bede77cf6","sha256": "728102d2a89f6107ee11b32c9c4716fa14fbe8c81809bbcb1b1a0ab143c2a724"},"properties": {}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/table.js"},"hashes": {"md5": "eec9987a3e3aa01f2a65545fc71e335a","sha1": "f7db6c6757908fbb57f49d54a1d8a878904e74ca","sha256": "dc0a13b2c9acc14f8ff42d7495e59c3c971df4db5a1b5d0177810e84507504f5"},"properties": {}},{"description": {"text": "Additional functionality that enhances JSR-310 dates and times in Java SE 8 and later"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/threeten\/threeten-extra\/1.5.0\/threeten-extra-1.5.0.jar"},"hashes": {"md5": "25fcd93381bd0b0d2cf6b99c231e4bb4","sha1": "d6adb54fefe72482ed049f07af31ddf2c287345f","sha256": "e7def554536188fbaf8aac1a0a2f956b039cbbb5696edc3b8336c442c56ae445"},"properties": {"license": "BSD 3-clause: https:\/\/raw.githubusercontent.com\/ThreeTen\/threeten-extra\/master\/LICENSE.txt","id1": "pkg:maven\/org.threeten\/threeten-extra@1.5.0"}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/timeline-view.js"},"hashes": {"md5": "3104dee9480dbb9e1094d6cdf65d759a","sha1": "d18c82880b0de3c51c5afc7c83b8bb8ab92c27a5","sha256": "26e00df448876ec69d92b51b03bf71b8502a379edb3ccb016baf48c988831cbf"},"properties": {}},{"description": {"text": "univocity's open source parsers for processing different text formats using a consistent API"},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/univocity\/univocity-parsers\/2.9.1\/univocity-parsers-2.9.1.jar"},"hashes": {"md5": "7032ba85007afd0bfc702a72bf486fd0","sha1": "081827d186e42129f23c3f1e002b757ad4b4e769","sha256": "31685122d5e392e98672ed6009a95a4c1623ca1185567bd44ee94527d454e5c3"},"properties": {"license": "Apache 2: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/com.univocity\/univocity-parsers@2.9.1"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/org\/spark-project\/spark\/unused\/1.0.0\/unused-1.0.0.jar"},"hashes": {"md5": "763373ce9fe48581d4f2b8ffca35bb82","sha1": "205fe37a2fade6ce6dfcf8eff57ed21a4a1c22af","sha256": "00fd27fc9bde701581e7dcf5b95981d9e749a1c176bb8bfcd49f675768ff6bf0"},"properties": {"license": "The Apache License, Version 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.spark-project.spark\/unused@1.0.0","vid1": "cpe:2.3:a:apache:spark:1.0.0:*:*:*:*:*:*:*"}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/utils.js"},"hashes": {"md5": "0993aaa296dbfe484992557a25284e46","sha1": "28cf84a21d1b0a2c910f3e8744d2e52a39b0f7e6","sha256": "47eaaa9eaede0ecefc2ef5aae6721575d1008e241bba5039148d071aed493bfa"},"properties": {}},{"description": {"text": "Apache Velocity is a general purpose template engine."},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/velocity\/velocity\/1.5\/velocity-1.5.jar"},"hashes": {"md5": "8d46d30a37e1cf2047cdfa73c552e8a9","sha1": "09f306baf7523ffc0e81a6353d08a584d254133b","sha256": "e06403f9cd69033e523bec43195a2a1b6106e28c5d7d053b569ae771e9e49a62"},"properties": {"license": "The Apache Software License, Version 2.0: http:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.apache.velocity\/velocity@1.5","vid1": "cpe:2.3:a:apache:velocity_engine:1.5:*:*:*:*:*:*:*"}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/vis-timeline-graph2d.min.js"},"hashes": {"md5": "a0f40c672b9aaeba0820752554951177","sha1": "b93be38faf1312f1feb69520ea536b65d5fbcc37","sha256": "ac9cd3c061ea00b4937f20def0a36a24df778e562b8e87b861c5c9cf3cc2d581"},"properties": {}},{"location": {"uri": "file:///\/root\/temp2\/spark\/core\/src\/main\/resources\/org\/apache\/spark\/ui\/static\/webui.js"},"hashes": {"md5": "f503dbc2b3992251943a64c4a77a0830","sha1": "a9031617bef04a68bad13bc7224762ba0a2f3af2","sha256": "047ebbb48c26ffdd412f6bfe46be23fdf4515842f2c421596cd1946925aec25a"},"properties": {}},{"description": {"text": "Repackaged and shaded asm jars"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/xbean\/xbean-asm9-shaded\/4.20\/xbean-asm9-shaded-4.20.jar"},"hashes": {"md5": "e5e46dfa7753743138e247e5796647a5","sha1": "17f4dc86c438d1f4775eda3cf656f0040ea451e7","sha256": "2af1dd4d9e801aa65f960a1dc43376bcd408da4e244600aa6da18bcf8b904190"},"properties": {"license": "http:\/\/asm.ow2.org\/license.html\nhttp:\/\/www.apache.org\/licenses\/LICENSE-2.0.txt","id1": "pkg:maven\/org.apache.xbean\/xbean-asm9-shaded@4.20"}},{"description": {"text": "XZ data compression"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/tukaani\/xz\/1.8\/xz-1.8.jar"},"hashes": {"md5": "5f982127e0de85b785c4b2abad21aa2e","sha1": "c4f7d054303948eb6a4066194253886c8af07128","sha256": "8c7964b36fe3f0cbe644b04fcbff84e491ce81917db2f5bfa0cba8e9548aff5d"},"properties": {"license": "Public Domain","id1": "pkg:maven\/org.tukaani\/xz@1.8","vid1": "cpe:2.3:a:tukaani:xz:1.8:*:*:*:*:*:*:*"}},{"description": {"text": "ZooKeeper server"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/zookeeper\/zookeeper\/3.6.2\/zookeeper-3.6.2.jar"},"hashes": {"md5": "7882670c60df817d78f9fa2c9ef4d99b","sha1": "bd0630f2de482ce8a14bc1de8dc12ef6197f4624","sha256": "68294c8f41552add34d92181edf18d6e40ad949113c73a50518818a05ac95d76"},"properties": {"id1": "pkg:maven\/org.apache.zookeeper\/zookeeper@3.6.2","vid1": "cpe:2.3:a:apache:zookeeper:3.6.2:*:*:*:*:*:*:*"}},{"description": {"text": "ZooKeeper jute"},"location": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/zookeeper\/zookeeper-jute\/3.6.2\/zookeeper-jute-3.6.2.jar"},"hashes": {"md5": "ec8916fd55b93524d86805f6c1d47f61","sha1": "1cb72bc20e0796c2bb10034e514f76364e902898","sha256": "f95a9c95598daffc707ec074411e4b52eef3e7426cedd3e4b3cb1b982e8c783f"},"properties": {"id1": "pkg:maven\/org.apache.zookeeper\/zookeeper-jute@3.6.2","vid1": "cpe:2.3:a:apache:zookeeper:3.6.2:*:*:*:*:*:*:*"}},{"description": {"text": "JNI bindings for Zstd native library that provides fast and high compression lossless algorithm for Java and all JVM languages."},"location": {"uri": "file:///\/root\/.m2\/repository\/com\/github\/luben\/zstd-jni\/1.5.0-2\/zstd-jni-1.5.0-2.jar"},"hashes": {"md5": "06c2cbd4716e3db5d0f58c4ca0126e23","sha1": "52fc9e353b4e84f8a87ebc9c5c59e58c91d5d23d","sha256": "b66a7029711976566c921ef255c57192fbbdc42a96c11ad3d879e6ad6001be12"},"properties": {"license": "BSD 2-Clause License: https:\/\/opensource.org\/licenses\/BSD-2-Clause","id1": "pkg:maven\/com.github.luben\/zstd-jni@1.5.0-2","vid1": "cpe:2.3:a:darwin:darwin:1.5.0.2:*:*:*:*:*:*:*","vid2": "cpe:2.3:a:freebsd:freebsd:1.5.0.2:*:*:*:*:*:*:*"}},{"location": {"uri": "file:///\/root\/.m2\/repository\/com\/github\/luben\/zstd-jni\/1.5.0-2\/zstd-jni-1.5.0-2.jar\/win\/amd64\/libzstd-jni-1.5.0-2.dll"},"hashes": {"md5": "6343db0d429a97a4a57417bd3e8424b1","sha1": "d51717bf79436cf5a6a248d1b93597b4508a9235","sha256": "f39a616f3728792356e3ddbdca7392dd4aa11aadcf86cb47f9cfa61bd457f94a"},"properties": {}},{"location": {"uri": "file:///\/root\/.m2\/repository\/com\/github\/luben\/zstd-jni\/1.5.0-2\/zstd-jni-1.5.0-2.jar\/win\/x86\/libzstd-jni-1.5.0-2.dll"},"hashes": {"md5": "8f5c2e2db11916cdb070e0fde0d9a3fd","sha1": "ca76572c39accf09e15acbe7596b8852afc873ba","sha256": "0cce9b067b0548967c9c06bc9c705afcb15dcfffd5d743208d08f90cb7ea1a27"},"properties": {}}],"results": [ {"ruleId": "CVE-2019-17195","message": {"text": "CVE-2019-17195 - Connect2id Nimbus JOSE+JWT before v7.9 can throw various uncaught exceptions while parsing a JWT, which could result in an application crash (potential information disclosure) or a potential authentication bypass."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/avro\/avro\/1.10.2\/avro-1.10.2.jar","index": 21 }}}],"properties": {"cvssv2_score": 6.8,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "8.6","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CVE-2011-4969","message": {"text": "CVE-2011-4969 - Cross-site scripting (XSS) vulnerability in jQuery before 1.6.3, when using location.hash to select elements, allows remote attackers to inject arbitrary web script or HTML via a crafted tag."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/avro\/avro-ipc\/1.10.2\/avro-ipc-1.10.2.jar\/org\/apache\/avro\/ipc\/stats\/static\/jquery-1.4.2.min.js","index": 24 }}}],"properties": {"cvssv2_score": 4.3,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "NONE","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "8.6","cvssv2_impactScore": "2.9","cvssv2_userInteractionRequired": "true","source": "NVD"}}, {"ruleId": "CVE-2012-6708","message": {"text": "CVE-2012-6708 - jQuery before 1.9.0 is vulnerable to Cross-site Scripting (XSS) attacks. The jQuery(strInput) function does not differentiate selectors from HTML in a reliable fashion. In vulnerable versions, jQuery determined whether the input was HTML by looking for the '<' character anywhere in the string, giving attackers more flexibility when attempting to construct a malicious payload. In fixed versions, jQuery only deems the input to be HTML if it explicitly starts with the '<' character, limiting exploitability only to attackers who can control the beginning of a string, which is far less common."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/avro\/avro-ipc\/1.10.2\/avro-ipc-1.10.2.jar\/org\/apache\/avro\/ipc\/stats\/static\/jquery-1.4.2.min.js","index": 24 }}}],"properties": {"cvssv2_score": 4.3,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "NONE","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "8.6","cvssv2_impactScore": "2.9","cvssv2_userInteractionRequired": "true","cvssv3_baseScore": 6.1,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "REQUIRED","cvssv3_scope": "CHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "2.8","cvssv3_impactScore": "2.7","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2015-9251","message": {"text": "CVE-2015-9251 - jQuery before 3.0.0 is vulnerable to Cross-site Scripting (XSS) attacks when a cross-domain Ajax request is performed without the dataType option, causing text\/javascript responses to be executed."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/avro\/avro-ipc\/1.10.2\/avro-ipc-1.10.2.jar\/org\/apache\/avro\/ipc\/stats\/static\/jquery-1.4.2.min.js","index": 24 }}}],"properties": {"cvssv2_score": 4.3,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "NONE","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "8.6","cvssv2_impactScore": "2.9","cvssv2_userInteractionRequired": "true","cvssv3_baseScore": 6.1,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "REQUIRED","cvssv3_scope": "CHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "2.8","cvssv3_impactScore": "2.7","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2019-11358","message": {"text": "CVE-2019-11358 - jQuery before 3.4.0, as used in Drupal, Backdrop CMS, and other products, mishandles jQuery.extend(true, {}, ...) because of Object.prototype pollution. If an unsanitized source object contained an enumerable __proto__ property, it could extend the native Object.prototype."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/avro\/avro-ipc\/1.10.2\/avro-ipc-1.10.2.jar\/org\/apache\/avro\/ipc\/stats\/static\/jquery-1.4.2.min.js","index": 24 }}}],"properties": {"cvssv2_score": 4.3,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "NONE","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "8.6","cvssv2_impactScore": "2.9","cvssv2_userInteractionRequired": "true","cvssv3_baseScore": 6.1,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "REQUIRED","cvssv3_scope": "CHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "2.8","cvssv3_impactScore": "2.7","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CVE-2020-11022","message": {"text": "CVE-2020-11022 - In jQuery versions greater than or equal to 1.2 and before 3.5.0, passing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/avro\/avro-ipc\/1.10.2\/avro-ipc-1.10.2.jar\/org\/apache\/avro\/ipc\/stats\/static\/jquery-1.4.2.min.js","index": 24 }}}],"properties": {"cvssv2_score": 4.3,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "NONE","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "8.6","cvssv2_impactScore": "2.9","cvssv2_userInteractionRequired": "true","cvssv3_baseScore": 6.1,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "REQUIRED","cvssv3_scope": "CHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "2.8","cvssv3_impactScore": "2.7","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CVE-2020-11023","message": {"text": "CVE-2020-11023 - In jQuery versions greater than or equal to 1.0.3 and before 3.5.0, passing HTML containing <option> elements from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/avro\/avro-ipc\/1.10.2\/avro-ipc-1.10.2.jar\/org\/apache\/avro\/ipc\/stats\/static\/jquery-1.4.2.min.js","index": 24 }}}],"properties": {"cvssv2_score": 4.3,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "NONE","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "8.6","cvssv2_impactScore": "2.9","cvssv2_userInteractionRequired": "true","cvssv3_baseScore": 6.1,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "REQUIRED","cvssv3_scope": "CHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "2.8","cvssv3_impactScore": "2.7","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CVE-2018-10237","message": {"text": "CVE-2018-10237 - Unbounded memory allocation in Google Guava 11.0 through 24.x before 24.1.1 allows remote attackers to conduct denial of service attacks against servers that depend on this library and deserialize attacker-provided data, because the AtomicDoubleArray class (when serialized with Java serialization) and the CompoundOrdering class (when serialized with GWT serialization) perform eager allocation without appropriate checks on what a client has sent and whether the data size is reasonable."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/com\/google\/guava\/guava\/14.0.1\/guava-14.0.1.jar","index": 75 }}}],"properties": {"cvssv2_score": 4.3,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "NONE","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "8.6","cvssv2_impactScore": "2.9","cvssv3_baseScore": 5.9,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "NONE","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "2.2","cvssv3_impactScore": "3.6","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CVE-2020-8908","message": {"text": "CVE-2020-8908 - A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/com\/google\/guava\/guava\/14.0.1\/guava-14.0.1.jar","index": 75 }}}],"properties": {"cvssv2_score": 2.1,"cvssv2_accessVector": "LOCAL","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "LOW","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "3.9","cvssv2_impactScore": "2.9","cvssv3_baseScore": 3.3,"cvssv3_attackVector": "LOCAL","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "LOW","cvssv3_exploitabilityScore": "1.8","cvssv3_impactScore": "1.4","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CVE-2013-2192","message": {"text": "CVE-2013-2192 - The RPC protocol implementation in Apache Hadoop 2.x before 2.0.6-alpha, 0.23.x before 0.23.9, and 1.x before 1.2.1, when the Kerberos security features are enabled, allows man-in-the-middle attackers to disable bidirectional authentication and obtain sensitive information by forcing a downgrade to simple authentication."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.hadoop.thirdparty\/hadoop-shaded-guava\/pom.xml","index": 119 }}}],"properties": {"cvssv2_score": 3.2,"cvssv2_accessVector": "ADJACENT_NETWORK","cvssv2_accessComplexity": "HIGH","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "LOW","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "3.2","cvssv2_impactScore": "4.9","source": "NVD"}}, {"ruleId": "CVE-2015-7430","message": {"text": "CVE-2015-7430 - The Hadoop connector 1.1.1, 2.4, 2.5, and 2.7.0-0 before 2.7.0-3 for IBM Spectrum Scale and General Parallel File System (GPFS) allows local users to read or write to arbitrary GPFS data via unspecified vectors."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.hadoop.thirdparty\/hadoop-shaded-guava\/pom.xml","index": 119 }}}],"properties": {"cvssv2_score": 4.6,"cvssv2_accessVector": "LOCAL","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "3.9","cvssv2_impactScore": "6.4","cvssv2_acInsufInfo": "true","cvssv3_baseScore": 8.4,"cvssv3_attackVector": "LOCAL","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "2.5","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2016-5001","message": {"text": "CVE-2016-5001 - This is an information disclosure vulnerability in Apache Hadoop before 2.6.4 and 2.7.x before 2.7.2 in the short-circuit reads feature of HDFS. A local user on an HDFS DataNode may be able to craft a block token that grants unauthorized read access to random files by guessing certain fields in the token."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.hadoop.thirdparty\/hadoop-shaded-guava\/pom.xml","index": 119 }}}],"properties": {"cvssv2_score": 2.1,"cvssv2_accessVector": "LOCAL","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "LOW","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "3.9","cvssv2_impactScore": "2.9","cvssv3_baseScore": 5.5,"cvssv3_attackVector": "LOCAL","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.8","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2017-3161","message": {"text": "CVE-2017-3161 - The HDFS web UI in Apache Hadoop before 2.7.0 is vulnerable to a cross-site scripting (XSS) attack through an unescaped query parameter."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.hadoop.thirdparty\/hadoop-shaded-guava\/pom.xml","index": 119 }}}],"properties": {"cvssv2_score": 4.3,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "NONE","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "8.6","cvssv2_impactScore": "2.9","cvssv2_userInteractionRequired": "true","cvssv3_baseScore": 6.1,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "REQUIRED","cvssv3_scope": "CHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "2.8","cvssv3_impactScore": "2.7","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2017-3162","message": {"text": "CVE-2017-3162 - HDFS clients interact with a servlet on the DataNode to browse the HDFS namespace. The NameNode is provided as a query parameter that is not validated in Apache Hadoop before 2.7.0."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.apache.hadoop.thirdparty\/hadoop-shaded-guava\/pom.xml","index": 119 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv2_acInsufInfo": "true","cvssv3_baseScore": 7.3,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "LOW","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.4","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2021-28169","message": {"text": "CVE-2021-28169 - For Eclipse Jetty versions <= 9.4.40, <= 10.0.2, <= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `\/concat?\/%2557EB-INF\/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.eclipse.jetty\/jetty-xml\/pom.xml","index": 139 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 5.3,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "1.4","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CVE-2021-34428","message": {"text": "CVE-2021-34428 - For Eclipse Jetty versions <= 9.4.40, <= 10.0.2, <= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/hadoop\/hadoop-client-runtime\/3.3.1\/hadoop-client-runtime-3.3.1.jar\/META-INF\/maven\/org.eclipse.jetty\/jetty-xml\/pom.xml","index": 139 }}}],"properties": {"cvssv2_score": 3.6,"cvssv2_accessVector": "LOCAL","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "LOW","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "3.9","cvssv2_impactScore": "4.9","cvssv3_baseScore": 3.5,"cvssv3_attackVector": "PHYSICAL","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "LOW","cvssv3_exploitabilityScore": "0.9","cvssv3_impactScore": "2.5","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CVE-2018-1000873","message": {"text": "CVE-2018-1000873 - Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/htrace\/htrace-core4\/4.1.0-incubating\/htrace-core4-4.1.0-incubating.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-core\/pom.xml","index": 157 }}}],"properties": {"cvssv2_score": 4.3,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "NONE","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "8.6","cvssv2_impactScore": "2.9","cvssv2_userInteractionRequired": "true","cvssv3_baseScore": 6.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "REQUIRED","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "NONE","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "2.8","cvssv3_impactScore": "3.6","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CVE-2017-15095","message": {"text": "CVE-2017-15095 - A deserialization flaw was discovered in the jackson-databind in versions before 2.8.10 and 2.9.1, which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper. This issue extends the previous flaw CVE-2017-7525 by blacklisting more classes that could be used maliciously."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/htrace\/htrace-core4\/4.1.0-incubating\/htrace-core4-4.1.0-incubating.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-databind\/pom.xml","index": 158 }}}],"properties": {"cvssv3_baseScore": 9.8,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "L","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "H","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "CRITICAL","source": "OSSINDEX"}}, {"ruleId": "CVE-2017-17485","message": {"text": "CVE-2017-17485 - FasterXML jackson-databind through 2.8.10 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the Spring libraries are available in the classpath."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/htrace\/htrace-core4\/4.1.0-incubating\/htrace-core4-4.1.0-incubating.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-databind\/pom.xml","index": 158 }}}],"properties": {"cvssv3_baseScore": 9.8,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "L","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "H","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "CRITICAL","source": "OSSINDEX"}}, {"ruleId": "CVE-2017-7525","message": {"text": "CVE-2017-7525 - A deserialization flaw was discovered in the jackson-databind, versions before 2.6.7.1, 2.7.9.1 and 2.8.9, which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/htrace\/htrace-core4\/4.1.0-incubating\/htrace-core4-4.1.0-incubating.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-databind\/pom.xml","index": 158 }}}],"properties": {"cvssv3_baseScore": 9.8,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "L","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "H","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "CRITICAL","source": "OSSINDEX"}}, {"ruleId": "CVE-2018-1000873","message": {"text": "CVE-2018-1000873 - Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/htrace\/htrace-core4\/4.1.0-incubating\/htrace-core4-4.1.0-incubating.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-databind\/pom.xml","index": 158 }}}],"properties": {"cvssv2_score": 4.3,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "NONE","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "8.6","cvssv2_impactScore": "2.9","cvssv2_userInteractionRequired": "true","cvssv3_baseScore": 6.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "REQUIRED","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "NONE","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "2.8","cvssv3_impactScore": "3.6","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CVE-2018-11307","message": {"text": "CVE-2018-11307 - An issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.5. Use of Jackson default typing along with a gadget class from iBatis allows exfiltration of content. Fixed in 2.7.9.4, 2.8.11.2, and 2.9.6."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/htrace\/htrace-core4\/4.1.0-incubating\/htrace-core4-4.1.0-incubating.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-databind\/pom.xml","index": 158 }}}],"properties": {"cvssv3_baseScore": 9.8,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "L","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "H","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "CRITICAL","source": "OSSINDEX"}}, {"ruleId": "CVE-2018-14718","message": {"text": "CVE-2018-14718 - FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the slf4j-ext class from polymorphic deserialization."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/htrace\/htrace-core4\/4.1.0-incubating\/htrace-core4-4.1.0-incubating.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-databind\/pom.xml","index": 158 }}}],"properties": {"cvssv3_baseScore": 9.8,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "L","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "H","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "CRITICAL","source": "OSSINDEX"}}, {"ruleId": "CVE-2018-5968","message": {"text": "CVE-2018-5968 - FasterXML jackson-databind through 2.8.11 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 and CVE-2017-17485 deserialization flaws. This is exploitable via two different gadgets that bypass a blacklist."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/htrace\/htrace-core4\/4.1.0-incubating\/htrace-core4-4.1.0-incubating.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-databind\/pom.xml","index": 158 }}}],"properties": {"cvssv3_baseScore": 8.1,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "H","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "H","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "HIGH","source": "OSSINDEX"}}, {"ruleId": "CVE-2018-7489","message": {"text": "CVE-2018-7489 - FasterXML jackson-databind before 2.7.9.3, 2.8.x before 2.8.11.1 and 2.9.x before 2.9.5 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the c3p0 libraries are available in the classpath."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/htrace\/htrace-core4\/4.1.0-incubating\/htrace-core4-4.1.0-incubating.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-databind\/pom.xml","index": 158 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2019-14540","message": {"text": "CVE-2019-14540 - A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariConfig."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/htrace\/htrace-core4\/4.1.0-incubating\/htrace-core4-4.1.0-incubating.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-databind\/pom.xml","index": 158 }}}],"properties": {"cvssv3_baseScore": 9.8,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "L","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "H","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "CRITICAL","source": "OSSINDEX"}}, {"ruleId": "CVE-2019-14893","message": {"text": "CVE-2019-14893 - A flaw was discovered in FasterXML jackson-databind in all versions before 2.9.10 and 2.10.0, where it would permit polymorphic deserialization of malicious objects using the xalan JNDI gadget when used in conjunction with polymorphic type handling methods such as `enableDefaultTyping()` or when @JsonTypeInfo is using `Id.CLASS` or `Id.MINIMAL_CLASS` or in any other way which ObjectMapper.readValue might instantiate objects from unsafe sources. An attacker could use this flaw to execute arbitrary code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/htrace\/htrace-core4\/4.1.0-incubating\/htrace-core4-4.1.0-incubating.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-databind\/pom.xml","index": 158 }}}],"properties": {"cvssv3_baseScore": 9.8,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "L","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "H","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "CRITICAL","source": "OSSINDEX"}}, {"ruleId": "CVE-2019-16335","message": {"text": "CVE-2019-16335 - A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariDataSource. This is a different vulnerability than CVE-2019-14540."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/htrace\/htrace-core4\/4.1.0-incubating\/htrace-core4-4.1.0-incubating.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-databind\/pom.xml","index": 158 }}}],"properties": {"cvssv3_baseScore": 9.8,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "L","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "H","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "CRITICAL","source": "OSSINDEX"}}, {"ruleId": "CVE-2019-16942","message": {"text": "CVE-2019-16942 - A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the commons-dbcp (1.4) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of org.apache.commons.dbcp.datasources.SharedPoolDataSource and org.apache.commons.dbcp.datasources.PerUserPoolDataSource mishandling."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/htrace\/htrace-core4\/4.1.0-incubating\/htrace-core4-4.1.0-incubating.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-databind\/pom.xml","index": 158 }}}],"properties": {"cvssv3_baseScore": 9.8,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "L","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "H","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "CRITICAL","source": "OSSINDEX"}}, {"ruleId": "CVE-2019-16943","message": {"text": "CVE-2019-16943 - A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the p6spy (3.8.6) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of com.p6spy.engine.spy.P6DataSource mishandling."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/htrace\/htrace-core4\/4.1.0-incubating\/htrace-core4-4.1.0-incubating.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-databind\/pom.xml","index": 158 }}}],"properties": {"cvssv3_baseScore": 9.8,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "L","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "H","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "CRITICAL","source": "OSSINDEX"}}, {"ruleId": "CVE-2019-17267","message": {"text": "CVE-2019-17267 - A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to net.sf.ehcache.hibernate.EhcacheJtaTransactionManagerLookup."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/htrace\/htrace-core4\/4.1.0-incubating\/htrace-core4-4.1.0-incubating.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-databind\/pom.xml","index": 158 }}}],"properties": {"cvssv3_baseScore": 9.8,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "L","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "H","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "CRITICAL","source": "OSSINDEX"}}, {"ruleId": "CVE-2019-17531","message": {"text": "CVE-2019-17531 - A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the apache-log4j-extra (version 1.2.x) jar in the classpath, and an attacker can provide a JNDI service to access, it is possible to make the service execute a malicious payload."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/htrace\/htrace-core4\/4.1.0-incubating\/htrace-core4-4.1.0-incubating.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-databind\/pom.xml","index": 158 }}}],"properties": {"cvssv3_baseScore": 9.8,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "L","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "H","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "CRITICAL","source": "OSSINDEX"}}, {"ruleId": "CVE-2019-20330","message": {"text": "CVE-2019-20330 - FasterXML jackson-databind 2.x before 2.9.10.2 lacks certain net.sf.ehcache blocking."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/htrace\/htrace-core4\/4.1.0-incubating\/htrace-core4-4.1.0-incubating.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-databind\/pom.xml","index": 158 }}}],"properties": {"cvssv3_baseScore": 9.8,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "L","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "H","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "CRITICAL","source": "OSSINDEX"}}, {"ruleId": "CVE-2020-35490","message": {"text": "CVE-2020-35490 - FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.datasources.PerUserPoolDataSource."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/htrace\/htrace-core4\/4.1.0-incubating\/htrace-core4-4.1.0-incubating.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-databind\/pom.xml","index": 158 }}}],"properties": {"cvssv2_score": 6.8,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "8.6","cvssv2_impactScore": "6.4","cvssv3_baseScore": 8.1,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "2.2","cvssv3_impactScore": "5.9","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CVE-2020-35491","message": {"text": "CVE-2020-35491 - FasterXML jackson-databind 2.x before 2.9.10.8 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.dbcp2.datasources.SharedPoolDataSource."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/htrace\/htrace-core4\/4.1.0-incubating\/htrace-core4-4.1.0-incubating.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-databind\/pom.xml","index": 158 }}}],"properties": {"cvssv2_score": 6.8,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "8.6","cvssv2_impactScore": "6.4","cvssv3_baseScore": 8.1,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "2.2","cvssv3_impactScore": "5.9","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CWE-611: Improper Restriction of XML External Entity Reference ('XXE')","message": {"text": "CWE-611: Improper Restriction of XML External Entity Reference ('XXE') - The software processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/htrace\/htrace-core4\/4.1.0-incubating\/htrace-core4-4.1.0-incubating.jar\/META-INF\/maven\/com.fasterxml.jackson.core\/jackson-databind\/pom.xml","index": 158 }}}],"properties": {"cvssv3_baseScore": 5.4,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "L","cvssv3_privilegesRequired": "L","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "L","cvssv3_integrityImpact": "L","cvssv3_availabilityImpact": "N","cvssv3_baseSeverity": "MEDIUM","source": "OSSINDEX"}}, {"ruleId": "CVE-2017-15095","message": {"text": "CVE-2017-15095 - A deserialization flaw was discovered in the jackson-databind in versions before 2.8.10 and 2.9.1, which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper. This issue extends the previous flaw CVE-2017-7525 by blacklisting more classes that could be used maliciously."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/codehaus\/jackson\/jackson-mapper-asl\/1.9.13\/jackson-mapper-asl-1.9.13.jar","index": 168 }}}],"properties": {"cvssv3_baseScore": 9.8,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "L","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "H","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "CRITICAL","source": "OSSINDEX"}}, {"ruleId": "CVE-2017-17485","message": {"text": "CVE-2017-17485 - FasterXML jackson-databind through 2.8.10 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the Spring libraries are available in the classpath."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/codehaus\/jackson\/jackson-mapper-asl\/1.9.13\/jackson-mapper-asl-1.9.13.jar","index": 168 }}}],"properties": {"cvssv3_baseScore": 9.8,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "L","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "H","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "CRITICAL","source": "OSSINDEX"}}, {"ruleId": "CVE-2017-7525","message": {"text": "CVE-2017-7525 - A deserialization flaw was discovered in the jackson-databind, versions before 2.6.7.1, 2.7.9.1 and 2.8.9, which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/codehaus\/jackson\/jackson-mapper-asl\/1.9.13\/jackson-mapper-asl-1.9.13.jar","index": 168 }}}],"properties": {"cvssv3_baseScore": 9.8,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "L","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "H","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "CRITICAL","source": "OSSINDEX"}}, {"ruleId": "CVE-2018-1000873","message": {"text": "CVE-2018-1000873 - Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/codehaus\/jackson\/jackson-mapper-asl\/1.9.13\/jackson-mapper-asl-1.9.13.jar","index": 168 }}}],"properties": {"cvssv3_baseScore": 6.5,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "L","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "R","cvssv3_scope": "U","cvssv3_confidentialityImpact": "N","cvssv3_integrityImpact": "N","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "MEDIUM","source": "OSSINDEX"}}, {"ruleId": "CVE-2018-14718","message": {"text": "CVE-2018-14718 - FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the slf4j-ext class from polymorphic deserialization."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/codehaus\/jackson\/jackson-mapper-asl\/1.9.13\/jackson-mapper-asl-1.9.13.jar","index": 168 }}}],"properties": {"cvssv3_baseScore": 9.8,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "L","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "H","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "CRITICAL","source": "OSSINDEX"}}, {"ruleId": "CVE-2018-5968","message": {"text": "CVE-2018-5968 - FasterXML jackson-databind through 2.8.11 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 and CVE-2017-17485 deserialization flaws. This is exploitable via two different gadgets that bypass a blacklist."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/codehaus\/jackson\/jackson-mapper-asl\/1.9.13\/jackson-mapper-asl-1.9.13.jar","index": 168 }}}],"properties": {"cvssv3_baseScore": 8.1,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "H","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "H","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "HIGH","source": "OSSINDEX"}}, {"ruleId": "CVE-2018-7489","message": {"text": "CVE-2018-7489 - FasterXML jackson-databind before 2.7.9.3, 2.8.x before 2.8.11.1 and 2.9.x before 2.9.5 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the c3p0 libraries are available in the classpath."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/codehaus\/jackson\/jackson-mapper-asl\/1.9.13\/jackson-mapper-asl-1.9.13.jar","index": 168 }}}],"properties": {"cvssv3_baseScore": 9.8,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "L","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "H","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "CRITICAL","source": "OSSINDEX"}}, {"ruleId": "CVE-2019-10172","message": {"text": "CVE-2019-10172 - A flaw was found in org.codehaus.jackson:jackson-mapper-asl:1.9.x libraries. XML external entity vulnerabilities similar CVE-2016-3720 also affects codehaus jackson-mapper-asl libraries but in different classes."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/codehaus\/jackson\/jackson-mapper-asl\/1.9.13\/jackson-mapper-asl-1.9.13.jar","index": 168 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "NONE","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "NONE","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CVE-2019-14540","message": {"text": "CVE-2019-14540 - A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariConfig."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/codehaus\/jackson\/jackson-mapper-asl\/1.9.13\/jackson-mapper-asl-1.9.13.jar","index": 168 }}}],"properties": {"cvssv3_baseScore": 9.8,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "L","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "H","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "CRITICAL","source": "OSSINDEX"}}, {"ruleId": "CVE-2019-14893","message": {"text": "CVE-2019-14893 - A flaw was discovered in FasterXML jackson-databind in all versions before 2.9.10 and 2.10.0, where it would permit polymorphic deserialization of malicious objects using the xalan JNDI gadget when used in conjunction with polymorphic type handling methods such as `enableDefaultTyping()` or when @JsonTypeInfo is using `Id.CLASS` or `Id.MINIMAL_CLASS` or in any other way which ObjectMapper.readValue might instantiate objects from unsafe sources. An attacker could use this flaw to execute arbitrary code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/codehaus\/jackson\/jackson-mapper-asl\/1.9.13\/jackson-mapper-asl-1.9.13.jar","index": 168 }}}],"properties": {"cvssv3_baseScore": 9.8,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "L","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "H","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "CRITICAL","source": "OSSINDEX"}}, {"ruleId": "CVE-2019-16335","message": {"text": "CVE-2019-16335 - A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariDataSource. This is a different vulnerability than CVE-2019-14540."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/codehaus\/jackson\/jackson-mapper-asl\/1.9.13\/jackson-mapper-asl-1.9.13.jar","index": 168 }}}],"properties": {"cvssv3_baseScore": 9.8,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "L","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "H","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "CRITICAL","source": "OSSINDEX"}}, {"ruleId": "CVE-2019-17267","message": {"text": "CVE-2019-17267 - A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to net.sf.ehcache.hibernate.EhcacheJtaTransactionManagerLookup."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/codehaus\/jackson\/jackson-mapper-asl\/1.9.13\/jackson-mapper-asl-1.9.13.jar","index": 168 }}}],"properties": {"cvssv3_baseScore": 9.8,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "L","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "H","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "H","cvssv3_baseSeverity": "CRITICAL","source": "OSSINDEX"}}, {"ruleId": "CVE-2018-21234","message": {"text": "CVE-2018-21234 - Jodd before 5.0.4 performs Deserialization of Untrusted JSON Data when setClassMetadataName is set."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/jodd\/jodd-core\/3.5.2\/jodd-core-3.5.2.jar","index": 195 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CVE-2016-5397","message": {"text": "CVE-2016-5397 - The Apache Thrift Go client library exposed the potential during code generation for command injection due to using an external formatting tool. Affected Apache Thrift 0.9.3 and older, Fixed in Apache Thrift 0.10.0."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/thrift\/libfb303\/0.9.3\/libfb303-0.9.3.jar","index": 217 }}}],"properties": {"cvssv2_score": 9.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "COMPLETE","cvssv2_integrityImpact": "COMPLETE","cvssv2_availabilityImpact": "COMPLETE","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "8.0","cvssv2_impactScore": "10.0","cvssv3_baseScore": 8.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "2.8","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11798","message": {"text": "CVE-2018-11798 - The Apache Thrift Node.js static web server in versions 0.9.2 through 0.11.0 have been determined to contain a security vulnerability in which a remote user has the ability to access files outside the set webservers docroot path."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/thrift\/libfb303\/0.9.3\/libfb303-0.9.3.jar","index": 217 }}}],"properties": {"cvssv2_score": 4.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "8.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 6.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "2.8","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-1320","message": {"text": "CVE-2018-1320 - Apache Thrift Java client library versions 0.5.0 through 0.11.0 can bypass SASL negotiation isComplete validation in the org.apache.thrift.transport.TSaslTransport class. An assert used to determine if the SASL handshake had successfully completed could be disabled in production settings making the validation incomplete."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/thrift\/libfb303\/0.9.3\/libfb303-0.9.3.jar","index": 217 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "NONE","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "NONE","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CVE-2019-0205","message": {"text": "CVE-2019-0205 - In Apache Thrift all versions up to and including 0.12.0, a server or client may run into an endless loop when feed with specific input data. Because the issue had already been partially fixed in version 0.11.0, depending on the installed version it affects only certain language bindings."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/thrift\/libfb303\/0.9.3\/libfb303-0.9.3.jar","index": 217 }}}],"properties": {"cvssv2_score": 7.8,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "NONE","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "COMPLETE","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "NONE","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CVE-2019-0210","message": {"text": "CVE-2019-0210 - In Apache Thrift 0.9.3 to 0.12.0, a server implemented in Go using TJSONProtocol or TSimpleJSONProtocol may panic when feed with invalid input data."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/thrift\/libfb303\/0.9.3\/libfb303-0.9.3.jar","index": 217 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "NONE","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "NONE","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CVE-2020-13949","message": {"text": "CVE-2020-13949 - In Apache Thrift 0.9.3 to 0.13.0, malicious RPC clients could send short messages which would result in a large memory allocation, potentially leading to denial of service."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/thrift\/libfb303\/0.9.3\/libfb303-0.9.3.jar","index": 217 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "NONE","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "NONE","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CVE-2019-0205","message": {"text": "CVE-2019-0205 - In Apache Thrift all versions up to and including 0.12.0, a server or client may run into an endless loop when feed with specific input data. Because the issue had already been partially fixed in version 0.11.0, depending on the installed version it affects only certain language bindings."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/thrift\/libthrift\/0.12.0\/libthrift-0.12.0.jar","index": 218 }}}],"properties": {"cvssv2_score": 7.8,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "NONE","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "COMPLETE","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "NONE","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CVE-2019-0210","message": {"text": "CVE-2019-0210 - In Apache Thrift 0.9.3 to 0.12.0, a server implemented in Go using TJSONProtocol or TSimpleJSONProtocol may panic when feed with invalid input data."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/thrift\/libthrift\/0.12.0\/libthrift-0.12.0.jar","index": 218 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "NONE","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "NONE","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CVE-2020-13949","message": {"text": "CVE-2020-13949 - In Apache Thrift 0.9.3 to 0.13.0, malicious RPC clients could send short messages which would result in a large memory allocation, potentially leading to denial of service."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/thrift\/libthrift\/0.12.0\/libthrift-0.12.0.jar","index": 218 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "NONE","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "NONE","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CVE-2019-17571","message": {"text": "CVE-2019-17571 - Included in Log4j 1.2 is a SocketServer class that is vulnerable to deserialization of untrusted data which can be exploited to remotely execute arbitrary code when combined with a deserialization gadget when listening to untrusted network traffic for log data. This affects Log4j versions up to 1.2 up to 1.2.17."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/log4j\/log4j\/1.2.17\/log4j-1.2.17.jar","index": 220 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CVE-2020-9488","message": {"text": "CVE-2020-9488 - Improper validation of certificate with host mismatch in Apache Log4j SMTP appender. This could allow an SMTPS connection to be intercepted by a man-in-the-middle attack which could leak any log messages sent through that appender."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/log4j\/log4j\/1.2.17\/log4j-1.2.17.jar","index": 220 }}}],"properties": {"cvssv2_score": 4.3,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "8.6","cvssv2_impactScore": "2.9","cvssv3_baseScore": 3.7,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "LOW","cvssv3_exploitabilityScore": "2.2","cvssv3_impactScore": "1.4","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml","index": 234 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml","index": 234 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml","index": 234 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml","index": 235 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml","index": 235 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml","index": 235 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml","index": 236 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml","index": 236 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml","index": 236 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml","index": 237 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml","index": 237 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml","index": 237 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml","index": 238 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml","index": 238 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml","index": 238 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml","index": 239 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml","index": 239 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml","index": 239 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml","index": 240 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml","index": 240 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/catalyst\/pom.xml","index": 240 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 241 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 241 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 241 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 242 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 242 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 242 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 243 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 243 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 243 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 244 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 244 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 244 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 245 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 245 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 245 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 246 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 246 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 246 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 247 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 247 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 247 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 248 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 248 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 248 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 249 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 249 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 249 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 250 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 250 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 250 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 251 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 251 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 251 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 252 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 252 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 252 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 253 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 253 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/core\/pom.xml","index": 253 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/graphx\/pom.xml","index": 254 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/graphx\/pom.xml","index": 254 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/graphx\/pom.xml","index": 254 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/graphx\/pom.xml","index": 255 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/graphx\/pom.xml","index": 255 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/graphx\/pom.xml","index": 255 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/graphx\/pom.xml","index": 256 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/graphx\/pom.xml","index": 256 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/graphx\/pom.xml","index": 256 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/hive\/pom.xml","index": 257 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/hive\/pom.xml","index": 257 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/hive\/pom.xml","index": 257 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 258 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 258 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 258 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 259 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 259 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 259 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 260 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 260 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 260 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 261 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 261 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 261 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 262 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 262 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 262 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 263 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 263 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 263 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 264 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 264 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 264 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 265 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 265 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 265 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 266 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 266 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 266 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 267 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 267 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 267 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 268 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 268 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 268 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 269 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 269 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 269 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 270 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 270 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 270 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 271 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 271 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/kvstore\/pom.xml","index": 271 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 272 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 272 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 272 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 273 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 273 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 273 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 274 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 274 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 274 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 275 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 275 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 275 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 276 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 276 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 276 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 277 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 277 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 277 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 278 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 278 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 278 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 279 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 279 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 279 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 280 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 280 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 280 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 281 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 281 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 281 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 282 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 282 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 282 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 283 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 283 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 283 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 284 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 284 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 284 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 285 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 285 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/launcher\/pom.xml","index": 285 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/mllib-local\/pom.xml","index": 286 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/mllib-local\/pom.xml","index": 286 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/mllib-local\/pom.xml","index": 286 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/mllib-local\/pom.xml","index": 287 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/mllib-local\/pom.xml","index": 287 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/mllib-local\/pom.xml","index": 287 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/mllib-local\/pom.xml","index": 288 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/mllib-local\/pom.xml","index": 288 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/mllib-local\/pom.xml","index": 288 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/mllib-local\/pom.xml","index": 289 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/mllib-local\/pom.xml","index": 289 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/mllib-local\/pom.xml","index": 289 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/mllib\/pom.xml","index": 290 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/mllib\/pom.xml","index": 290 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/mllib\/pom.xml","index": 290 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/mllib\/pom.xml","index": 291 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/mllib\/pom.xml","index": 291 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/mllib\/pom.xml","index": 291 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 292 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 292 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 292 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 293 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 293 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 293 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 294 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 294 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 294 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 295 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 295 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 295 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 296 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 296 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 296 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 297 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 297 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 297 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 298 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 298 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 298 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 299 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 299 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 299 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 300 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 300 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 300 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 301 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 301 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 301 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 302 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 302 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 302 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 303 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 303 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 303 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 304 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 304 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 304 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 305 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 305 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 305 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 306 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 306 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-common\/pom.xml","index": 306 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 307 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 307 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 307 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 308 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 308 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 308 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 309 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 309 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 309 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 310 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 310 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 310 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 311 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 311 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 311 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 312 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 312 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 312 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 313 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 313 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 313 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 314 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 314 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 314 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 315 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 315 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 315 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 316 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 316 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 316 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 317 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 317 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 317 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 318 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 318 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 318 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 319 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 319 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 319 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 320 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 320 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/network-shuffle\/pom.xml","index": 320 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/repl\/pom.xml","index": 321 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/repl\/pom.xml","index": 321 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/repl\/pom.xml","index": 321 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml","index": 322 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml","index": 322 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml","index": 322 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml","index": 323 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml","index": 323 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml","index": 323 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml","index": 324 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml","index": 324 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml","index": 324 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml","index": 325 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml","index": 325 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml","index": 325 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml","index": 326 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml","index": 326 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml","index": 326 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml","index": 327 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml","index": 327 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml","index": 327 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml","index": 328 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml","index": 328 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml","index": 328 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml","index": 329 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml","index": 329 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/sketch\/pom.xml","index": 329 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/external\/kafka-0-10-sql\/pom.xml","index": 330 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/external\/kafka-0-10-sql\/pom.xml","index": 330 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/external\/kafka-0-10-sql\/pom.xml","index": 330 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/pom.xml","index": 331 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/pom.xml","index": 331 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/pom.xml","index": 331 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/pom.xml","index": 332 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/pom.xml","index": 332 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/pom.xml","index": 332 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/pom.xml","index": 333 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/pom.xml","index": 333 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/pom.xml","index": 333 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/pom.xml","index": 334 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/pom.xml","index": 334 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/pom.xml","index": 334 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/pom.xml","index": 335 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/pom.xml","index": 335 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/pom.xml","index": 335 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/pom.xml","index": 336 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/pom.xml","index": 336 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/sql\/core\/pom.xml","index": 336 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/external\/kafka-0-10\/pom.xml","index": 337 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/external\/kafka-0-10\/pom.xml","index": 337 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/external\/kafka-0-10\/pom.xml","index": 337 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/streaming\/pom.xml","index": 338 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/streaming\/pom.xml","index": 338 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/streaming\/pom.xml","index": 338 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/streaming\/pom.xml","index": 339 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/streaming\/pom.xml","index": 339 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/streaming\/pom.xml","index": 339 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/streaming\/pom.xml","index": 340 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/streaming\/pom.xml","index": 340 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/streaming\/pom.xml","index": 340 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/streaming\/pom.xml","index": 341 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/streaming\/pom.xml","index": 341 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/streaming\/pom.xml","index": 341 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/streaming\/pom.xml","index": 342 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/streaming\/pom.xml","index": 342 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/streaming\/pom.xml","index": 342 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 343 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 343 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 343 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 344 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 344 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 344 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 345 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 345 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 345 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 346 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 346 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 346 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 347 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 347 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 347 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 348 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 348 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 348 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 349 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 349 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 349 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 350 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 350 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 350 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 351 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 351 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 351 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 352 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 352 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 352 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 353 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 353 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 353 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 354 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 354 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 354 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 355 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 355 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 355 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 356 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 356 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 356 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 357 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 357 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 357 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 358 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 358 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 358 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 359 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 359 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 359 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 360 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 360 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 360 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 361 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 361 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 361 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 362 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 362 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/tags\/pom.xml","index": 362 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/external\/kafka-0-10-token-provider\/pom.xml","index": 363 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/external\/kafka-0-10-token-provider\/pom.xml","index": 363 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/external\/kafka-0-10-token-provider\/pom.xml","index": 363 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/external\/kafka-0-10-token-provider\/pom.xml","index": 364 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/external\/kafka-0-10-token-provider\/pom.xml","index": 364 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/external\/kafka-0-10-token-provider\/pom.xml","index": 364 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/external\/kafka-0-10-token-provider\/pom.xml","index": 365 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/external\/kafka-0-10-token-provider\/pom.xml","index": 365 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/external\/kafka-0-10-token-provider\/pom.xml","index": 365 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 366 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 366 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 366 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 367 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 367 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 367 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 368 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 368 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 368 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 369 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 369 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 369 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 370 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 370 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 370 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 371 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 371 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 371 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 372 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 372 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 372 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 373 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 373 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 373 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 374 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 374 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 374 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 375 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 375 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 375 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 376 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 376 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 376 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 377 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 377 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 377 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 378 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 378 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 378 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11770","message": {"text": "CVE-2018-11770 - From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 379 }}}],"properties": {"cvssv2_score": 4.9,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "6.8","cvssv2_impactScore": "4.9","cvssv3_baseScore": 4.2,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.6","cvssv3_impactScore": "2.5","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-11804","message": {"text": "CVE-2018-11804 - Spark's Apache Maven-based build includes a convenience script, 'build\/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 379 }}}],"properties": {"cvssv2_score": 5.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "NONE","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "2.9","cvssv3_baseScore": 7.5,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "NONE","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/temp2\/spark\/common\/unsafe\/pom.xml","index": 379 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2017-7678","message": {"text": "CVE-2017-7678 - In Apache Spark before 2.2.0, it is possible for an attacker to take advantage of a user's trust in the server to trick them into visiting a link that points to a shared Spark cluster and submits data including MHTML to the Spark master, or history server. This data, which could contain a script, would then be reflected back to the user and could be evaluated and executed by MS Windows-based clients. It is not an attack on Spark itself, but on the user, who may then execute the script inadvertently when viewing elements of the Spark web UIs."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/spark-project\/spark\/unused\/1.0.0\/unused-1.0.0.jar","index": 435 }}}],"properties": {"cvssv2_score": 4.3,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "NONE","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "MEDIUM","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "8.6","cvssv2_impactScore": "2.9","cvssv2_userInteractionRequired": "true","cvssv3_baseScore": 6.1,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "REQUIRED","cvssv3_scope": "CHANGED","cvssv3_confidentialityImpact": "LOW","cvssv3_integrityImpact": "LOW","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "2.8","cvssv3_impactScore": "2.7","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-1334","message": {"text": "CVE-2018-1334 - In Apache Spark 1.0.0 to 2.1.2, 2.2.0 to 2.2.1, and 2.3.0, when using PySpark or SparkR, it's possible for a different local user to connect to the Spark application and impersonate the user running the Spark application."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/spark-project\/spark\/unused\/1.0.0\/unused-1.0.0.jar","index": 435 }}}],"properties": {"cvssv2_score": 1.9,"cvssv2_accessVector": "LOCAL","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "NONE","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "NONE","cvssv2_severity": "LOW","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "3.4","cvssv2_impactScore": "2.9","cvssv3_baseScore": 4.7,"cvssv3_attackVector": "LOCAL","cvssv3_attackComplexity": "HIGH","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "NONE","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "NONE","cvssv3_baseSeverity": "MEDIUM","cvssv3_exploitabilityScore": "1.0","cvssv3_impactScore": "3.6","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2018-17190","message": {"text": "CVE-2018-17190 - In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/spark-project\/spark\/unused\/1.0.0\/unused-1.0.0.jar","index": 435 }}}],"properties": {"cvssv2_score": 7.5,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "PARTIAL","cvssv2_integrityImpact": "PARTIAL","cvssv2_availabilityImpact": "PARTIAL","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "10.0","cvssv2_impactScore": "6.4","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.0","source": "NVD"}}, {"ruleId": "CVE-2020-9480","message": {"text": "CVE-2020-9480 - In Apache Spark 2.4.5 and earlier, a standalone resource manager's master may be configured to require authentication (spark.authenticate) via a shared secret. When enabled, however, a specially-crafted RPC to the master can succeed in starting an application's resources on the Spark cluster, even without the shared key. This can be leveraged to execute shell commands on the host machine. This does not affect Spark clusters using other resource managers (YARN, Mesos, etc)."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/spark-project\/spark\/unused\/1.0.0\/unused-1.0.0.jar","index": 435 }}}],"properties": {"cvssv2_score": 9.3,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "MEDIUM","cvssv2_authenticationr": "NONE","cvssv2_confidentialImpact": "COMPLETE","cvssv2_integrityImpact": "COMPLETE","cvssv2_availabilityImpact": "COMPLETE","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "8.6","cvssv2_impactScore": "10.0","cvssv3_baseScore": 9.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "NONE","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "CRITICAL","cvssv3_exploitabilityScore": "3.9","cvssv3_impactScore": "5.9","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CVE-2020-13936","message": {"text": "CVE-2020-13936 - An attacker that is able to modify Velocity templates may execute arbitrary Java code or run arbitrary system commands with the same privileges as the account running the Servlet container. This applies to applications that allow untrusted users to upload\/modify velocity templates running Apache Velocity Engine versions up to 2.2."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/velocity\/velocity\/1.5\/velocity-1.5.jar","index": 437 }}}],"properties": {"cvssv2_score": 9.0,"cvssv2_accessVector": "NETWORK","cvssv2_accessComplexity": "LOW","cvssv2_authenticationr": "SINGLE","cvssv2_confidentialImpact": "COMPLETE","cvssv2_integrityImpact": "COMPLETE","cvssv2_availabilityImpact": "COMPLETE","cvssv2_severity": "HIGH","cvssv2_version": "2.0","cvssv2_exploitabilityScore": "8.0","cvssv2_impactScore": "10.0","cvssv3_baseScore": 8.8,"cvssv3_attackVector": "NETWORK","cvssv3_attackComplexity": "LOW","cvssv3_privilegesRequired": "LOW","cvssv3_userInteraction": "NONE","cvssv3_scope": "UNCHANGED","cvssv3_confidentialityImpact": "HIGH","cvssv3_integrityImpact": "HIGH","cvssv3_availabilityImpact": "HIGH","cvssv3_baseSeverity": "HIGH","cvssv3_exploitabilityScore": "2.8","cvssv3_impactScore": "5.9","cvssv3_version": "3.1","source": "NVD"}}, {"ruleId": "CVE-2021-21409","message": {"text": "CVE-2021-21409 - Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP\/1.1. This is a followup of GHSA-wm47-8v5p-wjpj\/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final."},"level": "error","locations": [{"physicalLocation": {"artifactLocation": {"uri": "file:///\/root\/.m2\/repository\/org\/apache\/zookeeper\/zookeeper\/3.6.2\/zookeeper-3.6.2.jar","index": 442 }}}],"properties": {"cvssv3_baseScore": 5.9,"cvssv3_attackVector": "N","cvssv3_attackComplexity": "H","cvssv3_privilegesRequired": "N","cvssv3_userInteraction": "N","cvssv3_scope": "U","cvssv3_confidentialityImpact": "N","cvssv3_integrityImpact": "H","cvssv3_availabilityImpact": "N","cvssv3_baseSeverity": "MEDIUM","source": "OSSINDEX"}}]}]}